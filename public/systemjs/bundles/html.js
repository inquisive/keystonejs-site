System.register("app/html/markedApi",[],function(a){"use strict";var b;return{setters:[],execute:function(){b={en:{"0.2.x":{keystone:{list:[{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"bindEmailTestRoutes",html:'<h4 id="-bindemailtestroutes-app-emails-">.bindEmailTestRoutes( app, emails )</h4>\n<blockquote>\n<p><em>@param</em> <strong>app</strong> <em>{Object}</em>   Express app\n<em>@param</em> <strong>emails</strong> <em>{Object}</em><br><em>@api</em> <strong>public</strong> </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/core/bindEmailTestRoutes.js">  <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",main:"keystone",html:'<h4 id="new-keystone-">new Keystone( )</h4>\n<blockquote>\n<p><em>@return</em> <strong>Instance</strong>   </p>\n</blockquote>\n<p><div class="code-header" ><h4> The Keystone instance is a global object.</h4></div><pre class=" language-javascript  "><code  class=" language-javascript">var keystone = require(&#39;keystone&#39;); </code></pre> </p>\n<p><div class="code-header" ><h4> defaults</h4>Set with:<br /><code>keystone.init({ &#39;key&#39;: value, ... })</code> <br />  <code>keystone.options({ &#39;key&#39;: value, ... })</code><br /><code>keystone.set(&#39;key&#39;, value)</code>  </div><pre class=" language-javascript  "><code  class=" language-javascript">this.express = express; // exposes express\nthis.lists = {};\nthis.paths = {}; </p>\n<p>this._options = {\n    &#39;name&#39;: &#39;Keystone&#39;,\n    &#39;brand&#39;: &#39;Keystone&#39;,\n    &#39;compress&#39;: true,\n    &#39;headless&#39;: false,\n    &#39;logger&#39;: &#39;:method :url :status :response-time ms&#39;,\n    &#39;auto update&#39;: false,\n    &#39;model prefix&#39;: null,\n    &#39;module root&#39;: moduleRoot,\n    &#39;frame guard&#39;: &#39;sameorigin&#39;,\n    &#39;env&#39;: process.env.NODE_ENV || &#39;development&#39;,\n    &#39;port&#39;: process.env.PORT || process.env.OPENSHIFT_NODEJS_PORT,\n    &#39;host&#39;: process.env.HOST || process.env.IP || process.env.OPENSHIFT_NODEJS_IP,\n    &#39;listen&#39;: process.env.LISTEN,\n    &#39;ssl&#39;: process.env.SSL,\n    &#39;ssl port&#39;: process.env.SSL_PORT,\n    &#39;ssl host&#39;: process.env.SSL_HOST,\n    &#39;ssl key&#39;: process.env.SSL_KEY,\n    &#39;ssl cert&#39;: process.env.SSL_CERT,\n    &#39;cookie secret&#39;: process.env.COOKIE_SECRET,\n    &#39;cookie signin&#39;: this.get(&#39;env&#39;) === &#39;development&#39;) ? true : false,\n    &#39;embedly api key&#39;: process.env.EMBEDLY_API_KEY || process.env.EMBEDLY_APIKEY,\n    &#39;mandrill api key&#39;: process.env.MANDRILL_API_KEY || process.env.MANDRILL_APIKEY,\n    &#39;mandrill username&#39;: process.env.MANDRILL_USERNAME,\n    &#39;google api key&#39;:  process.env.GOOGLE_BROWSER_KEY,\n    &#39;google server api key&#39;:  process.env.GOOGLE_SERVER_KEY,\n    &#39;ga property&#39;:  process.env.GA_PROPERTY,\n    &#39;ga domain&#39;: process.env.GA_DOMAIN,\n    &#39;chartbeat property&#39;: process.env.CHARTBEAT_PROPERTY,\n    &#39;chartbeat domain&#39;: process.env.CHARTBEAT_DOMAIN,\n    &#39;allowed ip ranges&#39;: process.env.ALLOWED_IP_RANGES,\n    // process.env.CLOUDINARY_URL is processed by the cloudinary package when this is set\n    &#39;cloudinary config&#39;: process.env.CLOUDINARY_URL ? true : false,\n    // s3 conditional on process.env.S3_<em> vars\n    &#39;s3 config&#39;: { bucket: process.env.S3_BUCKET, key: process.env.S3_KEY, secret: process.env.S3_SECRET, region: process.env.S3<em>REGION }, \n    // azure conditional on process.env.AZURE</em></em> vars\n    &#39;azurefile config&#39;: { account: process.env.AZURE_STORAGE_ACCOUNT, key: process.env.AZURE_STORAGE_ACCESS_KEY },</p>\n<p>};</p>\n<p></code></pre> </p>\n<p><div class="code-header addGitHubLink" data-file="index.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"connect",html:'<h4 id="-connect-_app_-_mongoose_-">.connect( [<em>app</em>, <em>mongoose</em>] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>app</strong> <em>{Express()}</em> - <em>Optional</em> Custom Express instance<br><em>@param</em> <strong>mongoose</strong> <em>{Object}</em> - <em>Optional</em> Custom Mongoose instance<br><em>@return</em> <strong>this</strong> </p>\n</blockquote>\n<p>Set the <strong>Mongoose</strong> and/or <strong>Express</strong> instance for Keystone to use.  Order is not .<br><strong>Must</strong> be called before <code>.init()</code></p>\n<p><div class="code-header"> <h4>Custom Express App </h4></div><pre class=" language-javascript"><code class="language-javascript">\nvar app = express(),\n    keystone = require(&#39;keystone&#39;),\n    server,\n    EventEmitter = require(&quot;events&quot;).EventEmitter;</p>\n<p>var theEvents = new EventEmitter();</p>\n<p>keystone.connect(app);</p>\n<p>keystone.init({\n    // config here\n});</p>\n<p>keystone.import(&#39;models&#39;);</p>\n<p>theEvents.on(&#39;keystone ready&#39;,function() {\n    var server = app.listen(3000);\n    console.log(&#39;server started&#39;);\n});</p>\n<p>keystone.mount({\n        onMount: function() {\n            theEvents.emit(&#39;keystone ready&#39;);\n        }\n});\n</code></pre></p>\n<p><div class="code-header"> <h4> Custom Express App with Mongoose </h4></div><pre class=" language-javascript"><code class=" language-javascript">\nvar mongoose = require(&#39;mongoose&#39;),\n    app = express(),\n    keystone = require(&#39;keystone&#39;);</p>\n<p>mongoose.connect(&#39;localhost&#39;, &#39;dbname&#39;);</p>\n<p>keystone.connect(mongoose,app);</p>\n<p>keystone.init({\n    // config here\n});</p>\n<p>keystone.import(&#39;models&#39;);</p>\n<p>keystone.start();\n</code></pre></p>\n<p><div class="code-header"> <h4> Mongoose only - No web server </h4></div><pre class=" language-javascript"><code class=" language-javascript">\nvar mongoose = require(&#39;mongoose&#39;),\n    keystone = require(&#39;keystone&#39;);</p>\n<p>keystone.connect(mongoose,app);</p>\n<p>keystone.init({\n    // config here\n});</p>\n<p>keystone.import(&#39;models&#39;);</p>\n<p>mongoose.connect(&#39;localhost&#39;, &#39;dbname&#39;);</p>\n<p>mongoose.connection.on(&#39;open&#39;, function() {\n    // ready to do things, e.g.\n    var User = keystone.list(&#39;User&#39;);\n    new User.model().save();\n});\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/core/connect.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"cors",html:'<h4 id="-cors">.cors</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Adds CORS headers to the response.</h4></div><pre class=" language-javascript"><code class="language-javascript"> app.all(&#39;/api*&#39;, keystone.middleware.cors);\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/middleware/cors.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"createItems",html:'<h4 id="-createitems-data-_options_-callback-">.createItems( data[, <em>options</em>], callback )</h4>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> <em>{Object}</em>  - Create item data<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - <em>Optional</em> Object of options<br><em>@param</em> <strong>callback</strong> <em>{Function}</em>  - Callback function on done or error<br><em>@return</em> <strong>callback</strong> </p>\n</blockquote>\n<p>Keystone&#39;s <code>createItems</code> function is a simple but powerful way to populate your database with data.</p>\n<p>It can be used to create <a href="http://en.wikipedia.org/wiki/Test_fixture">test fixtures</a> or initialise your database with default content / users / etc.</p>\n<p>There&#39;s also a shorthand syntax that can be used within update files; if you are using the <code>auto updates</code> feature, any file that exports a <code>create</code> object will automatically be wrapped and the data will be created.</p>\n<p><code>createItems</code> takes two passes at the data it is provided, first creating the items and retaining references by key (if provided) that can be used to populate relationships in the second pass. This makes it easy to create related data without asynchronous nesting (which for data creation sometimes ends up in knots).</p>\n<p>The <code>data</code> argument should be an <code>Object</code> containing an <code>Array</code> for each <code>List</code> you want to populate. Each object in the array contains the data for a single item.</p>\n<p>Each data property should match to a field path (or sub-field path) - all paths recognised by the <code>UpdateHandler</code> are usable.</p>\n<p>A special property, <code>__ref</code>, can be set with a string value that is used to reference the item in relationships.</p>\n<p>Relationship fields should contain either a string matching another item&#39;s <code>__ref</code> property, or (for <code>many: true</code> relationship fields) can contain an array of strings.</p>\n<p>The <code>options</code> parameter can be used to override the default options.  </p>\n<pre><code class="lang-javascript">var options = {\n    verbose: false,\n    strict: true\n};\n</code></pre>\n<p>The <code>callback(err, stats)</code> function is passed the error (if there was one) and a stats object containing counts for each list of items that were created, and a special <code>message</code> property that can be parsed as Markdown or logged to the console.</p>\n<pre><code class="lang-javascript">// This example demonstrates complete usage of keystone.createItems,\n// and how to use its callback to log the message to the console.\n\nfunction(done) {\n\n    keystone.createItems({\n\n        User: [{\n            &#39;name.full&#39;: &#39;Jed Watson&#39;,\n            email: &#39;jed@keystonejs.com&#39;,\n            password: &#39;admin&#39;,\n            isAdmin: true,\n            __ref: &#39;jed&#39;\n        }],\n\n        PostCategory: [{\n            name: &#39;Keystone JS&#39;,\n            __ref: &#39;keystone&#39;\n        }, {\n            name: &#39;Node.js&#39;,\n            __ref: &#39;node&#39;\n        }],\n\n        Post: [{\n            title: &#39;A draft post&#39;,\n            author: &#39;jed&#39;,\n            &#39;content.brief&#39;: &#39;This is an example draft post.&#39;,\n            categories: [&#39;keystone&#39;, &#39;node&#39;]\n        }, {\n            title: &#39;A published post&#39;,\n            state: &#39;published&#39;,\n            author: &#39;jed&#39;,\n            publishedDate: &#39;2014-04-12&#39;,\n            &#39;content.brief&#39;: &#39;This post has been published!&#39;,\n            categories: &#39;node&#39;\n        }]\n\n    }, function(err, stats) {\n        stats &amp;&amp; console.log(stats.message);\n        done(err);\n    });\n\n}\n</code></pre>\n<pre><code class="lang-javascript">// This example demonstrates the shorthand syntax you can use to\n// create items in a Keystone update script.\n\nvar keystone = require(&#39;keystone&#39;);\n\nexports.create = {\n\n    User: [{\n        &#39;name.full&#39;: &#39;Jed Watson&#39;,\n        email: &#39;jed@keystonejs.com&#39;,\n        password: &#39;admin&#39;,\n        isAdmin: true,\n        __ref: &#39;jed&#39;\n    }],\n\n    PostCategory: [{\n        name: &#39;Keystone JS&#39;,\n        __ref: &#39;keystone&#39;\n    }, {\n        name: &#39;Node.js&#39;,\n        __ref: &#39;node&#39;\n    }],\n\n    Post: [{\n        title: &#39;A draft post&#39;,\n        author: &#39;jed&#39;,\n        &#39;content.brief&#39;: &#39;This is an example draft post.&#39;,\n        categories: [&#39;keystone&#39;, &#39;node&#39;]\n    }, {\n        title: &#39;A published post&#39;,\n        state: &#39;published&#39;,\n        author: &#39;jed&#39;,\n        publishedDate: &#39;2014-04-12&#39;,\n        &#39;content.brief&#39;: &#39;This post has been published!&#39;,\n        categories: &#39;node&#39;\n    }]\n\n};\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/createItems.js"> <a href="#" class="loadCode">code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"expandPath",html:'<h4 id="-expandpath-path-">.expandPath( path )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em>  - path<br><em>@return</em> <strong>expandedPath</strong> </p>\n</blockquote>\n<p>Expands a path to include moduleRoot if it is relative</p>\n<pre><code class="lang-javascript">var path = keystone.expandPath(keystone.get(&#39;views&#39;));\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/options.js#L190-L204"> &nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"get",html:'<h4 id="-get-key-">.get( key )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em>  - Key of the option you want to retrieve<br><em>@return</em> <strong>value</strong> </p>\n</blockquote>\n<p>Get a Keystone option/value pair.</p>\n<pre><code class="lang-javascript">var brand = keystone.get(&#39;brand&#39;);\n// &gt;&gt; KeystoneJS\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/options.js#L177-L188"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"getOrphanedLists",html:'<h4 id="-getorphanedlists-">.getOrphanedLists( )</h4>\n<blockquote>\n<p><em>@return</em> <strong>nav</strong> </p>\n</blockquote>\n<p>Retrieves orphaned lists (those not in a nav section)</p>\n<pre><code class="lang-javascript">var orphanLists = keystone.getOrphanedLists();\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/getOrphanedLists.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"getPath",html:'<h4 id="-getpath-key-defaultvalue-">.getPath( key, defaultValue )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em>  - Key of the option you want to retrieve<br><em>@param</em> <strong>defaultValue</strong> <em>{String}</em>  - Default value if <code>key</code> is not a valid option<br><em>@return</em> <strong>path</strong> </p>\n</blockquote>\n<p>Gets an expanded path option, expanded to include moduleRoot if it is relative.  </p>\n<pre><code class="lang-javascript">var path = keystone.getPath(&#39;views&#39;, &#39;templates/views&#39;);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/options.js#L206-L218"> &nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"importer",html:'<h4 id="-importer-rel__dirname-">.importer( rel__dirname )</h4>\n<blockquote>\n<p><em>@param</em> <strong>rel__dirname</strong> <em>{String}</em>  - path<br><em>@return</em> <strong>imported</strong> </p>\n</blockquote>\n<p>Import all .js Modules in given path</p>\n<pre><code class="lang-javascript">var importRoutes = keystone.importer(__dirname);\n\nvar routes = {\n    site: importRoutes(&#39;./site&#39;),\n    api: importRoutes(&#39;./api&#39;)\n};\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/importer.js"> <a href="#" class="loadCode">code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"init",html:'<h4 id="-init-options-">.init( options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>options</strong> <em>{Object}</em> - set the intital value of Keystone options<br><em>@return</em> <strong>this</strong> </p>\n</blockquote>\n<p>Initialize the Keystone options object.  See <a href="http://keystonejs.com/docs/configuration/">Configuration Docs</a>.</p>\n<p>If  Mongoose and/or Express references are not provided, they will be added during <code>.init</code>.  </p>\n<pre><code class="lang-javascript">keystone.init({\n    &#39;name&#39;: &#39;Keystone&#39;,\n    &#39;brand&#39;: &#39;KeystoneJS&#39;,\n    &#39;less&#39;: &#39;public&#39;,\n    &#39;static&#39;: &#39;public&#39;,\n    &#39;favicon&#39;: &#39;public/favicon.ico&#39;,\n    &#39;views&#39;: &#39;templates/views&#39;,\n    &#39;view engine&#39;: &#39;jade&#39;,\n    &#39;emails&#39;: &#39;templates/emails&#39;,\n    &#39;auto update&#39;: true,\n    &#39;session&#39;: true,\n    &#39;auth&#39;: true,\n    &#39;user model&#39;: &#39;User&#39;,\n    &#39;cookie secret&#39;: &#39;=Hw1WfV6XlGW(w~K8=&amp;5r%U2]EZ&#39;,\n\n    &#39;app&#39;: app, // custom express instance\n    &#39;mongoose&#39;: mongoose, // custom mongoose instance\n});\n</code></pre>\n<p class="api-note">The minimum required to start a Keystone instance is the <code>cookie secret</code> option.</p>\n\n\n<p><div class="code-header addGitHubLink" data-file="lib/core/init.js"> <a href="#" class="loadCode">code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"initAPI",html:'<h4 id="-initapi">.initAPI</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Adds helper methods to the <code>res</code> object</h4></div><pre class=" language-javascript"><code class="language-javascript">res.apiResponse(data);</p>\n<p>res.apiError(key, err, msg, code);  </p>\n<p>res.apiNotFound(err, msg);  </p>\n<p>res.apiNotAllowed(err, msg);</p>\n<p></code></pre></p>\n<p><div class="code-header"> <h4>Example</h4></div><pre class=" language-javascript"><code class="language-javascript">app.all(&#39;/api*&#39;, keystone.middleware.api);\napp.get(&#39;/api/v2/posts&#39;, function( req, res ){\n    // send back json data with included middleware\n    ... // get data\n    res.apiResponse(data); \n});\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/middleware/initAPI.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"initNav",html:'<h4 id="-initnav-nav-">.initNav( nav )</h4>\n<blockquote>\n<p><em>@param</em> <strong>nav</strong> <em>{Object}</em><br><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p>Initialises Keystone&#39;s internal nav config.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/core/initNav.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"list",html:'<h4 id="-list-arg-">.list( arg )</h4>\n<blockquote>\n<p><em>@param</em> <strong>arg</strong> <em>{...String|Function}</em>  - current list key or new constructed List<br><em>@return</em> <strong>list</strong> </p>\n</blockquote>\n<p>Registers or retrieves a list.  Used by <code>List.register()</code> to register a newly constructed List with Keystone.   </p>\n<pre><code class="lang-javascript">var User = keystone.list(&#39;User&#39;);\n\nUser.model.find().exec(function(docs,err) {\n\n});\n</code></pre>\n<p><p class="api-note">To retrieve a list that may return <code>undefined</code> you should use <code>keystone.lists[key]</code>.  Using <code>.list()</code> will throw a <code>ReferenceError</code> if the arg is not a valid <code>List</code> or the <code>key</code> for a valid <code>List</code> </p> `  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/core/list.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"mount",html:'<h4 id="-mount-_mountpath_-_parentapp_-_events_-">.mount( [<em>mountPath</em>, <em>parentApp</em>, <em>events</em>] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>mountPath</strong> <em>{String}</em>  - <em>Optional</em> Folder to mount Keystone as a sub-app<br><em>@param</em> <strong>parentApp</strong> <em>{Express()}</em>  - <em>Optional</em> Express app<br><em>@param</em> <strong>events</strong> <em>{...Function|Object}</em>  - <em>Optional</em> Object with onMount event or Function to run once mounted<br><em>@return</em> <strong>events.onMount()</strong> </p>\n</blockquote>\n<p>You can use <code>.mount()</code> for custom Express setups.<br><strong>mountPath</strong> is an optional path to mount Keystone under.<br><strong>parentApp</strong> will be your Express app.<br>The <strong>events</strong> parameter can be used to perform commands once Keystone has been mounted.<br>If <strong>events</strong> is a function it will get mapped to <code>{onMount: events}</code>.  </p>\n<pre><code class="lang-javascript">/* Mount Keystone as a sub-app */\n\nvar app = express(),\n    keystone = require(&#39;keystone&#39;),\n    server,\n    theEvents = require(&quot;events&quot;).EventEmitter;\n\n/**\n    Keystone supports the following options specifically for running in encapsulated mode (with no embedded server):  \n\n       - name\n       - port\n       - views\n       - view engine\n       - compress\n       - favico\n       - less\n       - static\n       - headless\n       - logger\n       - cookie secret\n       - session\n       - 404\n       - 500\n       - routes\n       - locals\n       - auto update\n       - app\n       - mongoose\n*/\n\nkeystone.init({ \n    app: app,\n});\n\ntheEvents.on(&#39;keystone ready&#39;,function() {\n    var server = app.listen(3000);\n    console.log(&#39;server started&#39;);\n});\n\nkeystone.mount(&#39;/content&#39;, app, {\n    onMount: function() {\n        //put your app&#39;s static content and error handling middleware here and start your server\n       theEvents.emit(&#39;keystone ready&#39;);\n    }\n});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/mount.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"options",html:'<h4 id="-options-options-">.options( options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>options</strong> <em>{Object}</em>  - An <strong>Object</strong> of key/value pairs to add to options.<br><em>@return</em> <strong>keystone._options</strong> </p>\n</blockquote>\n<p>Set multiple Keystone option/value pair.</p>\n<pre><code class="lang-javascript">keystone.options({test: value});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/options.js#L148-L174"> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"populateRelated",html:'<h4 id="-populaterelated-docs-relationships-callback-">.populateRelated( docs, relationships, callback )</h4>\n<blockquote>\n<p><em>@param</em> <strong>docs</strong> <em>{Array}</em>  - Array of documents<br><em>@param</em> <strong>relationships</strong> <em>{Array}</em>  - Array of ref paths to populate<br><em>@param</em> <strong>callback</strong> <em>{Function}</em>  - Callback function on done or error<br><em>@return</em> <strong>callback</strong> </p>\n</blockquote>\n<p>Populate the related fields for an Array of docs.  </p>\n<p class="caution-note">This is currently highly inefficient and should only be used in development, or for small data sets. There are lots of things that can be done to improve performance... later.</p>\n\n<pre><code class="lang-javascript">keystone.populateRelated(docs,[&#39;owner&#39;,&#39;memberOf&#39;],function() {\n    // docs are populated\n});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/populateRelated.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"pre",html:'<h4 id="-pre-event-fn-">.pre( event, fn )</h4>\n<blockquote>\n<p><em>@param</em> <strong>event</strong>  {String}<br><em>@param</em> <strong>fn</strong>  {Function}  - function to call<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Registers a pre-event handler.<br>Valid events include:  </p>\n<ul>\n<li><code>routes</code> - calls the function before any routes are matched, after all other middleware </li>\n</ul>\n<p><div class="code-header addGitHubLink" data-file="index.js#L123-L126"> &nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"prefixModel",html:'<h4 id="-prefixmodel-key-">.prefixModel( key )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em>  - collection name<br><em>@return</em> <strong>this</strong> </p>\n</blockquote>\n<p>Create proper model collection name with or without prefix. </p>\n<p><div class="code-header addGitHubLink" data-file="index.js#L96-L104">  &nbsp;  </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"redirect",html:'<h4 id="-redirect-params-">.redirect( ...params )</h4>\n<blockquote>\n<p><em>@param</em> <strong>params</strong> <em>{...String|Object}</em>  - String or Object of redirects<br><em>@return</em> <strong>callback events</strong> </p>\n</blockquote>\n<p>Adds one or more redirections (urls that are redirected when no matching routes are found, before treating the request as a 404)</p>\n<pre><code class="lang-javascript">keystone.redirect(&#39;/old-route&#39;, &#39;new-route&#39;);\n\nkeystone.redirect({\n    &#39;old-route&#39;: &#39;new-route&#39;\n});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/redirect.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"render",html:'<h4 id="-render-req-res-view-ext-">.render( req, res, view, ext )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  -  Express req object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  -  Express res object<br><em>@param</em> <strong>view</strong> <em>{String}</em>  -  View to render<br><em>@param</em> <strong>ext</strong> <em>{Object}</em>  -  extend the locals object<br><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p>Internal method to render a view</p>\n<p><div class="code-header addGitHubLink" data-file="lib/core/render.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"routes",html:'<h4 id="-routes-app-">.routes( app )</h4>\n<blockquote>\n<p><em>@param</em> <strong>app</strong> <em>{Express()}</em>  - Express app instance<br><em>@return</em> <strong>this</strong> </p>\n</blockquote>\n<p>Adds bindings for the keystone routes</p>\n<pre><code class="lang-javascript">var app = express();\napp.use(...); // middlewareroutes, routes, etc. should come before keystone is mounted / started\nkeystone.routes(app);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/routes.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"set",html:'<h4 id="-set-key-value-">.set( key, value )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em>  - Key of the option you want to set<br><em>@param</em> <strong>value</strong> <em>{...String|Object|Function|Array}</em>  - Can be any valid <strong>Object</strong> value<br><em>@return</em> <strong>this</strong> </p>\n</blockquote>\n<p>Set a Keystone option/value pair.</p>\n<pre><code class="lang-javascript">keystone.set(&#39;mongo&#39;,&#39;mongodb://localhost/keystone&#39;);\n\nkeystone.set(&#39;custom key&#39;,{key1:&#39;key1&#39;});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/options.js#L41-L145"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"start",html:'<h4 id="-start-_events_-">.start( [<em>events</em>] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>events</strong> <em>{...Function|Object}</em>  - Function or Object of events<br><em>@return</em> <strong>callback events</strong> </p>\n</blockquote>\n<p>Start the Keystone server.  You can work with the events in the example.</p>\n<pre><code class="lang-javascript">keystone.start({\n    onMount: function() {\n\n    },\n    onStart: function() {\n\n    },\n    onHttpServerCreated: function() {\n\n    },\n    onHttpsServerCreated: function() {\n\n    },\n    onSocketServerCreated: function() {\n\n    },\n});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/start.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"static",html:'<h4 id="-static-app-">.static( app )</h4>\n<blockquote>\n<p><em>@param</em> <strong>app</strong> <em>{Express()}</em>  - Express App<br><em>@return</em> <strong>this</strong> </p>\n</blockquote>\n<p>Adds bindings for keystone static resources.<br>Can be included before other middleware (e.g. session management, logging, etc) for reduced overhead.</p>\n<pre><code class="lang-javascript">var app = express();\nkeystone.static(app);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/static.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"utils",html:'<h4 id="-utils">.utils</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong> </p>\n</blockquote>\n<p><div class="code-header"> <h4>Expose <code>keystone-utils</code></h4></div><pre class=" language-javascript"><code class="language-javascript">Keystone.utils = require(&#39;keystone-utils&#39;);</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="index.js#L165"> &nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"version",html:'<h4 id="-version">.version</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong> {Number} </p>\n</blockquote>\n<p>Current version</p>\n<p><div class="code-header addGitHubLink" data-file="index.js#L236-L242"> &nbsp;  </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone",menuHeader:"keystone",name:"wrapHTMLError",html:'<h4 id="-wraphtmlerror-title-_err_-">.wrapHTMLError( title, [<em>err</em>] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>title</strong> <em>{String}</em>  - Error title<br><em>@param</em> <strong>err</strong> <em>{String}</em>  - <em>Optional</em> Error message<br><em>@return</em> <strong>html</strong> </p>\n</blockquote>\n<p>Wraps an error in simple HTML to be sent as a response to the browser</p>\n<pre><code class="lang-javascript">var html = keystone.wrapHTMLError(&#39;Credential Error&#39;,&#39;Please &lt;a href=&quot;/keystone/signin&quot;&gt;login&lt;/a&gt; to view this page&#39;);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/wrapHTMLError.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'
}],main:"markdown/class/Classes/Keystone.md",header:"Keystone",menuHeader:"keystone"},content:{list:[{keys:"content",header:".content Class",menuHeader:"keystone.content",main:"content",html:'<h4 id="keystone-content-">Keystone.content(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/content/index.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"content",header:".content Class",menuHeader:"keystone.content",name:"editable",html:'<h4 id="-content-editable-user-options-">.content.editable( user, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>user</strong> <em>{Object}</em>  - user object<br><em>@param</em> <strong>options</strong> <em>{Object}</em><br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Outputs client-side editable data for content management.  </p>\n<p>Called automatically when pages are added.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/index.js#L196-L233"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"content",header:".content Class",menuHeader:"keystone.content",name:"fetch",html:'<h4 id="-content-fetch-page-callback-">.content.fetch( page, callback )</h4>\n<blockquote>\n<p><em>@param</em> <strong>page</strong> <em>{String}</em><br><em>@param</em> <strong>callback</strong> <em>{Function}</em><br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Loads page content by page key (optional).</h4>If page key is not provided, returns a hash of all page contents in the database.</div><pre class=" language-javascript"><code class="language-javascript">keystone.content.fetch(&#39;home&#39;, function(err, content) { ... });</code></pre> </p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/index.js#L15-L82"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"content",header:".content Class",menuHeader:"keystone.content",name:"initModel",html:'<h4 id="-content-initmodel-">.content.initModel( )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>      </p>\n</blockquote>\n<p>Ensures the Mongoose model for storing content is initialised.  </p>\n<p>Called automatically when pages are added.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/index.js#L166-L194"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"content",header:".content Class",menuHeader:"keystone.content",name:"page",html:'<h4 id="-content-page-key-page-">.content.page( key, page )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em><br><em>@param</em> <strong>page</strong> <em>{Object}</em><br><em>@api</em> <strong>private</strong>     </p>\n</blockquote>\n<p>Registers a page. Should not be called directly, use <code>.content.Page.register()</code> instead.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/index.js#L131-L164"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"content",header:".content Class",menuHeader:"keystone.content",name:"store",html:'<h4 id="-content-store-page-content-callback-">.content.store( page, content, callback )</h4>\n<blockquote>\n<p><em>@param</em> <strong>page</strong> <em>{String}</em><br><em>@param</em> <strong>content</strong> <em>{Object}</em><br><em>@param</em> <strong>callback</strong> <em>{Function}</em><br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Sets page content by page key.</h4>Merges content with existing content.</div><pre class=" language-javascript"><code class="language-javascript">keystone.content.store(&#39;home&#39;, { title: &#39;Welcome&#39; }, function(err) { ... });</code></pre> </p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/index.js#L84-L129"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Classes/Content.md",header:".content Class",menuHeader:"keystone.content"},contentPage:{list:[{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",main:"contentPage",html:'<h4 id="keystone-content-page-key-options-">Keystone.content.Page( key, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong>  {String}<br><em>@param</em> <strong>options</strong>  {Options}<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"add",html:'<h4 id="-content-page-add-fields-">.content.Page.add( fields )</h4>\n<blockquote>\n<p><em>@param</em> <strong>fields</strong> <em>{Object}</em><br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L73-L124"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"clean",html:'<h4 id="-content-page-clean-data-">.content.Page.clean( data )</h4>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> <em>{Object}</em><br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Cleans a data structure so only the defined fields are present.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L181-L197"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"get",html:'<h4 id="-content-page-get-key-">.content.Page.get( key )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em><br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Gets page options</h4></div><pre class=" language-javascript"><code class="language-javascript"> page.get(&#39;test&#39;) // returns the &#39;test&#39; value\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L59-L69"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"name",html:'<h4 id="-content-page-name">.content.Page.name</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.get(&#39;name&#39;) || this.set(&#39;name&#39;, utils.keyToLabel(this.key));</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L29-L33"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"populate",html:'<h4 id="-content-page-populate-data-">.content.Page.populate( data )</h4>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> <em>{Object}</em><br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Populates a data structure based on defined fields</p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L145-L161"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"register",html:'<h4 id="-content-page-register-">.content.Page.register(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Registers the page with Keystone.</h4></div><pre class=" language-javascript"><code class="language-javascript">var homePage = new keystone.content.Page(&#39;home&#39;);\n// ...\nhomePage.register();</p>\n<pre><code>// later...\nvar homePage = keystone.content.page(&#39;home&#39;);\n</code></pre><p></code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L59-L69"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"set",html:'<h4 id="-content-page-set-key-value-">.content.Page.set( key, value )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em><br><em>@param</em> <strong>value</strong> <em>{Array|Function|Object|String}</em><br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Sets page options.</h4></div><pre class=" language-javascript"><code class="language-javascript">page.set(&#39;test&#39;, value) // sets the &#39;test&#39; option to <code>value</code></code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L35-L56"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"validate",html:'<h4 id="-content-page-validate-data-">.content.Page.validate( data )</h4>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> <em>{Object}</em><br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Validates a data structure based on defined fields.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L163-L179"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Classes/ContentPage.md",header:".content.Page Class",menuHeader:"keystone.content.Page"},contentType:{list:[{keys:"contentType",header:".content.Type Class",menuHeader:"keystone.content.Type",main:"contentType",html:'<h4 id="keystone-content-type-path-options-">Keystone.content.Type( path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>path</strong>  {String}<br><em>@param</em> <strong>options</strong>  {Options}<br><em>@api</em> <strong>public</strong>      </p>\n</blockquote>\n<p class="warning-note">TODO</p>\n\n<p><div class="code-header addGitHubLink" data-file="lib/content/type.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Classes/ContentType.md",header:".content.Type Class",menuHeader:"keystone.content.Type"},email:{list:[{keys:"email",header:".Email Class",menuHeader:"keystone.email",main:"email",html:'<h4 id="new-keystone-email-options-">new Keystone.Email( options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>options</strong> <em>{...String|Object}</em><br><em>@return</em> <strong>this</strong>     </p>\n</blockquote>\n<p>Once created, emails can be sent with Mandrill, or rendered for viewing.   </p>\n<p class="api-note">Passing a <strong>String</strong> will set <code>templateName</code> and use <a href="#email-defaults"><code>Email.defaults</code></a>.</p>\n<p class="caution-note"> Requires setting Keystone option <code>emails</code>  to render.  <br />Requires setting either <code>options.mandrill</code> or Keystone option <code>mandrill api key</code>  to send.   </p>    \n\n<p><strong> <code>options</code> </strong>:   </p>\n<ul>\n<li><strong>templateName</strong> - The name of the template to render.  Default use should be the name of a jade template file or directory. Required if not using <code>templateMandrillName</code>.   </li>\n<li><strong>templateExt</strong> - The extension name of our template file.  A template must be available at <code>templateName.templateExt</code> or <code>templateName/email.templateExt</code>.  </li>\n<li><strong>templateEngine</strong> - The engine to use to render the email html.  Defaults to <code>require(&#39;jade&#39;)</code>  </li>\n<li><strong>templateBasePath</strong> - Base path to load email template files.   </li>\n<li><strong>templateMandrillName</strong> - Name of a Mandrill template to use to render emails.    </li>\n<li><strong>templateMandrillContent</strong> - An <strong>Array</strong> of content blocks for a Mandrill template. <pre><code class="lang-javascript">options.templateMandrillContent = [\n  {\n      &quot;name&quot;: &quot;header&quot;,\n      &quot;content&quot;: &quot;&lt;h2&gt;&quot; + keystone.get(&#39;name&#39;) + &quot;&lt;/h2&gt;&quot;\n  }\n]\n</code></pre>\n</li>\n</ul>\n<div class="code-header"> <h4>Create a new Email instance and send an Email</h4></div><pre class=" language-javascript"><code class="language-javascript">\n    var Email = new keystone.Email(&#39;welcome&#39;);\n    Email.send({\n        subject:&#39;Your  account information&#39;,\n        tags:&#39;new user&#39;,\n        to:newUser.realEmail,\n        fromName:&#39;Account Team&#39;,\n        fromEmail:&#39;support@domain.tld&#39;,\n        enquiry: {\n            _: require(&#39;lodash&#39;),\n            name:newUser.name.first+&#39;  &#39;+newUser.name.last,\n            email:newUser.realEmail,\n            html:&#39;&#39;\n        }\n    },function(err,info){\n        //console.log(err,&#39;New user email sent&#39;,info);\n    });\n</code></pre>\n\n<div class="contextual-note">\n<h4> Explanation</h4> \n<p>We pass <code>&#39;welcome&#39;</code> as our template name. <br />Since we set <code>keystone.init({ ..., &#39;emails&#39;: &#39;templates/emails&#39;})</code> the class looked in <code>/templates/emails/welcome.jade</code> and <code>/templates/emails/welcome/email.jade</code> for the template to use to render the email.</p>\n</div>  \n\n\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L125-L170"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"buildOptions",html:'<h4 id="email-buildoptions-err-options-_callback_-">Email.buildOptions( err, options [, <em>callback</em>] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>err</strong> <em>{Object}</em>  - Error<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - Input options<br><em>@param</em> <strong>callback</strong> <em>{Object}</em>  - callback(err, message)<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Build an options object.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L379-L535"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"compileTemplate",html:'<h4 id="email-compiletemplate-_callback_-">Email.compileTemplate(  <em>callback</em>  )</h4>\n<blockquote>\n<p><em>@param</em> <strong>callback</strong> <em>{Object}</em>  - callback(err, email)<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Ensures the template for the email has been compiled</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L309-L342"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"defaults",html:'<h4 id="email-defaults">Email.defaults</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>Email.defaults </h4></div><pre class=" language-javascript"><code class="language-javascript">{\n    templateExt: &#39;jade&#39;,\n    templateEngine: require(&#39;jade&#39;),\n    templateBasePath: path.normalize(path.join(__dirname, &#39;..&#39;, &#39;templates&#39;, &#39;helpers&#39;, &#39;emails&#39;)),\n    mandrill: {\n        track_opens: true,\n        track_clicks: true,\n        preserve_recipients: false,\n        inline_css: true\n    },\n    // Mandrill template\n    templateMandrillName: null,\n    templateForceHtml: false // Force html render\n}\n</code></pre> </p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L12-L25"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"getEmailsPath",html:'<h4 id="email-getemailspath-">Email.getEmailsPath(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Return the value of <code>keystone.get(&#39;emails&#39;);</code>.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L58-L64"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"loadTemplate",html:'<h4 id="email-loadtemplate-_callback_-">Email.loadTemplate(  <em>callback</em>  )</h4>\n<blockquote>\n<p><em>@param</em> <strong>callback</strong> <em>{Object}</em>  - callback(err, email)<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Loads the template. Looks for <code>templateName.templateExt</code>, followed by <code>templateName/email.templateExt</code></p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L273-L307"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"prepare",html:'<h4 id="email-prepare-options-_callback_-">Email.prepare( options [, <em>callback</em> ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>options</strong> <em>{Object}</em>  - locals<br><em>@param</em> <strong>callback</strong> <em>{Object}</em>  - callback(err, message)<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Ensures the template for the email has been compiled</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L344-L377"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"render",html:'<h4 id="email-render-locals-_callback_-">Email.render( locals [, <em>callback</em> ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>locals</strong> <em>{Object}</em>  - object of local variables provided to the template<br><em>@param</em> <strong>callback</strong> <em>{Object}</em>  - callback(err, email)  </p>\n</blockquote>\n<p>Renders the email and passes it to the callback. Used by <code>Email.send()</code> but can also be called directly to generate a preview.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L172-L270"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"renderMandrill",html:'<h4 id="email-rendermandrill-_locals_-options-_callback_-">Email.renderMandrill( [<em>locals</em> ,] options [, <em>callback</em> ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>locals</strong> <em>{Object}</em>  - backwards compatibility<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - locals options object<br><em>@param</em> <strong>callback</strong> <em>{Object}</em>  - callback(err, info)      </p>\n</blockquote>\n<p>Renders a Mandrill template</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L637-L689"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"send",html:'<h4 id="email-send-_locals-_-options-_callback_-">Email.send( [ <em>locals </em> ,] options [, <em>callback</em> ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>locals</strong> <em>{Object}</em>  - backwards compatibility<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - passed to <code>Email.render()</code><br><em>@param</em> <strong>callback</strong> <em>{Object}</em>  - callback(err, info)    </p>\n</blockquote>\n<p class="api-note"> For compatibility with older implementations, send supports providing locals and options objects as the first and second arguments, and the callback as the third.  Typical use case should be <code>.send( options, callback )</code></p>\n\n<p> Options:</p>\n<ul>\n<li><strong>mandrill</strong> - Initialised Mandrill API instance</li>\n<li><strong>templateMandrillName</strong> - the immutable name or slug of a template that exists in the user&#39;s account. For backwards-compatibility, the template name may also be used but the immutable slug is preferred.  Validation: required.  </li>\n<li><strong>templateMandrillContent</strong> - an array of template content to send. Each item in the array should be an object with two keys - name: the name of the content block to set the content for, and content: the actual content to put into the block<pre><code class="lang-javascript"> options.templateMandrillContent = [\n     {\n         &quot;name&quot;: &quot;header&quot;,\n         &quot;content&quot;: &quot;&lt;h2&gt;&quot; + keystone.get(&#39;name&#39;) + &quot;&lt;/h2&gt;&quot;\n     }\n ]\n</code></pre>\n</li>\n<li><strong>tags</strong> - an array of <strong>Strings</strong> to tag the message with. Stats are accumulated using tags, and only the first 100 are stored, so this should not be unique or change frequently. Tags should be 50 characters or less. Any tags starting with an underscore are reserved for internal use and will cause errors.   </li>\n<li><strong>html</strong> - the full HTML content to be sent </li>\n<li><strong>attachments</strong> - an array of supported attachments to add to the message  <pre><code class="lang-javascript"> options.attachments = [\n     {\n         type: MIME_TYPE,\n         name: FILE_NAME,\n         content: BASE64_STRING\n     },\n ]\n</code></pre>\n</li>\n<li><strong>to</strong> - Object / String or Array of Objects / Strings to send to, e.g.  <pre><code class="lang-javascript">[&#39;email2@domain.tld&#39;, { email: &#39;email@domain.tld&#39; }]\n{ email: &#39;email4@domain.tld&#39; }\n&#39;email0@domain.tld&#39;\n</code></pre>\n</li>\n<li><strong>from</strong> - <code>{ name: &#39;Ted&#39;, email: &#39;ted@domain.tld&#39; }</code> or <code>&#39;ted@domain.tld&#39;</code>  </li>\n<li><strong>fromName</strong> - Name to send from  </li>\n<li><strong>fromEmail</strong> - Email address to send from</li>\n<li><strong>mandrillOptions</strong> - any other <a href="https://mandrillapp.com/api/docs/messages.JSON.html#method=send-template" target="_blank"> Mandrill <strong>message</strong> Option</a> <pre><code class="lang-javascript"> options.mandrillOptions = {\n     // whether or not to turn on open tracking for the message\n     track_opens: true,\n     // whether or not to turn on click tracking for the message\n     track_clicks: true, \n     // whether or not to expose all recipients in the &quot;To&quot; header for each email\n     preserve_recipients: false, \n     // whether or not to automatically inline all CSS styles provided \n     // in the message HTML - only for HTML documents less than 256KB in size\n     inline_css: true \n },\n</code></pre>\n</li>\n</ul>\n<p class="caution-note"> You must include an  email address with either <code>from</code> or <code>fromEmail</code> </p>\n\n<div class="code-header"> <h4>Send an email</h4></div><pre class=" language-javascript"><code class="language-javascript">\n     var Email = new keystone.Email({ \n                templateMandrillName: &#39;welcome&#39;,\n                templateMandrillContent: [\n                    {\n                        &quot;name&quot;: &quot;header&quot;,\n                        &quot;content&quot;: &quot;<h2>&quot; + keystone.get(&#39;name&#39;) + &quot;</h2>&quot;\n                    }\n                ]\n            });\n\n            Email.send({\n                to: req.body.email,\n                from: {\n                    name: &#39;from name&#39;,\n                    email: &#39;from@domain.tld&#39;\n                },\n                subject: &#39;subject&#39;\n                templateMandrillContent: [\n                    {\n                        &quot;name&quot;: &quot;main&quot;,\n                        &quot;content&quot;: &quot;custom html for main block&quot;\n                    }\n                ],\n                mandrillOptions: {\n                    track_opens: false,\n                    track_clicks: false\n                },\n            }, \n            function(err, info) {\n                //console.log(err, info);\n            });\n</code></pre>\n<div class="contextual-note">\n<h4> Explanation</h4> \n<p>We defined a template at Mandrill and set <code>templateMandrillName: &#39;welcome&#39;</code>. This will bypass <code>Email.render()</code> and send template information.  <br /> We add <code>templateMandrillContent</code> template blocks in both the <strong>Email</strong> constructor and in <code>.send</code>.  </p>\n</div> \n\n\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L537-L630"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"templateCSSMethods",html:'<h4 id="email-templatecssmethods-shadecolor-color-percent-">Email.templateCSSMethods.shadeColor( color, percent )</h4>\n<blockquote>\n<p><em>@param</em> <strong>color</strong> {String}<br><em>@param</em> <strong>percent</strong> {Number}<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>return a shaded color.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L114-L121"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"templateCache",html:'<h4 id="email-templatecache">Email.templateCache</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>A cache of compiled templates organi(sz)ed by name.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L692"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Classes/Email.md",header:".Email Class",menuHeader:"keystone.email"},field:{list:[{keys:"field",header:".Field super",menuHeader:"keystone.field",main:"field",html:'<h4 id="keystone-field-list-path-options-">Keystone.Field( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p class="contextual-note"> Extended by <code>Field.Types</code> Classes, methods should not be used directly. </p>\n\n\n\n\n<p><div class="code-header addGitHubLink" data-file="lib/field.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"addToSchema",html:'<h4 id="field-addtoschema-">Field.addToSchema(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Default method to register the field on the List&#39;s Mongoose Schema.  </p>\n<p class="caution-note">Overridden by some fieldType Classes.</p>\n\n<p><div class="code-header addGitHubLink" data-file="lib/field.js#L218-L228"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"bindUnderscoreMethods",html:'<h4 id="field-bindunderscoremethods-methods-">Field.bindUnderscoreMethods( methods )</h4>\n<blockquote>\n<p><em>@param</em> <strong>methods</strong> {Array}<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Automatically bind underscore methods specified by the _underscoreMethods property.</p>\n<p class="note">Will always include the &#39;update&#39; method</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L230-L246"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"col",html:'<h4 id="field-col-">Field.col(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.col\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/field.js#L209"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"collapse",html:'<h4 id="field-collapse-">Field.collapse(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.collapse\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/field.js#L214"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"dependsOn",html:'<h4 id="field-dependson-">Field.dependsOn(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.dependsOn\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/field.js#L216"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"format",html:'<h4 id="field-format-item-">Field.format( item )</h4>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Default method to format the field value for display.  </p>\n<p class="caution-note">Overridden by some fieldType Classes.</p>\n\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L127-L154"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"getData",html:'<h4 id="field-getdata-data-">Field.getData( data )</h4>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Gets the field&#39;s data from an Item, as used by the React components</p>\n<p><div class="code-header"> <h4>Return</h4></div><pre class=" language-javascript"><code class="language-javascript">return item.get(this.path);\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L131-L136"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"getDefaultValue",html:'<h4 id="field-getdefaultvalue-">Field.getDefaultValue(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Gets default value for the field, based on the option or default for the type</p>\n<p><div class="code-header"> <h4>Return</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.default\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L124-L129"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"getOptions",html:'<h4 id="field-getoptions-">Field.getOptions(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Gets the options for the Field, as used by the React components.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/field.js#L83-L107"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",
name:"getPreSaveWatcher",html:'<h4 id="field-getpresavewatcher-">Field.getPreSaveWatcher(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p>Field watching implementation</p>\n<p><div class="code-header addGitHubLink" data-file="lib/field.js#L138-L201"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"getSize",html:'<h4 id="field-getsize-">Field.getSize( )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Validates and returns the size of the field.<br>Defaults to deprecated &#39;width&#39; option.</p>\n<p><div class="code-header"> <h4>Return</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.__size\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/field.js#L109-L122"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"getValueFromData",html:'<h4 id="field-getvaluefromdata-">Field.getValueFromData(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>    </p>\n</blockquote>\n<p>Retrieves the value from an object, whether the path is nested or flattened.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/field.js#L311-L318"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"hidden",html:'<h4 id="field-hidden-">Field.hidden(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.hidden\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/field.js#L215"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"initial",html:'<h4 id="field-initial-">Field.initial(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.initial\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/field.js#L206"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"isModified",html:'<h4 id="field-ismodified-item-">Field.isModified( item )</h4>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Default method to detect whether the field has been modified in an item.  </p>\n<p class="caution-note">Overridden by some fieldType Classes.</p>\n\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L270-L278"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"nocol",html:'<h4 id="field-nocol-">Field.nocol(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.nocol\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/field.js#L211"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"noedit",html:'<h4 id="field-noedit-">Field.noedit(   )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.noedit\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/field.js#L210"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"nofilter",html:'<h4 id="field-nofilter-">Field.nofilter(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.nofilter\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/field.js#L213"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"nosort",html:'<h4 id="field-nosort-">Field.nosort(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.nosort\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/field.js#L212"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"note",html:'<h4 id="field-note-">Field.note(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">\nreturn this.options.note\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/field.js#L208"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"required",html:'<h4 id="field-required-">Field.required(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.required\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/field.js#L207"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"size",html:'<h4 id="field-size-">Field.size(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.getSize()\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/field.js#L205"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"underscoreMethod",html:'<h4 id="field-underscoremethod-path-fn-">Field.underscoreMethod( path, fn )</h4>\n<blockquote>\n<p><em>@param</em> <strong>path</strong> {String} \n<em>@param</em> <strong>item</strong> {Function} \n<em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p>Adds a method to the underscoreMethods collection on the field&#39;s list, with a path prefix to match this field&#39;s path and bound to the document.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L248-L258"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"updateItem",html:'<h4 id="field-updateitem-item-data-">Field.updateItem( item, data )</h4>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@param</em> <strong>data</strong> {Object}<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object</p>\n<p class="caution-note">Overridden by some fieldType Classes.</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L297-L309"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"validateInput",html:'<h4 id="field-validateinput-data-required-item-">Field.validateInput( data [, required, item ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object</p>\n<p class="caution-note">Overridden by some fieldType Classes.</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L280-L295"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Classes/Field.md",header:".Field super",menuHeader:"keystone.field"},fieldTypes:{list:[{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",main:"fieldTypes",html:'<h4 id="-field-types">.Field.Types</h4>\n<p>Returns an object of Keystone Field Types to work with.<br>Each Field Type inherits all the <code>Field</code> methods above.  </p>\n<p class="note">Any new or override methods for each Type are <span class="subMethod"> styled like so </span>. \n</p>\n\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"AzureFile",html:'<h4 id="-field-types-azurefile-list-path-options-">.Field.Types.AzureFile( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._underscoreMethods = [&#39;format&#39;, &#39;uploadFile&#39;];  </p>\n<p>this._fixedSize = &#39;full&#39;;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/azurefile.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre>  </p>\n<p><span class="subMethod"> .Field.Types.AzureFile.azurefileconfig   </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Exposes the custom or keystone azure config settings.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/azurefile.js#L67-L75">&nbsp; </div><pre class=" language-javascript hideCode api"></pre>  </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/azurefile.js#L78-L173"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<pre><code class="lang-javascript">return item.get(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/azurefile.js#L176-L184"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">return item.isModified(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/azurefile.js#L187-L195">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object </p>\n<p class="warning-note"> TODO - will only return true</p>\n\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/azurefile.js#L198-L207"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object</p>\n<p class="warning-note"> TODO - will not return</p>\n\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/azurefile.js#L210-L218"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.uploadFile( item, file, update [, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>file</strong> {Object} - valid file object<br><em>@param</em> <strong>update</strong> {Boolean} - update or not<br><em>@param</em> <strong>callback</strong> {Function} - callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Uploads the file for this field.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/azurefile.js#L221-L277"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.getRequestHandler( item, req [, paths, callback] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - valid file object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.action</code> in <code>req.body</code> (<code>clear</code> or <code>delete</code>)<br><code>field.paths.upload</code> in <code>req.files</code> (uploads the file to Azure)  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/azurefile.js#L280-L320">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.handleRequest( item, req [, paths, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - valid file object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.AzureFile.getRequestHandler()</code>).  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/azurefile.js#L323-L331"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Boolean",html:'<h4 id="-field-types-boolean-list-path-options-">.Field.Types.Boolean( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = Boolean;\nthis._properties = [&#39;indent&#39;];\nthis._fixedSize = &#39;full&#39;;\nthis.indent = (options.indent) ? true : false;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/boolean.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre>  </p>\n<p><span class="subMethod"> .Field.Types.Boolean.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.    </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/boolean.js#L18-L29">&nbsp; </div><pre class=" language-javascript hideCode api"></pre>  </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Boolean.validateInput( data [, required ] ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid filter object<br><em>@param</em> <strong>required</strong> {Boolean} - (optional)<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Validates that a truthy value for this field has been provided in a data object.<br>Useful for checkboxes that are required to be true (e.g. agreed to terms and cond&#39;s).  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/boolean.js#L31-L41"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Boolean.updateItem( item, data ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@param</em> <strong>data</strong> {Object} - valid data value object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.<br>Only updates the value if it has changed.<br>Treats a falsy value or the string &quot;false&quot; as <code>false</code>, everything else as true.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/boolean.js#L176-L184"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"CloudinaryImage",html:'<h4 id="-field-types-cloudinaryimage-list-path-options-">.Field.Types.CloudinaryImage( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._underscoreMethods = [&#39;format&#39;];\nthis._fixedSize = &#39;full&#39;;\nthis._properties = [&#39;select&#39;, &#39;selectPrefix&#39;, &#39;autoCleanup&#39;, &#39;publicID&#39;, &#39;folder&#39;, &#39;filenameAsPublicID&#39;];\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/cloudinaryimage.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.CloudinaryImage.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/cloudinaryimage.js#L56-L270"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImage.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<pre><code class="lang-javascript">return item.get(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/cloudinaryimage.js#L273-L281"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImage.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">return item.isModified(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/cloudinaryimage.js#L284-L292">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImage.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object </p>\n<p class="warning-note"> TODO - will only return true</p>\n\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/cloudinaryimage.js#L295-L304"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImage.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object </p>\n<p class="warning-note"> TODO - will not return</p>\n\n\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/cloudinaryimage.js#L307-L329"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImage.getRequestHandler( item, req [, paths, callback] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - valid file object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.action</code> in <code>req.body</code> (<code>clear</code> or <code>delete</code>)<br><code>field.paths.upload</code> in <code>req.files</code> (uploads the image to cloudinary)  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/cloudinaryimage.js#L332-L446">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImage.handleRequest( item, req [, paths, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - valid file object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.CloudinaryImage.getRequestHandler()</code>).  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/cloudinaryimage.js#L449-L457"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"CloudinaryImages",html:'<h4 id="-field-types-cloudinaryimages-list-path-options-">.Field.Types.CloudinaryImages( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._underscoreMethods = [&#39;format&#39;];\nthis._fixedSize = &#39;full&#39;;\nthis._properties = [&#39;select&#39;, &#39;selectPrefix&#39;, &#39;autoCleanup&#39;, &#39;publicID&#39;, &#39;folder&#39;, &#39;filenameAsPublicID&#39;];\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/cloudinaryimages.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.CloudinaryImages.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/cloudinaryimages.js#L51-L195"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImages.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<pre><code class="lang-javascript">return item.get(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/cloudinaryimages.js#L198-L208"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImages.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">return item.isModified(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/cloudinaryimages.js#L211-L220">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImages.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object </p>\n<p class="warning-note"> TODO - will only return true</p>\n\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/cloudinaryimages.js#L223-L232"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImages.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object</p>\n<p class="warning-note"> TODO - will not return</p>\n\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/cloudinaryimages.js#L235-L243"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImages.getRequestHandler( item, req [, paths, callback] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - valid file object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.action</code> in <code>req.body</code> (<code>clear</code> or <code>delete</code>)<br><code>field.paths.upload</code> in <code>req.files</code> (uploads the image to cloudinary)  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/cloudinaryimages.js#L246-L350">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImages.handleRequest( item, req [, paths, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - valid file object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.CloudinaryImage.getRequestHandler()</code>).  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/cloudinaryimages.js#L363-L371"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Code",html:'<h4 id="-field-types-code-list-path-options-">.Field.Types.Code( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._defaultSize = &#39;full&#39;;\nthis.height = options.height || 180;\nthis.lang = options.lang || options.language;\nthis.<em>properties = [&#39;editor&#39;, &#39;height&#39;, &#39;lang&#39;];\nthis.codemirror = options.codemirror || {};\nthis.editor = </em>.defaults(this.codemirror, { mode : this.lang });</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="/lib/fieldTypes/code.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Code.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.    </p>\n<p><div class="code-header addGitHubLink" data-file="/lib/fieldTypes/code.js#L23-L24">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Color",html:'<h4 id="-field-types-color-list-path-options-">.Field.Types.Color( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._underscoreMethods = [];\nthis._fixedSize = &#39;small&#39;;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="/lib/fieldTypes/color.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'
},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Date",html:'<h4 id="-field-types-date-list-path-options-">.Field.Types.Date( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = Date;\nthis._underscoreMethods = [&#39;format&#39;, &#39;moment&#39;, &#39;parse&#39;];\nthis._fixedSize = &#39;medium&#39;;\nthis._properties = [&#39;formatString&#39;, &#39;yearRange&#39;, &#39;isUTC&#39;];\nthis.parseFormatString = options.parseFormat || &#39;YYYY-MM-DD&#39;;\nthis.formatString = (options.format === false) ? false : (options.format || &#39;Do MMM YYYY&#39;);\nthis.yearRange = options.yearRange;\nthis.isUTC = options.utc || false;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="/lib/fieldTypes/date.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Date.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.  </p>\n<p><div class="code-header addGitHubLink" data-file="/lib/fieldTypes/date.js#L27-L58"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Date.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<p><div class="code-header addGitHubLink" data-file="/lib/fieldTypes/date.js#L60-L69"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Date.moment( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Returns a new <code>moment</code> object with the field value.    </p>\n<p><div class="code-header addGitHubLink" data-file="/lib/fieldTypes/date.js#L71-L78">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Date.parse( item )  </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Parses input using moment, sets the value, and returns the moment object.  </p>\n<p><div class="code-header addGitHubLink" data-file="/lib/fieldTypes/date.js#L80-L88">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Date.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Checks that a valid date has been provided in a data object.<br>An empty value clears the stored value and is considered valid.</p>\n<p><div class="code-header addGitHubLink" data-file="/lib/fieldTypes/date.js#L90-L104"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Date.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object </p>\n<p><div class="code-header addGitHubLink" data-file="/lib/fieldTypes/date.js#L106-L122"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"DateArray",html:'<h4 id="-field-types-datearray-list-path-options-">.Field.Types.DateArray( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = [Date];\nthis._defaultSize = &#39;medium&#39;;\nthis._underscoreMethods = [&#39;format&#39;];\nthis._properties = [&#39;formatString&#39;];\nthis.parseFormatString = options.parseFormat || &#39;YYYY-MM-DD&#39;;\nthis.formatString = (options.format === false) ? false : (options.format || &#39;Do MMM YYYY&#39;);</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/datearray.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.DateArray.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/datearray.js#L38-L50"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.DateArray.validateInput( data [, required, item ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Checks that a valid array of dates has been provided in a data object.<br>An empty value clears the stored value and is considered valid.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/datearray.js#L52-L101"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.DateArray.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/datearray.js#L104-L133"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Datetime",html:'<h4 id="-field-types-datetime-list-path-options-">.Field.Types.Datetime( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">var parseFormats = [&#39;YYYY-MM-DD&#39;, &#39;YYYY-MM-DD h:m:s a&#39;, &#39;YYYY-MM-DD h:m a&#39;, &#39;YYYY-MM-DD H:m:s&#39;, &#39;YYYY-MM-DD H:m&#39;];</p>\n<p>...\nthis._nativeType = Date;\nthis._underscoreMethods = [&#39;format&#39;, &#39;moment&#39;, &#39;parse&#39;];\nthis._fixedSize = &#39;full&#39;;\nthis._properties = [&#39;formatString&#39;, &#39;isUTC&#39;];\nthis.typeDescription = &#39;date and time&#39;;\nthis.parseFormatString = options.parseFormat || parseFormats;\nthis.formatString = (options.format === false) ? false : (options.format || &#39;YYYY-MM-DD h:m:s a&#39;);\nthis.isUTC = options.utc || false;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/datetime.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Datetime.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/datetime.js#L34"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Datetime.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/datetime.js#L35"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Datetime.moment( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Returns a new <code>moment</code> object with the field value.    </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/datetime.js#L36">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Datetime.parse( item )  </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Parses input using moment, sets the value, and returns the moment object.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/datetime.js#L37">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Datetime.getInputFromData( data ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Get the value from a data object; may be simple or a pair of fields</p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/datetime.js#L39-L48"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Datetime.validateInput( data [, required, item ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Checks that a valid date has been provided in a data object<br>An empty value clears the stored value and is considered valid.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/datetime.js#L50-L64"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Datetime.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/datetime.js#L66-L82"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Email",html:'<h4 id="-field-types-email-list-path-options-">.Field.Types.Email( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._underscoreMethods = [&#39;gravatarUrl&#39;];\nthis.typeDescription = &#39;email address&#39;;\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/email.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Email.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/email.js#L21"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Email.gravatarUrl( item, size, defaultImage, rating ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@param</em> <strong>size</strong> {Number} - size of images ranging from 1 to 2048 pixels, square<br><em>@param</em> <strong>defaultImage</strong> {String}<br><em>@param</em> <strong>rating</strong> {String}<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Get the value from a data object; may be simple or a pair of fields</p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/email.js#L23-L43"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Email.validateInput( data [, required, item ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a valid email has been provided in a data object</p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/email.js#L45-L55"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Email.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.<br>Ensures that the email address is lowercase.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/email.js#L57-L69"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Embedly",html:'<h4 id="-field-types-embedly-list-path-options-">.Field.Types.Embedly( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p class="caution-note">Requires the option <code>from</code> to refer to another path in the schema that provides the url to expand.</p>\n\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">\nthis._underscoreMethods = [&#39;reset&#39;];\nthis._fixedSize = &#39;full&#39;;</p>\n<p>this.fromPath = options.from;\nthis.embedlyOptions = options.options || {};</p>\n<p>// TODO: implement filtering, usage disabled for now\noptions.nofilter = true;</p>\n<p></code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/embedly.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre>  </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Embedly.addToSchema(  ) </span>      </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.    </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/embedly.js#L63-L182"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Embedly.reset( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Resets the value of the field</h4></div><pre class=" language-javascript"><code class="language-javascript">{\n    exists: false,\n    type: null,\n    title: null,\n    url: null,\n    width: null,\n    height: null,\n    version: null,\n    description: null,\n    html: null,\n    authorName: null,\n    authorUrl: null,\n    providerName: null,\n    providerUrl: null,\n    thumbnailUrl: null,\n    thumbnailWidth: null,\n    thumbnailHeight: null\n}</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/embedly.js#L185-L210"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Embedly.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<pre><code class="lang-javascript">return item.get(this.paths.html);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/embedly.js#L213-L221"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Embedly.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">// Assume that it has changed if the url is different\nreturn item.isModified(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/embedly.js#L224-L233">&nbsp; </div><pre class=" language-javascript hideCode api"></pre></p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Embedly.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p class="caution-note">Embedly fields do not incur validation and will always return <code>true</code>. </p>\n\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/embedly.js#L236-L245"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Embedly.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.    </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/embedly.js#L248-L275"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"GeoPoint",html:'<h4 id="-field-types-geopoint-list-path-options-">.Field.Types.GeoPoint( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._fixedSize = &#39;medium&#39;;</p>\n<p>// TODO: implement filtering, usage disabled for now\noptions.nofilter = true;</p>\n<p></code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/geopoint.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.GeoPoint.addToSchema(  ) </span>      </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.<br>Adds a 2dsphere indexed lat/lng pair.      </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/geopoint.js#L34-L45"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.GeoPoint.getData( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Gets the field&#39;s data from an Item, as used by the React components</p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/geopoint.js#L48-L55"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.GeoPoint.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<pre><code class="lang-javascript">return item.get(this.paths.html);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/geopoint.js#L58-L69"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.GeoPoint.validateInput( data [, required, item ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/geopoint.js#L72-L93"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.GeoPoint.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.    </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/geopoint.js#L96-L130"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Html",html:'<h4 id="-field-types-html-list-path-options-">.Field.Types.Html( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._defaultSize = &#39;full&#39;;\nthis.wysiwyg = options.wysiwyg || false;\nthis.height = options.height || 180;\nthis._properties = [&#39;wysiwyg&#39;, &#39;height&#39;];</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/html.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre>  </p>\n<p><span class="subMethod"> .Field.Types.Html.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.    </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/html.js#L21">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Key",html:'<h4 id="-field-types-key-list-path-options-">.Field.Types.Key( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._defaultSize = &#39;medium&#39;;\nthis.separator = options.separator || &#39;-&#39;;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/key.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre>  </p>\n<p><span class="subMethod"> .Field.Types.Key.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.    </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/key.js#L20">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Key.generateKey( str ) </span>     </p>\n<blockquote>\n<p><em>@param</em> <strong>str</strong> {String}<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Generates a valid key from a string</p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/key.js#L22-L27"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Key.validateInput( data [, required, item ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Checks that a valid key has been provided in a data object</p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/key.js#L29-L39"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Key.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.<br>Ensures that the email address is lowercase.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/key.js#L41-L53"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"LocalFile",html:'<h4 id="-field-types-localfile-list-path-options-">.Field.Types.LocalFile( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._underscoreMethods = [&#39;format&#39;, &#39;uploadFile&#39;];\nthis._fixedSize = &#39;full&#39;;</p>\n<p>// TODO: implement filtering, usage disabled for now\noptions.nofilter = true;\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/localfile.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.LocalFile.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/localfile.js#L65-L167"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.\nDelegates to the options.format function if it exists.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/localfile.js#L170-L185"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.hasFormatter(  ) </span> </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has formatter function in <code>options.format</code></p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/localfile.js#L188-L196">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.href( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Return the public href for the stored file  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/localfile.js#L199-L209">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">return item.isModified(this.paths.path);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/localfile.js#L212-L220">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p class="warning-note"> TODO (if needed) - will only return true</p>\n\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/localfile.js#L295-L304"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p class="warning-note"> TODO - direct updating of data (not via upload) - will not currently return</p>\n\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/localfile.js#L235-L243"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.uploadFile( item, file, update [, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>file</strong> {Object} - valid file object<br><em>@param</em> <strong>update</strong> {Boolean} - update or not<br><em>@param</em> <strong>callback</strong> {Function} - callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Uploads the file for this field.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/localfile.js#L246-L304"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.getRequestHandler( item, req [, paths, callback] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - valid file object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.action</code> in <code>req.body</code> (<code>clear</code> or <code>delete</code>)<br><code>field.paths.upload</code> in <code>req.files</code> (uploads the image to localfile)  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/localfile.js#L307-L348">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.handleRequest( item, req [, paths, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - valid file object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.LocalFile.getRequestHandler()</code>).  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/localfile.js#L351-L359"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre></p>\n'
},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"LocalFiles",html:'<h4 id="-field-types-localfiles-list-path-options-">.Field.Types.LocalFiles( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._underscoreMethods = [&#39;format&#39;, &#39;uploadFile&#39;];\nthis._fixedSize = &#39;full&#39;;</p>\n<p>// TODO: implement filtering, usage disabled for now\noptions.nofilter = true;\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/localfiles.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.LocalFiles.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/localfiles.js#L67-L193"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.\nDelegates to the options.format function if it exists.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/localfiles.js#L196-L214"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.hasFormatter(  ) </span> </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has formatter function in <code>options.format</code></p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/localfiles.js#L217-L225">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.href( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Return the public href for a single stored file  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/localfiles.js#L228-L238">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">return item.isModified(this.paths.path);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/localfiles.js#L241-L249">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p class="warning-note"> TODO (if needed) - will only return true</p>\n\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/localfiles.js#L252-L261"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p class="warning-note"> TODO - direct updating of data (not via upload) - will not currently return</p>\n\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/localfiles.js#L264-L272"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.uploadFiles( item, file, update [, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>file</strong> {Object} - valid file object<br><em>@param</em> <strong>update</strong> {Boolean} - update or not<br><em>@param</em> <strong>callback</strong> {Function} - callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Uploads the files for this field.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/localfiles.js#L275-L339"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.getRequestHandler( item, req [, paths, callback] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - valid file object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.action</code> in <code>req.body</code> (<code>clear</code> or <code>delete</code>)<br><code>field.paths.upload</code> in <code>req.files</code> (uploads the image to localfiles)  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/localfiles.js#L352-L421">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.handleRequest( item, req [, paths, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - valid file object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.LocalFiles.getRequestHandler()</code>).  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/localfiles.js#L424-L432"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre></p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Location",html:'<h4 id="-field-types-location-list-path-options-">.Field.Types.Location( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._underscoreMethods = [&#39;format&#39;, &#39;googleLookup&#39;, &#39;kmFrom&#39;, &#39;milesFrom&#39;];\nthis._fixedSize = &#39;full&#39;;</p>\n<p>this.enableMapsAPI = (options.geocodeGoogle===true || (options.geocodeGoogle !== false &amp;&amp; keystone.get(&#39;google server api key&#39;))) ? true : false;</p>\n<p>this._properties = [&#39;enableMapsAPI&#39;];\nthis.requiredPaths = [&#39;street1&#39;, &#39;suburb&#39;];</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/location.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Location.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/location.js#L62-L138"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats a list of the values stored by the field. Only paths that have values will be included.<br>Optionally provide a space-separated list of values to include.<br>Delimiter defaults to <code>&#39;, &#39;</code>.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/location.js#L141-L166"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/location.js#L169-L185">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object.<br><code>options.required</code> specifies an Array or space-delimited list of paths that are required (defaults to street1, suburb).  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/location.js#L188-L230"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/location.js#L233-L293"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.getRequestHandler( item, req [, paths, callback ] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - valid file object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.improve</code> in <code>req.body</code> - improves data via <code>.googleLookup()</code>.<br><code>field.paths.overwrite</code> in <code>req.body</code> - in conjunction with <code>improve</code>, overwrites existing data.   </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/location.js#L296-L333">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.handleRequest( item, req [, paths, callback ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - valid file object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.Location.getRequestHandler()</code>).  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/location.js#L336-L344"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre></p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.googleLookup( item, region [, update ], callback )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object}<br><em>@param</em> <strong>region</strong> {String}<br><em>@param</em> <strong>update</strong> {Boolean|String} -  (optional)<br><em>@param</em> <strong>callback</strong> {Function}<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Autodetect the full address and lat, lng from the stored value.<br>Internal status codes mimic the Google API status codes.</p>\n<p class="caution-note">Uses Google&#39;s Maps API and may only be used in conjunction with a Google map.<br>Geocoding results without displaying them on a map is prohibited.<br>Please make sure your Keystone app complies with the Google Maps API License. </p>\n\n\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/location.js#L336-L344"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre></p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.kmFrom( item, point )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>point</strong> {Number}<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns the distance from a [lat, lng] point in kilometres.   </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/location.js#L529-L537"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre></p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.milesFrom( item, point )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>point</strong> {Number}<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns the distance from a [lat, lng] point in miles.   </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/location.js#L540-L548"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre></p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Markdown",html:'<h4 id="-field-types-markdown-list-path-options-">.Field.Types.Markdown( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._defaultSize = &#39;full&#39;;</p>\n<p>// TODO: implement filtering, usage disabled for now\noptions.nofilter = true;</p>\n<p>this.toolbarOptions = options.toolbarOptions || {};\nthis.height = options.height || 90;</p>\n<p>// since wysiwyg option can be falsey this needs to use <code>in</code> instead of ||\nthis.wysiwyg = (&#39;wysiwyg&#39; in options) ? options.wysiwyg : true;</p>\n<p>this._properties = [&#39;wysiwyg&#39;, &#39;height&#39;, &#39;toolbarOptions&#39;];</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/markdown.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Markdown.addToSchema(  ) </span>      </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.    </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/markdown.js#L41-L82"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Markdown.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<pre><code class="lang-javascript">return item.get(this.paths.html);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/markdown.js#L85-L93"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Markdown.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">// Assume that it has changed if the url is different\nreturn item.isModified(this.paths.md);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/markdown.js#L112-L120">&nbsp; </div><pre class=" language-javascript hideCode api"></pre></p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Markdown.validateInput( data [, required, item ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object.<br>Will accept either the field path, or paths.md.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/markdown.js#L96-L109"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Markdown.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.<br>Will accept either the field path, or paths.md </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/markdown.js#L123-L138"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Money",html:'<h4 id="-field-types-money-list-path-options-">.Field.Types.Money( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this.currency = options.currency;\nthis._nativeType = Number;\nthis._underscoreMethods = [&#39;format&#39;];\nthis._properties = [&#39;currency&#39;];\nthis._fixedSize = &#39;small&#39;;\nthis._formatString = (options.format === false) ? false : (options.format || &#39;$0,0.00&#39;);</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/money.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Money.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/money.js#L29-L46">&nbsp; </div><pre class=" language-javascript hideCode api"></pre></p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Money.validateInput( data [, required, item ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/money.js#L27"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Money.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.   </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes/money.js#L26"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Name",html:'<h4 id="-field-types-name-list-path-options-">.Field.Types.Name( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">\nthis._fixedSize = &#39;large&#39;;\noptions.nofilter = true; // TODO: added in 0.4\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/name/NameType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Name.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.<br>Adds String properties for .first and .last name, and a virtual with get() and set() methods for .full  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/name/NameType.js#L18-L57"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Name.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/name/NameType.js#L59-L65"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Name.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">return item.isModified(this.paths.first) || item.isModified(this.paths.last);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/name/NameType.js#L84-L91">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Name.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/name/NameType.js#L67-L82"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Name.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/name/NameType.js#L93-L124"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Number",html:'<h4 id="-field-types-number-list-path-options-">.Field.Types.Number( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = Number;\nthis._fixedSize = &#39;small&#39;;\nthis._underscoreMethods = [&#39;format&#39;];\nthis._formatString = (options.format === false) ? false : (options.format || &#39;0,0[.][000000000000]&#39;);</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/number/NumberType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Number.addFilterToQuery( filter, query ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object \n<em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Adds filters to a query.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/number/NumberType.js#L23-L56"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Number.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/number/NumberType.js#L32-L51"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Number.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Checks that a valid array of number has been provided in a data object.<br>An empty value clears the stored value and is considered valid.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/number/NumberType.js#L69-L84"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Number.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/number/NumberType.js#L86-L102"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"NumberArray",html:'<h4 id="-field-types-numberarray-list-path-options-">.Field.Types.NumberArray( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = [Number];\nthis._underscoreMethods = [&#39;format&#39;];\nthis._formatString = (options.format === false) ? false : (options.format || &#39;0,0[.][000000000000]&#39;);\nthis._fixedSize = &#39;small&#39;;</p>\n<p></code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/numberarray/NumberArrayType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.NumberArray.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/numberarray/NumberArrayType.js#L32-L51"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.NumberArray.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Checks that a valid array of number has been provided in a data object.<br>An empty value clears the stored value and is considered valid.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/numberarray/NumberArrayType.js#L63-L101"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.NumberArray.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/numberarray/NumberArrayType.js#L103-L138"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Password",html:'<h4 id="-field-types-password-list-path-options-">.Field.Types.Password( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._underscoreMethods = [&#39;format&#39;, &#39;compare&#39;];\nthis._fixedSize = &#39;large&#39;;\n// You can&#39;t sort on password fields\noptions.nosort = true;\noptions.nofilter = true; // TODO: remove this when 0.4 is merged\nthis.workFactor = options.workFactor || 10;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/password/PasswordType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Password.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/password/PasswordType.js#L23-L77"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Password.addFilterToQuery( filter, query )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Add filters to a query.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/password/PasswordType.js#L79-L86"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Password.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p class="note"> Password fields are always formatted as a random no. of asterisks, because the saved hash should never be displayed nor the length of the actual password hinted at.</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/password/PasswordType.js#L88-L103"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Password.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/password/PasswordType.js#L169-L185">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Password.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object.<br><code>options.required</code> specifies an Array or space-delimited list of paths that are required (defaults to street1, suburb).  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/password/PasswordType.js#L188-L230"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Password.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/password/PasswordType.js#L233-L293"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'
},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Relationship",html:'<h4 id="-field-types-relationship-list-path-options-">.Field.Types.Relationship( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this.many = (options.many) ? true : false;\nthis.filters = options.filters;\nthis._defaultSize = &#39;full&#39;;\nthis._nativeType = keystone.mongoose.Schema.Types.ObjectId;\nthis._underscoreMethods = [&#39;format&#39;];\nthis._properties = [&#39;isValid&#39;, &#39;many&#39;, &#39;filters&#39;];</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Relationship.addFilterToQuery( filter, query )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Add filters to a query.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L98-L117"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.addFilters( query, item ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@param</em> <strong>item</strong> {Object} - list item<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Adds relationship filters to a query </p>\n<p class="caution-note">TODO: Deprecate this? Not sure it&#39;s used anywhere </p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L203-L223">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L63-L96"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>force the formatted value to be a string</p>\n<p class="caution-note">unexpected things happen with ObjectIds.</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L119-L126"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.hasFilters </span>   </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Whether the field has any filters defined </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L194-L201">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.isValid </span>   </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Returns true if the relationship configuration is valid  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L176-L183">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.refList </span>   </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Returns the Related List </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L185-L192">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.<br>Only updates the value if it has changed.<br>Treats an empty string as a null value.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L141-L174"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L128-L139"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"S3File",html:'<h4 id="-field-types-s3file-list-path-options-">.Field.Types.S3File( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">grappling.mixin(this)\n    .allowHooks(&#39;pre:upload&#39;);\nthis._underscoreMethods = [&#39;format&#39;, &#39;uploadFile&#39;];\nthis._fixedSize = &#39;full&#39;;</p>\n<p>// TODO: implement filtering, usage disabled for now\noptions.nofilter = true;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.S3File.s3config   </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Exposes the custom or keystone azure config settings.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L67-L75">&nbsp; </div><pre class=" language-javascript hideCode api"></pre>  </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L78-L173"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<pre><code class="lang-javascript">return item.get(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L176-L184"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.hasFormatter(  ) </span> </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects the field have formatter function.  </p>\n<pre><code class="lang-javascript">return &#39;function&#39; === typeof this.options.format;\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L178-L186">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.generateHeaders( item, file, callback )  </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - list item<br><em>@param</em> <strong>file</strong> {Object} - the uploaded file<br><em>@param</em> <strong>callback</strong> {Function} - callback<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Generates a headers object for this item to use during upload.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L223-L361"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">return item.isModified(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L187-L195">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object </p>\n<p class="warning-note"> TODO - will only return true</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L198-L207"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object</p>\n<p class="warning-note"> TODO - will not return</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L210-L218"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.uploadFile( item, file, update [, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>file</strong> {Object} - valid file object<br><em>@param</em> <strong>update</strong> {Boolean} - update or not<br><em>@param</em> <strong>callback</strong> {Function} - callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Uploads the file for this field.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L221-L277"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.getRequestHandler( item, req [, paths, callback] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.action</code> in <code>req.body</code> (<code>clear</code> or <code>delete</code>)<br><code>field.paths.upload</code> in <code>req.files</code> (uploads the file to s3file)  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L280-L320">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.handleRequest( item, req [, paths, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.S3File.getRequestHandler()</code>).  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L323-L331"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Select",html:'<h4 id="-field-types-select-list-path-options-">.Field.Types.Select( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this.ui = options.ui || &#39;select&#39;;\nthis.numeric = options.numeric ? true : false;\nthis._nativeType = (options.numeric) ? Number : String;\nthis._underscoreMethods = [&#39;format&#39;];\nthis.<em>properties = [&#39;ops&#39;, &#39;numeric&#39;];\nif (typeof options.options === &#39;string&#39;) {\n    options.options = options.options.split(&#39;,&#39;);\n}\nif (!Array.isArray(options.options)) {\n    throw new Error(&#39;Select fields require an options array.&#39;);\n}\nthis.ops = options.options.map(function(i) {\n    var op = </em>.isString(i) ? { value: i.trim(), label: utils.keyToLabel(i) } : i;\n    if (!<em>.isObject(op)) {\n        op = { label: &#39;&#39; + i, value: &#39;&#39; + i };\n    }\n    if (options.numeric &amp;&amp; !</em>.isNumber(op.value)) {\n        op.value = Number(op.value);\n    }\n    return op;\n});\n// undefined options.emptyOption defaults to true\nif (options.emptyOption === undefined) {\n    options.emptyOption = true;\n}\n// ensure this.emptyOption is a boolean\nthis.emptyOption = options.emptyOption ? true : false;\n// cached maps for options, labels and values\nthis.map = utils.optionsMap(this.ops);\nthis.labels = utils.optionsMap(this.ops, &#39;label&#39;);\nthis.values = _.pluck(this.ops, &#39;value&#39;);</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/select/SelectType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Select.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object}<br><em>@param</em> <strong>query</strong> {Object}<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/select/SelectType.js#L103-L114">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Select.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p>Adds a virtual for accessing the label of the selected value, and statics to the Schema for converting a value to a label, and retrieving all of the defined options.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/select/SelectType.js#L47-L87"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Select.cloneOps(  ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Retrieves a shallow clone of the options arrays</h4></div><pre class=" language-javascript"><code class="language-javascript"> return <em>.map(this.ops, </em>.clone); </code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/select/SelectType.js#L89-L94"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Select.cloneMap(  ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Retrieves a shallow clone of the options map.</h4></div><pre class=" language-javascript"><code class="language-javascript"> return utils.optionsMap(this.ops, true); </code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/select/SelectType.js#L96-L101"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Select.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/select/SelectType.js#L127-L132"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Select.validateInput( data [, required, item ] ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object}<br><em>@param</em> <strong>required</strong> {Boolean} \n<em>@param</em> <strong>item</strong> {Object}<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Validates that a valid option has been provided in a data object.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/select/SelectType.js#L116-L125"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Text",html:'<h4 id="-field-types-text-list-path-options-">.Field.Types.Text( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._underscoreMethods = [&#39;crop&#39;];</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/text/TextType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Text.addFilterToQuery( filter, query ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Adds filters to a query.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/text/TextType.js#L17-L37"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Text.crop( item, length, append, preserveWords ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>length</strong> {Number} - length to crop to<br><em>@param</em> <strong>append</strong> {String} - string to append<br><em>@param</em> <strong>preserveWords</strong> {Boolean} - whether to preserve the last word in full<br><em>@return</em> {String} - cropped string<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Crops the string to the specifed length.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/text/TextType.js#L39-L44"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"TextArray",html:'<h4 id="-field-types-textarray-list-path-options-">.Field.Types.TextArray( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = [String];\nthis._underscoreMethods = [&#39;crop&#39;];</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/textarray/TextArrayType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre>  </p>\n<p><span class="subMethod"> .Field.Types.TextArray.validateInput( data [, required, item ]) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid filter object<br><em>@param</em> <strong>required</strong> {Boolean} - required or not<br><em>@param</em> <strong>item</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/textarray/TextArrayType.js#L26-L47"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.TextArray.updateItem( item, data ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@param</em> <strong>data</strong> {Object}<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.    </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/textarray/TextArrayType.js#L49-L72"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Textarea",html:'<h4 id="-field-types-textarea-list-path-options-">.Field.Types.Textarea( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._underscoreMethods = [&#39;format&#39;, &#39;crop&#39;];\nthis.height = options.height || 90;\nthis._properties = [&#39;height&#39;];</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/textarea/TextareaType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Textarea.addFilterToQuery( filter, query ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Adds filters to a query.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/textarea/TextareaType.js#L21"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Textarea.crop( item, length, append, preserveWords ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>length</strong> {Number} - length to crop to<br><em>@param</em> <strong>append</strong> {String} - string to append<br><em>@param</em> <strong>preserveWords</strong> {Boolean} - whether to preserve the last word in full<br><em>@return</em> {String} - cropped string<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Crops the string to the specifed length.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/textarea/TextareaType.js#L22"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Textarea.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/textarea/TextareaType.js#L24-L30"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Url",html:'<h4 id="-field-types-url-list-path-options-">.Field.Types.Url( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._underscoreMethods = [&#39;format&#39;];\nthis._formatUrl = options.format || removeProtocolPrefix;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/url/UrlType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Url.addFilterToQuery( filter, query ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Adds filters to a query.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/url/UrlType.js#L18-L19"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Url.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value using either a supplied format function or default.<br>Strips the leading protocol from the value for simpler display.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/url/UrlType.js#L21-L28"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Url.removeProtocolPrefix( url ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>url</strong> {String} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Remove the protocol prefix from url.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/url/UrlType.js#L30-L35"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Classes/FieldTypes.md",header:".Field.Types Classes",menuHeader:"keystone.field.types"},list:{list:[{keys:"list",header:".List Class",menuHeader:"keystone.list",main:"list",html:'<h4 id="new-keystone-list-key-options-">new Keystone.List( key, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em>  - List name<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - Object of valid options<br><em>@return</em> <strong>Instance</strong>   </p>\n</blockquote>\n<p>Create a new Keystone List.<br>Each list is a wrapper around a mongoose collection schema and includes Keystone specific enhancements.<br>The mongoose schema is available via <code>list.schema</code>.  </p>\n<p><div class="code-header"> <h4>Create a new list</h4></div><pre class=" language-javascript"><code class="language-javascript">  </p>\n<pre><code>    var keystone = require(&#39;keystone&#39;);\n    var Types = keystone.Field.Types;\n\n    var Post = new keystone.List(&#39;Post&#39;, {\n        autokey: { path: &#39;slug&#39;, from: &#39;title&#39;, unique: true },\n        map: { name: &#39;title&#39; },\n        defaultSort: &#39;-createdAt&#39;\n    });\n\n    Post.add({\n        title: { type: String, required: true },\n        state: { type: Types.Select, options: &#39;draft, published, archived&#39;, default: &#39;draft&#39; },\n        author: { type: Types.Relationship, ref: &#39;User&#39; },\n        createdAt: { type: Date, default: Date.now },\n        publishedAt: Date,\n        image: { type: Types.CloudinaryImage },\n        content: {\n            brief: { type: Types.Html, wysiwyg: true, height: 150 },\n            extended: { type: Types.Html, wysiwyg: true, height: 400 }\n        }\n    });\n\n    Post.defaultColumns = &#39;title, state|20%, author, publishedAt|15%&#39;;\n    Post.register();\n</code></pre><p></code></pre>  </p>\n<p><div class="code-header"> <h4>Default options </h4></div><pre class=" language-javascript"><code class="language-javascript">\n    var defaultOptions = {\n        schema: {\n            collection: keystone.prefixModel(key)\n        },\n        noedit: false,\n        nocreate: false,\n        nodelete: false,\n        autocreate: false,\n        sortable: false,\n        hidden: false,\n        track: false,\n        inherits: false,\n        searchFields: &#39;<strong>name</strong>&#39;,\n        defaultSort: &#39;<strong>default</strong>&#39;,\n        defaultColumns: &#39;<strong>name</strong>&#39;\n    };</p>\n<p></code></pre>  </p>\n<p><div class="code-header"> <h4>List properties </h4></div><pre class=" language-javascript"><code class="language-javascript">\n    this.key = key;\n    this.path = this.get(&#39;path&#39;) || utils.keyToPath(key, true);\n    this.schema = new keystone.mongoose.Schema({}, this.options.schema);\n    this.schemaFields = [];\n    this.uiElements = [];\n    this.underscoreMethods = {};\n    this.fields = {};\n    this.fieldsArray = [];\n    this.fieldTypes = {};\n    this.relationshipFields = [];\n    this.relationships = {};\n    this.mappings = {\n        name: null,\n        createdBy: null,\n        createdOn: null,\n        modifiedBy: null,\n        modifiedOn: null\n    };</p>\n<p></code></pre>  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"add",html:'<h4 id="list-add-fields-">List.add( fields )</h4>\n<blockquote>\n<p><em>@param</em> <strong>fields</strong> <em>{Object}</em>  - Object of valid Keystone/Mongoose document fields<br><em>@return</em> <strong>this</strong> </p>\n</blockquote>\n<p>Adds one or more fields to the List<br>Based on Mongoose&#39;s <code>Schema.add</code> </p>\n<pre><code class="lang-javascript">Post.add({\n    title: { type: String, required: true },\n    state: { type: Types.Select, options: &#39;draft, published, archived&#39;, default: &#39;draft&#39; },\n    author: { type: Types.Relationship, ref: &#39;User&#39; },\n    createdAt: { type: Date, default: Date.now },\n    publishedAt: Date,\n    image: { type: Types.CloudinaryImage },\n    content: {\n        brief: { type: Types.Html, wysiwyg: true, height: 150 },\n        extended: { type: Types.Html, wysiwyg: true, height: 400 }\n    }\n});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/list.js#L170-L242"> &nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n'
},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"addPattern",html:'<h4 id="list-addpattern-pattern-">List.addPattern( pattern )</h4>\n<blockquote>\n<p><em>@param</em> <strong>pattern</strong> <em>{String}</em>  - Search string<br><em>@return</em> <strong>this</strong>   </p>\n</blockquote>\n<p> Adds preset patterns of fields and behaviours to the Schema</p>\n<p><div class="code-header addGitHubLink" data-file="lib/list.js#L251-L274">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"automap",html:'<h4 id="list-automap-field-">List.automap ( field )</h4>\n<blockquote>\n<p><em>@param</em> <strong>field</strong> <em>{Object}</em>  - valid field object<br><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p>Checks to see if a field path matches a currently unmapped path, and\nif so, adds a mapping for it.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/automap.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"expandColumns",html:'<h4 id="list-expandcolumns-cols-">List.expandColumns( cols )</h4>\n<blockquote>\n<p><em>@param</em> <strong>field</strong> <em>{Object}</em>  - valid field object<br><em>@return</em> <strong>this</strong>   </p>\n</blockquote>\n<p>Expands a comma-separated string or array of columns into valid column objects.  </p>\n<p>Columns can be:  </p>\n<ul>\n<li>A Field, in the format <code>field|width</code> </li>\n<li>A Field in a single related List, in the format <code>list:field|width</code>  </li>\n<li>Any valid path in the Schema, in the format <code>path|width</code>  </li>\n</ul>\n<p>The width part is optional, and can be in the format <code>n%</code> or <code>npx</code>.</p>\n<p>The path <code>__name__</code> is automatically mapped to the namePath of the List.  </p>\n<p>The field or path for the name of the item (defaults to ID if not set or detected) is automatically prepended if not explicitly included.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/expandColumns.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"expandSort",html:'<h4 id="list-expandsort-input-">List.expandSort( input )</h4>\n<blockquote>\n<p><em>@param</em> <strong>paths</strong> <em>{String}</em><br><em>@return</em> <strong>Object</strong><br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/list/expandSort.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"field",html:'<h4 id="list-field-path-options-">List.field( path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>path</strong> <em>{String}</em> - new field path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - field options<br><em>@return</em> <strong>Object</strong><br><em>@api</em> <strong>private</strong>    </p>\n</blockquote>\n<p>Creates a new field at the specified path, with the provided options.<br>If no options are provides, returns the field at the specified path.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/field.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"getDocumentName",html:'<h4 id="list-getdocumentname-doc-escape-">List.getDocumentName( doc, escape )</h4>\n<blockquote>\n<p><em>@param</em> <strong>doc</strong> <em>{Object}</em> - mongoose document<br><em>@param</em> <strong>escape</strong> <em>{Boolean}</em><br><em>@return</em> <strong>String</strong>    </p>\n</blockquote>\n<p>Gets the name of the provided document from the correct path  </p>\n<pre><code class="lang-javascript">var name = list.getDocumentName(item)\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/list.js#L685-L700"> &nbsp; </div><pre class=" language-javascript hideCode api"></pre>  </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"getPages",html:'<h4 id="list-getpages-options-maxpages-">List.getPages( options, maxPages )</h4>\n<blockquote>\n<p><em>@param</em> <strong>options</strong> {Object} - page options<br><em>@param</em> <strong>maxPages</strong> {Number} - the maximum number pages to display in the pagination<br><em>@return</em> <strong>Object</strong>  - options  </p>\n</blockquote>\n<p>Generate page array for pagination  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list.js#L1067-L1098"> &nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"getSearchFilters",html:'<h4 id="list-getsearchfilters-search-add-">List.getSearchFilters( search, add )</h4>\n<blockquote>\n<p><em>@param</em> <strong>search</strong> {String} - query\n<em>@param</em> <strong>add</strong> {Object} - additional filters<br><em>@return</em> <strong>Object</strong></p>\n</blockquote>\n<p>Gets filters for a Mongoose query that will search for the provided string, based on the searchFields List option.  </p>\n<p>Also accepts a filters object from <code>processFilters()</code>, any of which may override the search string.  </p>\n<pre><code class="lang-javascript">list.getSearchFilters(&#39;jed&#39;) // returns { name: /jed/i }\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/list.js#L722-L964"> &nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"getUniqueValue",html:'<h4 id="list-getuniquevalue-path-generator-_limit_-callback-">List.getUniqueValue( path, generator [, <em>limit</em> ], callback )</h4>\n<blockquote>\n<p><em>@param</em> <strong>path</strong> {String} - path to check for uniqueness<br><em>@param</em> <strong>generator</strong> {Function} - generator method to call to generate a new value<br><em>@param</em> <strong>limit</strong> {Number} - the maximum number of attempts (optional, defaults to 10)<br><em>@param</em> <strong>callback</strong> {Function} - callback(err, uniqueValue)<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Gets a unique value from a generator method by checking for documents with the same value.  </p>\n<p>To avoid infinite loops when a unique value cannot be found, it will bail and pass back an undefined value after 10 attempts.  </p>\n<p class="warning-note">Because there will always be a small amount of time between checking for an existing value and saving a document, race conditions can occur and it is possible that another document has the &#39;unique&#39; value assigned at the same time. <br /> <br /> If true uniqueness is required, you should also create a unique index on the database path, and handle duplicate errors thrown on save. </p>  \n\n\n\n\n<p><div class="code-header addGitHubLink" data-file="lib/list/getUniqueValue.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"map",html:'<h4 id="list-map-field-path-">List.map( field, path )</h4>\n<blockquote>\n<p><em>@param</em> <strong>field</strong> {String} - map to<br><em>@param</em> <strong>path</strong> {String} - map this<br><em>@return</em> <strong>Object</strong><br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Maps a built-in field (e.g. name) to a specific path or returns field mapping  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/map.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"paginate",html:'<h4 id="list-paginate-options-_callback_-">List.paginate( options  [, <em>callback</em> ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>options</strong> {Object} - options<br><em>@param</em> <strong>callback</strong> {Function} - callback<br><em>@return</em> <strong>chain</strong> - exec</p>\n</blockquote>\n<p>Gets a special Query object that will paginate documents in the list.  </p>\n<pre><code class="lang-javascript">list.paginate({\n    page: 1,\n    perPage: 100,\n    maxPages: 10\n}).exec(function(err, results) {\n    // do something\n});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/list/paginate.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"processFilters",html:'<h4 id="list-processfilters-q-">List.processFilters( q )</h4>\n<blockquote>\n<p><em>@param</em> <strong>q</strong> {String} - filters<br><em>@return</em> <strong>Object</strong> - filters  </p>\n</blockquote>\n<p>Processes a filter string into a filters object</p>\n<p><div class="code-header addGitHubLink" data-file="lib/list.js#L703-L719">&nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"register",html:'<h4 id="list-register-">List.register(  )</h4>\n<blockquote>\n<p><em>@return</em> <strong>this</strong>    </p>\n</blockquote>\n<p>Registers the Schema with Mongoose, and the List with Keystone.  </p>\n<p>Also adds default fields and virtuals to the schema for the list.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/register.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"relationship",html:'<h4 id="list-relationship-def-">List.relationship( ...def )</h4>\n<blockquote>\n<p><em>@param</em> <strong>def</strong> {...String|Option} - relationship (multiple arguments allowed)<br><em>@return</em> <strong>this</strong><br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Registers relationships to this list defined on others  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/relationship.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"selectColumns",html:'<h4 id="list-selectcolumns-q-cols-">List.selectColumns( q, cols )</h4>\n<blockquote>\n<p><em>@param</em> <strong>q</strong> {Query} - query<br><em>@param</em> <strong>cols</strong> {Array} - columns<br><em>@return</em> <strong>Query</strong> - q   </p>\n</blockquote>\n<p>Specified select and populate options for a query based the provided columns.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/selectColumns.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"set",html:'<h4 id="list-set-key-value-">List.set( key, value )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> {String} - key name<br><em>@param</em> <strong>value</strong> {...String|Object|Array|Function} - value<br><em>@return</em> <strong>value</strong> - value  </p>\n</blockquote>\n<p>Gets and Sets list options. Aliased as <code>.get()</code>.  </p>\n<pre><code class="lang-javascript">list.set(&#39;test&#39;) // returns the &#39;test&#39; value\nlist.set(&#39;test&#39;, value) // sets the &#39;test&#39; option to `value`\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/list/set.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"underscoreMethod",html:'<h4 id="list-underscoremethod-path-fn-">List.underscoreMethod( path, fn )</h4>\n<blockquote>\n<p><em>@param</em> <strong>path</strong> {String} - path<br><em>@param</em> <strong>fn</strong> {Function} - underscore method<br><em>@return</em> <strong>this</strong>  </p>\n</blockquote>\n<p>Adds a method to the underscoreMethods collection on the list, which is then added to the schema before the list is registered with mongoose.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/underscoreMethod.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"updateAll",html:'<h4 id="list-updateall-data-_callback_-">List.updateAll( data [, <em>callback</em> ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - path<br><em>@param</em> <strong>callback</strong> {Function} - callback<br><em>@return</em> <strong>this</strong>  </p>\n</blockquote>\n<p>Updates every document in a List, setting the provided data on each.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/updateAll.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"schema",header:!1,menuHeader:!1,name:"<i>schemaPlugins</i>.autokey",html:'<h4 id="list-_schemaplugins_-autokey-">List <em>schemaPlugins</em>.autokey (  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> </p>\n<h4 id="adds-a-key-to-each-document-in-a-collection">Adds a key to each document in a collection</h4>\n<p>Uses a current field, <code>from</code>, to create a key.<br>Creates a new field based on <code>path</code>.<br>Key will be unique if <code>unique</code> is <strong>boolean</strong> <code>true</code>.<br>Key will update anytime the <code>from</code> field updates unless <code>fixed</code> is <strong>boolean</strong> <code>true</code>.<br></div><pre class=" language-javascript"><code class="language-javascript">    autokey: { \n        path: &#39;slug&#39;, \n        from: &#39;name&#39;,\n        unique: true,\n        fixed: false\n    }\n</code></pre></p>\n<p>Uses <code class="default-value"> list.schema.pre(&#39;save&#39;...) </code> to alter documents.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/schemaPlugins.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"schema",header:!1,menuHeader:!1,name:"<i>schemaPlugins</i>.getRelated",html:'<h4 id="list-_schemaplugins_-getrelated-">List <em>schemaPlugins</em>.getRelated (  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/schemaPlugins.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"schema",header:!1,menuHeader:!1,name:"<i>schemaPlugins</i>.populateRelated",html:'<h4 id="list-_schemaplugins_-populaterelated-">List <em>schemaPlugins</em>.populateRelated (  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/schemaPlugins.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"schema",header:!1,menuHeader:!1,name:"<i>schemaPlugins</i>.sortable",html:'<h4 id="list-_schemaplugins_-sortable-">List <em>schemaPlugins</em>.sortable (  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> </p>\n<h4 id="drag-and-drop-sorting-in-adminui">Drag and Drop Sorting in AdminUI</h4>\n<p>Adds a hidden field <code>sortOrder</code> to the schema.<br></div><pre class=" language-javascript"><code class="language-javascript">    sortable: true </code></pre></p>\n<p>Uses <code class="default-value"> list.schema.pre(&#39;save&#39;...) </code>to alter documents.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/schemaPlugins.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"schema",header:!1,menuHeader:!1,name:"<i>schemaPlugins</i>.track",html:'<h4 id="list-_schemaplugins_-track-">List <em>schemaPlugins</em>.track (  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"><h4>Adds tracking fields to a collection</h4></div><pre class=" language-javascript"><code class="language-javascript"> track: true </code></pre>  </p>\n<p><div class="code-header"> <h4>Added fields</h4></div><pre class=" language-javascript"><code class="language-javascript">    { \n        createdAt: false, \n        createdBy: false,\n        updatedAt: false,\n        updatedBy: false\n    };\n</code></pre> </p>\n<p>Uses <code class="default-value"> list.schema.pre(&#39;save&#39;...) </code> to alter documents.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/schemaPlugins.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],pre:null,main:"markdown/class/Classes/List.md",header:".List Class",menuHeader:"keystone.list",add:!0,schema:{list:[],main:!1,pre:"schemaPlugins",header:!1,menuHeader:!1}},security:{list:[{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",main:"security",html:'<h4 id="keystone-security-csrf">Keystone.security.csrf</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Helper to uilize csrf   </p>\n<p><span class="subMethod"> .security.csrf.TOKEN_KEY </span>= <code>&#39;_csrf&#39;</code><br><span class="subMethod"> .security.csrf.LOCAL_KEY</span>  = <code>&#39;csrf_token_key&#39;</code><br><span class="subMethod"> .security.csrf.LOCAL_VALUE </span>= <code>&#39;csrf_token_value&#39;</code><br><span class="subMethod"> .security.csrf.SECRET_KEY </span>= <code>.TOKEN_KEY + &#39;_secret&#39;</code><br><span class="subMethod"> .security.csrf.SECRET_LENGTH </span>= <code>10</code><br><span class="subMethod"> .security.csrf.CSRF_HEADER_KEY</span>  = <code>&#39;x-csrf-token&#39;</code><br><span class="subMethod"> .security.csrf.XSRF_HEADER_KEY </span>= <code>&#39;x-xsrf-token&#39;</code><br><span class="subMethod"> .security.csrf.XSRF_COOKIE_KEY </span> = <code>&#39;XSRF-TOKEN&#39;</code>  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript  hideCode api"></pre> </p>\n'},{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",name:"createSecret",html:'<h4 id="-security-csrf-createsecret-">.security.csrf.createSecret(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L26-L28"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",name:"getSecret",html:'<h4 id="-security-csrf-getsecret-req-">.security.csrf.getSecret( req )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L22-L24"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",name:"getToken",html:'<h4 id="-security-csrf-gettoken-req-res-">.security.csrf.getToken( req, res )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L30-L34"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",name:"middleware",html:'<h4 id="-security-csrf-middleware-init-req-res-next-">.security.csrf.middleware.init( req, res, next )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@param</em> <strong>next</strong> <em>{Object}</em>  - callback<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L61-L65"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<h4 id="-security-csrf-middleware-validate-req-res-next-">.security.csrf.middleware.validate( req, res, next )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@param</em> <strong>next</strong> <em>{Object}</em>  - callback<br><em>@api</em> <strong>public</strong></p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L67-L82"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",name:"requestToken",html:'<h4 id="-security-csrf-requesttoken-req-">.security.csrf.requestToken( req )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L36-L47"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",name:"tokenize",html:'<h4 id="-security-csrf-tokenize-salt-secret-">.security.csrf.tokenize( salt, secret )</h4>\n<blockquote>\n<p><em>@param</em> <strong>salt</strong> <em>{String}</em><br><em>@param</em> <strong>secret</strong> <em>{String}</em><br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L14-L16"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",name:"validate",html:'<h4 id="-session-keystoneauth-req-token-">.session.keystoneAuth( req, token )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>token</strong> <em>{String}</em>  - token<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L49-L57"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre>  </p>\n'}],main:"markdown/class/Helpers/Security.md",header:".security.csrf helper",menuHeader:"keystone.security.csrf"},session:{list:[{keys:"session",header:".session helper",menuHeader:"keystone.session",main:"session",html:'<h4 id="keystone-session">Keystone.session</h4>\n<p>Helper to uilize sessions  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/session.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"session",header:".session helper",menuHeader:"keystone.session",name:"keystoneAuth",html:'<h4 id="-session-keystoneauth-req-res-next-">.session.keystoneAuth( req, res, next )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@param</em> <strong>next</strong> <em>{Object}</em>  - callback  </p>\n</blockquote>\n<p>Middleware to enable access to Keystone.</p>\n<p>Bounces the user to the signin screen if they are not signed in or do not have permission.  </p>\n<p><code>req.user</code> is the user returned by the database. It&#39;s type is Keystone.List.<br><code>req.user.canAccessKeystone</code> denotes whether the user has access to the admin panel.</p>\n<p class="note">If you&#39;re having issues double check your user model. Setting <code>canAccessKeystone</code> to true in the database will not be reflected here if it is virtual. <br/> See <a href="http://mongoosejs.com/docs/guide.html#virtuals">http://mongoosejs.com/docs/guide.html#virtuals</a></p>\n\n\n<p><div class="code-header addGitHubLink" data-file="lib/session.js#L190-L215"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"session",header:".session helper",menuHeader:"keystone.session",name:"persist",html:'<h4 id="-session-persist-req-res-next-">.session.persist( req, res, next )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@param</em> <strong>next</strong> <em>{Object}</em>  - callback  </p>\n</blockquote>\n<p>Middleware to ensure session persistence across server restarts.  </p>\n<p>Looks for a userId cookie, and if present, and there is no user signed in, automatically signs the user in.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/session.js#L156-L188"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"session",header:".session helper",menuHeader:"keystone.session",name:"signin",html:'<h4 id="-session-signin-user-req-res-onsuccess-onfail-">.session.signin( user, req, res, onSuccess, onFail )</h4>\n<blockquote>\n<p><em>@param</em> <strong>user</strong> <em>{Object}</em>  - user object<br><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@param</em> <strong>onSuccess</strong> <em>{Object}</em>  - onSuccess callback, is passed the User instance<br><em>@param</em> <strong>onFail</strong> <em>{Object}</em>  - onFail callback  </p>\n</blockquote>\n<p>Signs in a user user matching the lookup filters </p>\n<p><div class="code-header"> <h4>Example</h4>From <a href="http://www.sydjs.com" target="_blank">sydjs.com</a> <a href="https://github.com/JedWatson/sydjs-site/blob/master/routes/views/session/signin.js" target="_blank">(code)</a></div><pre class=" language-javascript"><code class="language-javascript">\nfunction(req, res) {</p>\n<pre><code>if (req.user) {\n    return res.redirect(req.cookies.target || &#39;/me&#39;);\n}\n\nvar view = new keystone.View(req, res),\n    locals = res.locals;\n\nlocals.section = &#39;session&#39;;\nlocals.form = req.body;\n\nview.on(&#39;post&#39;, { action: &#39;signin&#39; }, function(next) {\n\n    if (!req.body.email || !req.body.password) {\n        req.flash(&#39;error&#39;, &#39;Please enter your username and password.&#39;);\n        return next();\n    }\n\n    var onSuccess = function() {\n        if (req.body.target &amp;&amp; !/join|signin/.test(req.body.target)) {\n            console.log(&#39;[signin] - Set target as [&#39; + req.body.target + &#39;].&#39;);\n            res.redirect(req.body.target);\n        } else {\n            res.redirect(&#39;/me&#39;);\n        }\n    }\n\n    var onFail = function() {\n        req.flash(&#39;error&#39;, &#39;Your username or password were incorrect, please try again.&#39;);\n        return next();\n    }\n\n    keystone.session.signin({ email: req.body.email, password: req.body.password }, req, res, onSuccess, onFail);\n\n});\n\nview.render(&#39;session/signin&#39;);\n</code></pre><p>}\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/session.js#L71-L116"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"session",header:".session helper",menuHeader:"keystone.session",name:"signinWithUser",html:'<h4 id="-session-signinwithuser-user-req-res-onsuccess-">.session.signinWithUser( user, req, res, onSuccess )</h4>\n<blockquote>\n<p><em>@param</em> <strong>user</strong> <em>{Object}</em>  - user object<br><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@param</em> <strong>onSuccess</strong> <em>{Object}</em>  - onSuccess callback, is passed the User instance  </p>\n</blockquote>\n<p>Creates a user session by supplying a user object </p>\n<p><div class="code-header"> <h4>Example</h4></div><pre class=" language-javascript"><code class="language-javascript"></p>\n<p>// express route\nkeystone.app.post(&#39;/signin&#39;, function(req, res) {</p>\n<pre><code>    var passwordCheck = req.body.password;\n    var onSuccess = function(user) {\n        // successful session generation\n    }\n    User.model.find({email: req.body.email}).exec(function(err, user) {\n        if (user &amp;&amp; (!passwordCheck || scmp(passwordCheck, hash(user.password)))) {\n            keystone.session.signinWithUser(user, req, res, onSuccess);\n        } else {\n            // handle error\n        }\n    });\n</code></pre><p>}\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/session.js#L23-L58"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"session",header:".session helper",menuHeader:"keystone.session",name:"signout",html:'<h4 id="-session-signout-req-res-next-">.session.signout( req, res, next )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@param</em> <strong>next</strong> <em>{Object}</em>  - callback  </p>\n</blockquote>\n<p>Signs the current user out and resets the session</p>\n<p><div class="code-header"> <h4>Example</h4>From <a href="http://www.sydjs.com" target="_blank">sydjs.com</a> <a href="https://github.com/JedWatson/sydjs-site/blob/master/routes/views/session/signout.js" target="_blank">(code)</a></div><pre class=" language-javascript"><code class="language-javascript">\nfunction(req, res) {</p>\n<pre><code>    var view = new keystone.View(req, res),\n        locals = res.locals;\n\n    locals.section = &#39;session&#39;;\n\n    keystone.session.signout(req, res, function() {\n        res.redirect(&#39;/&#39;);\n    });\n</code></pre><p>};\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/session.js#L127-L154"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Helpers/Session.md",header:".session helper",menuHeader:"keystone.session"},view:{list:[{keys:"view",header:".View Class",menuHeader:"keystone.view",main:"view",html:'<h4 id="new-keystone-view-req-res-">new Keystone.View( req, res )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - valid Express req object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - valid Express res object<br><em>@return</em> <strong>Instance</strong>   </p>\n</blockquote>\n<p>Helper to simplify view logic in a Keystone application  </p>\n<pre><code class="lang-javascript">    var view = new keystone.View(req, res);\n\n    view.render(&#39;index&#39;);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/view.js"> <a href="#" class="loadCode">code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"view",header:".View Class",menuHeader:"keystone.view",name:"on",html:'<h4 id="view-on-on-callback-">View.on( on [, callback ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>on</strong> <em>{Function|Object|String}</em>  - Method to be executed<br><em>@param</em> <strong>callback</strong> <em>{Function}</em>  - Function to run in parallel on <code>on</code>.<br><em>@return</em> <strong>this</strong>  </p>\n</blockquote>\n<p>Adds a method (or array of methods) to be executed in parallel to the <code>init</code>, <code>action</code> or <code>render</code> queue.</p>\n<h5 id="argument-on-options">argument <code>on</code> options</h5>\n<ul>\n<li><strong>init</strong> - Init events are always fired in series, before any other actions<pre><code class="lang-javascript">view.on(&#39;init&#39;, function (next) {\n  // do something before any actions or queries have run\n});\n</code></pre>\n</li>\n<li><strong><code>Function</code></strong> - If the first argument is a <strong>Function</strong> that returns truthy then the second argument is added to the queue.</li>\n<li><strong>Dynamic</strong> - Do certain actions depending on information in the response object.  <pre><code class="lang-javascript">view.on({ &#39;user.name.first&#39;: &#39;Admin&#39; }, function(next) {\n    console.log(&#39;Hello Admin!&#39;);\n    next();\n});\n</code></pre>\n</li>\n<li><strong>get</strong> - HTTP verb  </li>\n<li><strong>post</strong> - HTTP verb  </li>\n<li><strong>put</strong> - HTTP verb  </li>\n<li><strong>delete</strong> - HTTP verb  </li>\n<li><strong>render</strong> - Render events are always fired last in parallel, after any other actions  <pre><code class="lang-javascript">view.on(&#39;render&#39;, function (next) {\n  // do something after init, action and query middleware has run\n});\n</code></pre>\n</li>\n</ul>\n<p><div class="code-header"><h4>example</h4></div><pre class=" language-javascript"><code class="language-javascript">view.on(function() {</p>\n<pre><code>    var thing = true;\n    return thing;\n\n}, function(next) {\n\n    console.log(&#39;thing is true!&#39;);\n    next();\n\n});\n</code></pre><p></code></pre>  </p>\n<p><div class="code-header"> </p>\n<p><h4>grab posts</h4><br></div><pre class=" language-javascript"><code class="language-javascript">    // Load posts\n    view.on(&#39;init&#39;, function(next) {</p>\n<pre><code>        var q = keystone.list(&#39;Post&#39;).paginate({\n                page: req.query.page || 1,\n                perPage: 10,\n                maxPages: 10\n            })\n            .where(&#39;state&#39;, &#39;published&#39;)\n            .sort(&#39;-publishedDate&#39;)\n            .populate(&#39;author categories&#39;);\n\n        if (locals.data.category) {\n            q.where(&#39;categories&#39;).in([locals.data.category]);\n        }\n\n        q.exec(function(err, results) {\n            locals.data.posts = results;\n            next(err);\n        });\n\n    });\n</code></pre><p></code></pre>  </p>\n<p><div class="code-header addGitHubLink"  data-file="lib/view.js#L42-L193">&nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'
},{keys:"view",header:".View Class",menuHeader:"keystone.view",name:"query",html:'<h4 id="view-query-key-query-options-">View.query( key, query, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{Array}</em>  - Keys can be nested paths, containing objects will be created as required.<br><em>@param</em> <strong>query</strong> <em>{Object}</em>  - Mongoose query<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - Options<br><em>@return</em> <strong>chain</strong> - QueryCallbacks  </p>\n</blockquote>\n<p>Queues a mongoose query for execution before the view is rendered.<br>The results of the query are set in <code>locals[key]</code>.<br>Keys can be nested paths, containing objects will be created as required.<br>The third argument <code>then</code> can be a method to call after the query is completed such as <code class="default-value"> function(err, results, callback)</code>, or a <code>populateRelated</code> definition (string or array).</p>\n<p><div class="code-header"> <h4>Examples</h4></div><pre class=" language-javascript"><code class="language-javascript"> </p>\n<pre><code>/* an array of books from the database will be added to locals.books.*/\nview.query(&#39;books&#39;, keystone.list(&#39;Book&#39;).model.find());\n\n/*  You can also nest properties on the locals variable. */\nview.query(\n    &#39;admin.books&#39;,\n    keystone.list(&#39;Book&#39;).model.find().where(&#39;user&#39;, &#39;Admin&#39;)\n);\n/* locals.admin.books will be the result of the query */\n\n\n/* views.query().then is always called if it is available */\nview.query(&#39;books&#39;, keystone.list(&#39;Book&#39;).model.find())\n    .then(function (err, results, next) {\n        if (err) return next(err);\n        console.log(results);\n        next();\n    });\n</code></pre><p></code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/view.js#L214-L310">&nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"view",header:".View Class",menuHeader:"keystone.view",name:"render",html:'<h4 id="view-render-renderfn-locals-callback-">View.render( renderFn, locals, callback )</h4>\n<blockquote>\n<p><em>@param</em> <strong>renderFn</strong> <em>{Function|String}</em>  - Render function<br><em>@param</em> <strong>locals</strong> <em>{Object}</em>  - Locals<br><em>@param</em> <strong>callback</strong> <em>{Function}</em>  - Render callback  </p>\n</blockquote>\n<p>Executes the current queue of init and action methods in series, and then executes the render function.<br>If renderFn is a string, it is provided to <code>res.render</code>.<br>It is expected that <em>most</em> init stacks require processing in series, but it is safe to execute actions in parallel.<br>If there are several <code>init</code> methods that should be run in parallel, queue them as an array, e.g. <code>view.on(&#39;init&#39;, [first, second])</code>.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/view.js#L312-L375">&nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Classes/View.md",header:".View Class",menuHeader:"keystone.view"}},"0.3.x":{keystone:{list:[{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",main:"keystone",html:'<h4 id="new-keystone-">new Keystone( )</h4>\n<blockquote>\n<p><em>@return</em> <strong>Instance</strong>   </p>\n</blockquote>\n<p><div class="code-header" ><h4> The Keystone instance is a global object.</h4></div><pre class=" language-javascript  "><code  class=" language-javascript">var keystone = require(&#39;keystone&#39;); </code></pre> </p>\n<p><div class="code-header" ><h4> defaults</h4>Set with:<br /><code>keystone.init({ &#39;key&#39;: value, ... })</code> <br />  <code>keystone.options({ &#39;key&#39;: value, ... })</code><br /><code>keystone.set(&#39;key&#39;, value)</code>  </div><pre class=" language-javascript  "><code  class=" language-javascript">this.express = express; // exposes express\nthis.lists = {};\nthis.paths = {}; </p>\n<p>this._options = {\n    &#39;name&#39;: &#39;Keystone&#39;,\n    &#39;brand&#39;: &#39;Keystone&#39;,\n    &#39;compress&#39;: true,\n    &#39;headless&#39;: false,\n    &#39;logger&#39;: &#39;:method :url :status :response-time ms&#39;,\n    &#39;auto update&#39;: false,\n    &#39;model prefix&#39;: null,\n    &#39;module root&#39;: moduleRoot,\n    &#39;frame guard&#39;: &#39;sameorigin&#39;,\n    &#39;env&#39;: process.env.NODE_ENV || &#39;development&#39;,\n    &#39;port&#39;: process.env.PORT || process.env.OPENSHIFT_NODEJS_PORT,\n    &#39;host&#39;: process.env.HOST || process.env.IP || process.env.OPENSHIFT_NODEJS_IP,\n    &#39;listen&#39;: process.env.LISTEN,\n    &#39;ssl&#39;: process.env.SSL,\n    &#39;ssl port&#39;: process.env.SSL_PORT,\n    &#39;ssl host&#39;: process.env.SSL_HOST,\n    &#39;ssl key&#39;: process.env.SSL_KEY,\n    &#39;ssl cert&#39;: process.env.SSL_CERT,\n    &#39;cookie secret&#39;: process.env.COOKIE_SECRET,\n    &#39;cookie signin&#39;: this.get(&#39;env&#39;) === &#39;development&#39;) ? true : false,\n    &#39;embedly api key&#39;: process.env.EMBEDLY_API_KEY || process.env.EMBEDLY_APIKEY,\n    &#39;mandrill api key&#39;: process.env.MANDRILL_API_KEY || process.env.MANDRILL_APIKEY,\n    &#39;mandrill username&#39;: process.env.MANDRILL_USERNAME,\n    &#39;google api key&#39;:  process.env.GOOGLE_BROWSER_KEY,\n    &#39;google server api key&#39;:  process.env.GOOGLE_SERVER_KEY,\n    &#39;ga property&#39;:  process.env.GA_PROPERTY,\n    &#39;ga domain&#39;: process.env.GA_DOMAIN,\n    &#39;chartbeat property&#39;: process.env.CHARTBEAT_PROPERTY,\n    &#39;chartbeat domain&#39;: process.env.CHARTBEAT_DOMAIN,\n    &#39;allowed ip ranges&#39;: process.env.ALLOWED_IP_RANGES,\n    // process.env.CLOUDINARY_URL is processed by the cloudinary package when this is set\n    &#39;cloudinary config&#39;: process.env.CLOUDINARY_URL ? true : false,\n    // s3 conditional on process.env.S3_<em> vars\n    &#39;s3 config&#39;: { bucket: process.env.S3_BUCKET, key: process.env.S3_KEY, secret: process.env.S3_SECRET, region: process.env.S3<em>REGION }, \n    // azure conditional on process.env.AZURE</em></em> vars\n    &#39;azurefile config&#39;: { account: process.env.AZURE_STORAGE_ACCOUNT, key: process.env.AZURE_STORAGE_ACCESS_KEY },</p>\n<p>};</p>\n<p></code></pre> </p>\n<p><div class="code-header addGitHubLink" data-file="index.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"adminApp",html:'<h4 id="-adminapp">.adminApp</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong> </p>\n</blockquote>\n<p>Expose Admin UI App. </p>\n<p><div class="code-header addGitHubLink" data-file="index.js#L123-L126"> &nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"applyUpdates",html:'<h4 id="-applyupdates-callback-">.applyUpdates( callback )</h4>\n<blockquote>\n<p><em>@param</em> <strong>callback</strong> <em>{Function}</em>  - callback function  </p>\n</blockquote>\n<p>Applies Application updates</p>\n<p><div class="code-header addGitHubLink" data-file="index.js#L202-L219"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"bindEmailTestRoutes",html:'<h4 id="-bindemailtestroutes-app-emails-">.bindEmailTestRoutes( app, emails )</h4>\n<blockquote>\n<p><em>@param</em> <strong>app</strong> <em>{Object}</em><br><em>@param</em> <strong>emails</strong> <em>{Object}</em><br><em>@api</em> <strong>private</strong> </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/core/bindEmailTestRoutes.js">  <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"connect",html:'<h4 id="-connect-_app_-_mongoose_-">.connect( [<em>app</em>, <em>mongoose</em>] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>app</strong> <em>{Express()}</em> - <em>Optional</em> Custom Express instance<br><em>@param</em> <strong>mongoose</strong> <em>{Object}</em> - <em>Optional</em> Custom Mongoose instance<br><em>@return</em> <strong>this</strong> </p>\n</blockquote>\n<p class="warning-note">This function is deprecated and will be removed in a later version. <br /><br />\n    <strong>Express</strong> and <strong> Mongoose</strong> instances are now set during <code>keystone.init</code> and you can pass custom Express/Mongoose instances.<br /><br /> Express 3 has been upgraded to Express 4. Please review the <a href="http://expressjs.com/guide/migrating-4.html" target="_blank" >Moving to Express 4 Guide</a> for more information.\n</p>\n\n\n<p><div class="code-header addGitHubLink" data-file="lib/core/connect.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"createItems",html:'<h4 id="-createitems-data-_options_-callback-">.createItems( data[, <em>options</em>], callback )</h4>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> <em>{Object}</em>  - Create item data<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - <em>Optional</em> Object of options<br><em>@param</em> <strong>callback</strong> <em>{Function}</em>  - Callback function on done or error<br><em>@return</em> <strong>callback</strong> </p>\n</blockquote>\n<p>Keystone&#39;s <code>createItems</code> function is a simple but powerful way to populate your database with data.</p>\n<p>It can be used to create <a href="http://en.wikipedia.org/wiki/Test_fixture">test fixtures</a> or initialise your database with default content / users / etc.</p>\n<p>There&#39;s also a shorthand syntax that can be used within update files; if you are using the <code>auto updates</code> feature, any file that exports a <code>create</code> object will automatically be wrapped and the data will be created.</p>\n<p><code>createItems</code> takes two passes at the data it is provided, first creating the items and retaining references by key (if provided) that can be used to populate relationships in the second pass. This makes it easy to create related data without asynchronous nesting (which for data creation sometimes ends up in knots).</p>\n<p>The <code>data</code> argument should be an <code>Object</code> containing an <code>Array</code> for each <code>List</code> you want to populate. Each object in the array contains the data for a single item.</p>\n<p>Each data property should match to a field path (or sub-field path) - all paths recognised by the <code>UpdateHandler</code> are usable.</p>\n<p>A special property, <code>__ref</code>, can be set with a string value that is used to reference the item in relationships.</p>\n<p>Relationship fields should contain either a string matching another item&#39;s <code>__ref</code> property, or (for <code>many: true</code> relationship fields) can contain an array of strings.</p>\n<p>The <code>options</code> parameter can be used to override the default options.  </p>\n<pre><code class="lang-javascript">var options = {\n    verbose: false,\n    strict: true\n};\n</code></pre>\n<p>The <code>callback(err, stats)</code> function is passed the error (if there was one) and a stats object containing counts for each list of items that were created, and a special <code>message</code> property that can be parsed as Markdown or logged to the console.</p>\n<pre><code class="lang-javascript">// This example demonstrates complete usage of keystone.createItems,\n// and how to use its callback to log the message to the console.\n\nfunction(done) {\n\n    keystone.createItems({\n\n        User: [{\n            &#39;name.full&#39;: &#39;Jed Watson&#39;,\n            email: &#39;jed@keystonejs.com&#39;,\n            password: &#39;admin&#39;,\n            isAdmin: true,\n            __ref: &#39;jed&#39;\n        }],\n\n        PostCategory: [{\n            name: &#39;Keystone JS&#39;,\n            __ref: &#39;keystone&#39;\n        }, {\n            name: &#39;Node.js&#39;,\n            __ref: &#39;node&#39;\n        }],\n\n        Post: [{\n            title: &#39;A draft post&#39;,\n            author: &#39;jed&#39;,\n            &#39;content.brief&#39;: &#39;This is an example draft post.&#39;,\n            categories: [&#39;keystone&#39;, &#39;node&#39;]\n        }, {\n            title: &#39;A published post&#39;,\n            state: &#39;published&#39;,\n            author: &#39;jed&#39;,\n            publishedDate: &#39;2014-04-12&#39;,\n            &#39;content.brief&#39;: &#39;This post has been published!&#39;,\n            categories: &#39;node&#39;\n        }]\n\n    }, function(err, stats) {\n        stats &amp;&amp; console.log(stats.message);\n        done(err);\n    });\n\n}\n</code></pre>\n<pre><code class="lang-javascript">// This example demonstrates the shorthand syntax you can use to\n// create items in a Keystone update script.\n\nvar keystone = require(&#39;keystone&#39;);\n\nexports.create = {\n\n    User: [{\n        &#39;name.full&#39;: &#39;Jed Watson&#39;,\n        email: &#39;jed@keystonejs.com&#39;,\n        password: &#39;admin&#39;,\n        isAdmin: true,\n        __ref: &#39;jed&#39;\n    }],\n\n    PostCategory: [{\n        name: &#39;Keystone JS&#39;,\n        __ref: &#39;keystone&#39;\n    }, {\n        name: &#39;Node.js&#39;,\n        __ref: &#39;node&#39;\n    }],\n\n    Post: [{\n        title: &#39;A draft post&#39;,\n        author: &#39;jed&#39;,\n        &#39;content.brief&#39;: &#39;This is an example draft post.&#39;,\n        categories: [&#39;keystone&#39;, &#39;node&#39;]\n    }, {\n        title: &#39;A published post&#39;,\n        state: &#39;published&#39;,\n        author: &#39;jed&#39;,\n        publishedDate: &#39;2014-04-12&#39;,\n        &#39;content.brief&#39;: &#39;This post has been published!&#39;,\n        categories: &#39;node&#39;\n    }]\n\n};\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/createItems.js"> <a href="#" class="loadCode">code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"expandPath",html:'<h4 id="-expandpath-path-">.expandPath( path )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em>  - path<br><em>@return</em> <strong>expandedPath</strong> </p>\n</blockquote>\n<p>Expands a path to include moduleRoot if it is relative</p>\n<pre><code class="lang-javascript">var path = keystone.expandPath(keystone.get(&#39;views&#39;));\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/options.js#L190-L204"> &nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"get",html:'<h4 id="-get-key-">.get( key )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em>  - Key of the option you want to retrieve<br><em>@return</em> <strong>value</strong> </p>\n</blockquote>\n<p>Get a Keystone option/value pair.</p>\n<pre><code class="lang-javascript">var brand = keystone.get(&#39;brand&#39;);\n// &gt;&gt; KeystoneJS\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/options.js#L177-L188"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"getOrphanedLists",html:'<h4 id="-getorphanedlists-">.getOrphanedLists( )</h4>\n<blockquote>\n<p><em>@return</em> <strong>nav</strong> </p>\n</blockquote>\n<p>Retrieves orphaned lists (those not in a nav section)</p>\n<pre><code class="lang-javascript">var orphanLists = keystone.getOrphanedLists();\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/getOrphanedLists.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"getPath",html:'<h4 id="-getpath-key-defaultvalue-">.getPath( key, defaultValue )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em>  - Key of the option you want to retrieve<br><em>@param</em> <strong>defaultValue</strong> <em>{String}</em>  - Default value if <code>key</code> is not a valid option<br><em>@return</em> <strong>path</strong> </p>\n</blockquote>\n<p>Gets an expanded path option, expanded to include moduleRoot if it is relative.  </p>\n<pre><code class="lang-javascript">var path = keystone.getPath(&#39;views&#39;, &#39;templates/views&#39;);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/options.js#L206-L218"> &nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"import",html:'<h4 id="-import-dirname-">.import( dirname )</h4>\n<blockquote>\n<p><em>@param</em> <strong>dirname</strong> <em>{String}</em>  - path<br><em>@return</em> <strong>imported</strong> </p>\n</blockquote>\n<p>returns all .js modules (recursively) in the path specified, relative to the module root (where the keystone project is being consumed from).</p>\n<pre><code class="lang-javascript">var models = keystone.import(&#39;models&#39;);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="index.js#L156-L199"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"importer",html:'<h4 id="-importer-rel__dirname-">.importer( rel__dirname )</h4>\n<blockquote>\n<p><em>@param</em> <strong>rel__dirname</strong> <em>{String}</em>  - path<br><em>@return</em> <strong>imported</strong> </p>\n</blockquote>\n<p>Import all .js Modules in given path</p>\n<pre><code class="lang-javascript">var importRoutes = keystone.importer(__dirname);\n\nvar routes = {\n    site: importRoutes(&#39;./site&#39;),\n    api: importRoutes(&#39;./api&#39;)\n};\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/importer.js"> <a href="#" class="loadCode">code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"init",html:'<h4 id="-init-options-">.init( options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>options</strong> <em>{Object}</em> - set the intital value of Keystone options<br><em>@return</em> <strong>this</strong> </p>\n</blockquote>\n<p>Initialize the Keystone options object.  See <a href="http://keystonejs.com/docs/configuration/">Configuration Docs</a>.</p>\n<p>If  Mongoose and/or Express references are not provided, they will be added during <code>.init</code>.  </p>\n<pre><code class="lang-javascript">keystone.init({\n    &#39;name&#39;: &#39;Keystone&#39;,\n    &#39;brand&#39;: &#39;KeystoneJS&#39;,\n    &#39;less&#39;: &#39;public&#39;,\n    &#39;static&#39;: &#39;public&#39;,\n    &#39;favicon&#39;: &#39;public/favicon.ico&#39;,\n    &#39;views&#39;: &#39;templates/views&#39;,\n    &#39;view engine&#39;: &#39;jade&#39;,\n    &#39;emails&#39;: &#39;templates/emails&#39;,\n    &#39;auto update&#39;: true,\n    &#39;session&#39;: true,\n    &#39;auth&#39;: true,\n    &#39;user model&#39;: &#39;User&#39;,\n    &#39;cookie secret&#39;: &#39;=Hw1WfV6XlGW(w~K8=&amp;5r%U2]EZ&#39;,\n\n    &#39;app&#39;: app, // custom express instance\n    &#39;mongoose&#39;: mongoose, // custom mongoose instance\n});\n</code></pre>\n<p class="api-note">The minimum required to start a Keystone instance is the <code>cookie secret</code> option.</p>\n\n\n<p><div class="code-header addGitHubLink" data-file="lib/core/init.js"> <a href="#" class="loadCode">code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"initNav",html:'<h4 id="-initnav-nav-">.initNav( nav )</h4>\n<blockquote>\n<p><em>@param</em> <strong>nav</strong> <em>{Object}</em><br><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p>Initialises Keystone&#39;s internal nav config.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/core/initNav.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"list",html:'<h4 id="-list-arg-">.list( arg )</h4>\n<blockquote>\n<p><em>@param</em> <strong>arg</strong> <em>{...String|Function}</em>  - current list key or new constructed List<br><em>@return</em> <strong>list</strong> </p>\n</blockquote>\n<p>Registers or retrieves a list.  Used by <code>List.register()</code> to register a newly constructed List with Keystone.   </p>\n<pre><code class="lang-javascript">var User = keystone.list(&#39;User&#39;);\n\nUser.model.find().exec(function(docs,err) {\n\n});\n</code></pre>\n<p><p class="api-note">To retrieve a list that may return <code>undefined</code> you should use <code>keystone.lists[key]</code>.  Using <code>.list()</code> will throw a <code>ReferenceError</code> if the arg is not a valid <code>List</code> or the <code>key</code> for a valid <code>List</code> </p> `  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/core/list.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"mount",html:'<h4 id="-mount-_mountpath_-_parentapp_-_events_-">.mount( [<em>mountPath</em>, <em>parentApp</em>, <em>events</em>] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>mountPath</strong> <em>{String}</em>  - <em>Optional</em> Folder to mount Keystone as a sub-app<br><em>@param</em> <strong>parentApp</strong> <em>{Express()}</em>  - <em>Optional</em> Express app<br><em>@param</em> <strong>events</strong> <em>{...Function|Object}</em>  - <em>Optional</em> Object with onMount event or Function to run once mounted<br><em>@return</em> <strong>events.onMount()</strong> </p>\n</blockquote>\n<p>You can use <code>.mount()</code> for custom Express setups.<br><strong>mountPath</strong> is an optional path to mount Keystone under.<br><strong>parentApp</strong> will be your Express app.<br>The <strong>events</strong> parameter can be used to perform commands once Keystone has been mounted.<br>If <strong>events</strong> is a function it will get mapped to <code>{onMount: events}</code>.  </p>\n<pre><code class="lang-javascript">/* Mount Keystone as a sub-app */\n\nvar app = express(),\n    keystone = require(&#39;keystone&#39;),\n    server,\n    theEvents = require(&quot;events&quot;).EventEmitter;\n\n/**\n    Keystone supports the following options specifically for running in encapsulated mode (with no embedded server):  \n\n       - name\n       - port\n       - views\n       - view engine\n       - compress\n       - favico\n       - less\n       - static\n       - headless\n       - logger\n       - cookie secret\n       - session\n       - 404\n       - 500\n       - routes\n       - locals\n       - auto update\n       - app\n       - mongoose\n*/\n\nkeystone.init({ \n    app: app,\n});\n\ntheEvents.on(&#39;keystone ready&#39;,function() {\n    var server = app.listen(3000);\n    console.log(&#39;server started&#39;);\n});\n\nkeystone.mount(&#39;/content&#39;, app, {\n    onMount: function() {\n        //put your app&#39;s static content and error handling middleware here and start your server\n       theEvents.emit(&#39;keystone ready&#39;);\n    }\n});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/mount.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"options",html:'<h4 id="-options-options-">.options( options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>options</strong> <em>{Object}</em>  - An <strong>Object</strong> of key/value pairs to add to options.<br><em>@return</em> <strong>keystone._options</strong> </p>\n</blockquote>\n<p>Set multiple Keystone option/value pair.</p>\n<pre><code class="lang-javascript">keystone.options({test: value});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/options.js#L148-L174"> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"populateRelated",html:'<h4 id="-populaterelated-docs-relationships-callback-">.populateRelated( docs, relationships, callback )</h4>\n<blockquote>\n<p><em>@param</em> <strong>docs</strong> <em>{Array}</em>  - Array of documents<br><em>@param</em> <strong>relationships</strong> <em>{Array}</em>  - Array of ref paths to populate<br><em>@param</em> <strong>callback</strong> <em>{Function}</em>  - Callback function on done or error<br><em>@return</em> <strong>callback</strong> </p>\n</blockquote>\n<p>Populate the related fields for an Array of docs.  </p>\n<p class="caution-note">This is currently highly inefficient and should only be used in development, or for small data sets. There are lots of things that can be done to improve performance... later.</p>\n\n<pre><code class="lang-javascript">keystone.populateRelated(docs,[&#39;owner&#39;,&#39;memberOf&#39;],function() {\n    // docs are populated\n});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/populateRelated.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"prefixModel",html:'<h4 id="-prefixmodel-key-">.prefixModel( key )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em>  - collection name<br><em>@return</em> <strong>this</strong> </p>\n</blockquote>\n<p>Create proper model collection name with or without prefix. </p>\n<p><div class="code-header addGitHubLink" data-file="index.js#L96-L104">  &nbsp;  </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"redirect",html:'<h4 id="-redirect-params-">.redirect( ...params )</h4>\n<blockquote>\n<p><em>@param</em> <strong>params</strong> <em>{...String|Object}</em>  - String or Object of redirects<br><em>@return</em> <strong>callback events</strong> </p>\n</blockquote>\n<p>Adds one or more redirections (urls that are redirected when no matching routes are found, before treating the request as a 404)</p>\n<pre><code class="lang-javascript">keystone.redirect(&#39;/old-route&#39;, &#39;new-route&#39;);\n\nkeystone.redirect({\n    &#39;old-route&#39;: &#39;new-route&#39;\n});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/redirect.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"render",html:'<h4 id="-render-req-res-view-ext-">.render( req, res, view, ext )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  -  Express req object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  -  Express res object<br><em>@param</em> <strong>view</strong> <em>{String}</em>  -  View to render<br><em>@param</em> <strong>ext</strong> <em>{Object}</em>  -  extend the locals object<br><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p>Internal method to render a view</p>\n<p><div class="code-header addGitHubLink" data-file="lib/core/render.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"routes",html:'<h4 id="-routes-app-">.routes( app )</h4>\n<blockquote>\n<p><em>@param</em> <strong>app</strong> <em>{Express()}</em>  - Express app instance<br><em>@return</em> <strong>this</strong> </p>\n</blockquote>\n<p>Adds bindings for the keystone routes</p>\n<pre><code class="lang-javascript">var app = express();\napp.use(...); // middlewareroutes, routes, etc. should come before keystone is mounted / started\nkeystone.routes(app);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/routes.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"set",html:'<h4 id="-set-key-value-">.set( key, value )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em>  - Key of the option you want to set<br><em>@param</em> <strong>value</strong> <em>{...String|Object|Function|Array}</em>  - Can be any valid <strong>Object</strong> value<br><em>@return</em> <strong>this</strong> </p>\n</blockquote>\n<p>Set a Keystone option/value pair.</p>\n<pre><code class="lang-javascript">keystone.set(&#39;mongo&#39;,&#39;mongodb://localhost/keystone&#39;);\n\nkeystone.set(&#39;custom key&#39;,{key1:&#39;key1&#39;});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/options.js#L41-L145"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"start",html:'<h4 id="-start-_events_-">.start( [<em>events</em>] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>events</strong> <em>{...Function|Object}</em>  - Function or Object of events<br><em>@return</em> <strong>callback events</strong> </p>\n</blockquote>\n<p>Start the Keystone server.  You can work with the events in the example.</p>\n<pre><code class="lang-javascript">keystone.start({\n    onMount: function() {\n\n    },\n    onStart: function() {\n\n    },\n    onHttpServerCreated: function() {\n\n    },\n    onHttpsServerCreated: function() {\n\n    },\n    onSocketServerCreated: function() {\n\n    },\n});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/start.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"utils",html:'<h4 id="-utils">.utils</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong> </p>\n</blockquote>\n<p><div class="code-header"> <h4>Expose <code>keystone-utils</code></h4></div><pre class=" language-javascript"><code class="language-javascript">Keystone.utils = require(&#39;keystone-utils&#39;);</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="index.js#L154"> &nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"version",html:'<h4 id="-version">.version</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong> {Number} </p>\n</blockquote>\n<p>Current version</p>\n<p><div class="code-header addGitHubLink" data-file="index.js#L236-L242"> &nbsp;  </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"wrapHTMLError",html:'<h4 id="-wraphtmlerror-title-_err_-">.wrapHTMLError( title, [<em>err</em>] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>title</strong> <em>{String}</em>  - Error title<br><em>@param</em> <strong>err</strong> <em>{String}</em>  - <em>Optional</em> Error message<br><em>@return</em> <strong>html</strong> </p>\n</blockquote>\n<p>Wraps an error in simple HTML to be sent as a response to the browser</p>\n<pre><code class="lang-javascript">var html = keystone.wrapHTMLError(&#39;Credential Error&#39;,&#39;Please &lt;a href=&quot;/keystone/signin&quot;&gt;login&lt;/a&gt; to view this page&#39;);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/wrapHTMLError.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'
}],main:"markdown/class/Classes/Keystone.md",header:"Keystone Class",menuHeader:"keystone"},content:{list:[{keys:"content",header:".content Class",menuHeader:"keystone.content",main:"content",html:'<h4 id="keystone-content-">Keystone.content(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/content/index.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"content",header:".content Class",menuHeader:"keystone.content",name:"editable",html:'<h4 id="-content-editable-user-options-">.content.editable( user, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>user</strong> <em>{Object}</em>  - user object<br><em>@param</em> <strong>options</strong> <em>{Object}</em><br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Outputs client-side editable data for content management.  </p>\n<p>Called automatically when pages are added.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/index.js#L196-L233"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"content",header:".content Class",menuHeader:"keystone.content",name:"fetch",html:'<h4 id="-content-fetch-page-callback-">.content.fetch( page, callback )</h4>\n<blockquote>\n<p><em>@param</em> <strong>page</strong> <em>{String}</em><br><em>@param</em> <strong>callback</strong> <em>{Function}</em><br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Loads page content by page key (optional).</h4>If page key is not provided, returns a hash of all page contents in the database.</div><pre class=" language-javascript"><code class="language-javascript">keystone.content.fetch(&#39;home&#39;, function(err, content) { ... });</code></pre> </p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/index.js#L15-L82"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"content",header:".content Class",menuHeader:"keystone.content",name:"initModel",html:'<h4 id="-content-initmodel-">.content.initModel( )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>      </p>\n</blockquote>\n<p>Ensures the Mongoose model for storing content is initialised.  </p>\n<p>Called automatically when pages are added.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/index.js#L166-L194"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"content",header:".content Class",menuHeader:"keystone.content",name:"page",html:'<h4 id="-content-page-key-page-">.content.page( key, page )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em><br><em>@param</em> <strong>page</strong> <em>{Object}</em><br><em>@api</em> <strong>private</strong>     </p>\n</blockquote>\n<p>Registers a page. Should not be called directly, use <code>.content.Page.register()</code> instead.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/index.js#L131-L164"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"content",header:".content Class",menuHeader:"keystone.content",name:"store",html:'<h4 id="-content-store-page-content-callback-">.content.store( page, content, callback )</h4>\n<blockquote>\n<p><em>@param</em> <strong>page</strong> <em>{String}</em><br><em>@param</em> <strong>content</strong> <em>{Object}</em><br><em>@param</em> <strong>callback</strong> <em>{Function}</em><br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Sets page content by page key.</h4>Merges content with existing content.</div><pre class=" language-javascript"><code class="language-javascript">keystone.content.store(&#39;home&#39;, { title: &#39;Welcome&#39; }, function(err) { ... });</code></pre> </p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/index.js#L84-L129"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Classes/Content.md",header:".content Class",menuHeader:"keystone.content"},contentPage:{list:[{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",main:"contentPage",html:'<h4 id="keystone-content-page-key-options-">Keystone.content.Page( key, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong>  {String}<br><em>@param</em> <strong>options</strong>  {Options}<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"add",html:'<h4 id="-content-page-add-fields-">.content.Page.add( fields )</h4>\n<blockquote>\n<p><em>@param</em> <strong>fields</strong> <em>{Object}</em><br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L73-L124"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"clean",html:'<h4 id="-content-page-clean-data-">.content.Page.clean( data )</h4>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> <em>{Object}</em><br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Cleans a data structure so only the defined fields are present.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L181-L197"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"get",html:'<h4 id="-content-page-get-key-">.content.Page.get( key )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em><br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Gets page options</h4></div><pre class=" language-javascript"><code class="language-javascript"> page.get(&#39;test&#39;) // returns the &#39;test&#39; value\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L59-L69"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"name",html:'<h4 id="-content-page-name">.content.Page.name</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.get(&#39;name&#39;) || this.set(&#39;name&#39;, utils.keyToLabel(this.key));</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L29-L33"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"populate",html:'<h4 id="-content-page-populate-data-">.content.Page.populate( data )</h4>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> <em>{Object}</em><br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Populates a data structure based on defined fields</p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L145-L161"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"register",html:'<h4 id="-content-page-register-">.content.Page.register(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Registers the page with Keystone.</h4></div><pre class=" language-javascript"><code class="language-javascript">var homePage = new keystone.content.Page(&#39;home&#39;);\n// ...\nhomePage.register();</p>\n<pre><code>// later...\nvar homePage = keystone.content.page(&#39;home&#39;);\n</code></pre><p></code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L59-L69"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"set",html:'<h4 id="-content-page-set-key-value-">.content.Page.set( key, value )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em><br><em>@param</em> <strong>value</strong> <em>{Array|Function|Object|String}</em><br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Sets page options.</h4></div><pre class=" language-javascript"><code class="language-javascript">page.set(&#39;test&#39;, value) // sets the &#39;test&#39; option to <code>value</code></code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L35-L56"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"validate",html:'<h4 id="-content-page-validate-data-">.content.Page.validate( data )</h4>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> <em>{Object}</em><br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Validates a data structure based on defined fields.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L163-L179"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Classes/ContentPage.md",header:".content.Page Class",menuHeader:"keystone.content.Page"},contentType:{list:[{keys:"contentType",header:".content.Type Class",menuHeader:"keystone.content.Type",main:"contentType",html:'<h4 id="keystone-content-type-path-options-">Keystone.content.Type( path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>path</strong>  {String}<br><em>@param</em> <strong>options</strong>  {Options}<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p class="warning-note">TODO</p>\n\n<p><div class="code-header addGitHubLink" data-file="lib/content/type.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Classes/ContentType.md",header:".content.Type Class",menuHeader:"keystone.content.Type"},email:{list:[{keys:"email",header:".Email Class",menuHeader:"keystone.email",main:"email",html:'<h4 id="new-keystone-email-options-">new Keystone.Email( options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>options</strong> <em>{...String|Object}</em><br><em>@return</em> <strong>this</strong>     </p>\n</blockquote>\n<p>Once created, emails can be sent with Mandrill, or rendered for viewing.   </p>\n<p class="api-note">Passing a <strong>String</strong> will set <code>templateName</code> and use <a href="#email-defaults"><code>Email.defaults</code></a>.</p>\n<p class="caution-note"> Requires setting Keystone option <code>emails</code>  to render.  <br />Requires setting either <code>options.mandrill</code> or Keystone option <code>mandrill api key</code>  to send.   </p>    \n\n<p><strong> <code>options</code> </strong>:   </p>\n<ul>\n<li><strong>templateName</strong> - The name of the template to render.  Default use should be the name of a jade template file or directory. Required if not using <code>templateMandrillName</code>.   </li>\n<li><strong>templateExt</strong> - The extension name of our template file.  A template must be available at <code>templateName.templateExt</code> or <code>templateName/email.templateExt</code>.  </li>\n<li><strong>templateEngine</strong> - The engine to use to render the email html.  Defaults to <code>require(&#39;jade&#39;)</code>  </li>\n<li><strong>templateBasePath</strong> - Base path to load email template files.   </li>\n<li><strong>templateCompile</strong> - A custom template compiler.    Use in conjunction with <code>templateRender</code>.  <pre><code class="lang-javascript">// example for nunjucks  \noptions.templateCompile: function(engine, contents, opts, path) {\n  return engine.compile(contents, opts, path); //calling compile() on the nunjucks engine, and returning the compiled template\n},\n</code></pre>\n</li>\n<li><strong>templateRender</strong> - A custom renderer function.  Use in conjunction with <code>templateCompile</code>.  <pre><code class="lang-javascript">// example for nunjucks  \noptions.templateRender: function(template, locals) {\n  return template.render(locals); //calling the nunjucks compiled template render()\n},\n</code></pre>\n</li>\n<li><strong>templateMandrillName</strong> - Name of a Mandrill template to use to render emails.    </li>\n<li><strong>templateMandrillContent</strong> - An <strong>Array</strong> of content blocks for a Mandrill template. <pre><code class="lang-javascript">options.templateMandrillContent = [\n  {\n      &quot;name&quot;: &quot;header&quot;,\n      &quot;content&quot;: &quot;&lt;h2&gt;&quot; + keystone.get(&#39;name&#39;) + &quot;&lt;/h2&gt;&quot;\n  }\n]\n</code></pre>\n</li>\n</ul>\n<div class="code-header"> <h4>Create a new Email instance and send an Email</h4></div><pre class=" language-javascript"><code class="language-javascript">\n    var Email = new keystone.Email(&#39;welcome&#39;);\n    Email.send({\n        subject:&#39;Your  account information&#39;,\n        tags:&#39;new user&#39;,\n        to:newUser.realEmail,\n        fromName:&#39;Account Team&#39;,\n        fromEmail:&#39;support@domain.tld&#39;,\n        enquiry: {\n            _: require(&#39;lodash&#39;),\n            name:newUser.name.first+&#39;  &#39;+newUser.name.last,\n            email:newUser.realEmail,\n            html:&#39;&#39;\n        }\n    },function(err,info){\n        //console.log(err,&#39;New user email sent&#39;,info);\n    });\n</code></pre>\n\n<div class="contextual-note">\n<h4> Explanation</h4> \n<p>We pass <code>&#39;welcome&#39;</code> as our template name. <br />Since we set <code>keystone.init({ ..., &#39;emails&#39;: &#39;templates/emails&#39;})</code> the class looked in <code>/templates/emails/welcome.jade</code> and <code>/templates/emails/welcome/email.jade</code> for the template to use to render the email.</p>\n</div>  \n\n\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L125-L170"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"buildOptions",html:'<h4 id="email-buildoptions-err-options-_callback_-">Email.buildOptions( err, options [, <em>callback</em>] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>err</strong> <em>{Object}</em>  - Error<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - Input options<br><em>@param</em> <strong>callback</strong> <em>{Object}</em>  - callback(err, message)<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Build an options object.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L379-L535"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"compileTemplate",html:'<h4 id="email-compiletemplate-_callback_-">Email.compileTemplate(  <em>callback</em>  )</h4>\n<blockquote>\n<p><em>@param</em> <strong>callback</strong> <em>{Object}</em>  - callback(err, email)<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Ensures the template for the email has been compiled</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L309-L342"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"defaults",html:'<h4 id="email-defaults">Email.defaults</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>Email.defaults </h4></div><pre class=" language-javascript"><code class="language-javascript">{\n    templateExt: &#39;jade&#39;,\n    templateEngine: require(&#39;jade&#39;),\n    templateBasePath: path.normalize(path.join(__dirname, &#39;..&#39;, &#39;templates&#39;, &#39;helpers&#39;, &#39;emails&#39;)),\n    mandrill: {\n        track_opens: true,\n        track_clicks: true,\n        preserve_recipients: false,\n        inline_css: true\n    },\n    // Mandrill template\n    templateMandrillName: null,\n    templateForceHtml: false // Force html render\n}\n</code></pre> </p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L12-L25"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"getEmailsPath",html:'<h4 id="email-getemailspath-">Email.getEmailsPath(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Return the value of <code>keystone.get(&#39;emails&#39;);</code>.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L58-L64"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"loadTemplate",html:'<h4 id="email-loadtemplate-_callback_-">Email.loadTemplate(  <em>callback</em>  )</h4>\n<blockquote>\n<p><em>@param</em> <strong>callback</strong> <em>{Object}</em>  - callback(err, email)<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Loads the template. Looks for <code>templateName.templateExt</code>, followed by <code>templateName/email.templateExt</code></p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L273-L307"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"prepare",html:'<h4 id="email-prepare-options-_callback_-">Email.prepare( options [, <em>callback</em> ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>options</strong> <em>{Object}</em>  - locals<br><em>@param</em> <strong>callback</strong> <em>{Object}</em>  - callback(err, message)<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Ensures the template for the email has been compiled</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L344-L377"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"render",html:'<h4 id="email-render-locals-_callback_-">Email.render( locals [, <em>callback</em> ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>locals</strong> <em>{Object}</em>  - object of local variables provided to the template<br><em>@param</em> <strong>callback</strong> <em>{Object}</em>  - callback(err, email)  </p>\n</blockquote>\n<p>Renders the email and passes it to the callback. Used by <code>Email.send()</code> but can also be called directly to generate a preview.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L172-L270"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"renderMandrill",html:'<h4 id="email-rendermandrill-_locals_-options-_callback_-">Email.renderMandrill( [<em>locals</em> ,] options [, <em>callback</em> ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>locals</strong> <em>{Object}</em>  - backwards compatibility<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - locals options object<br><em>@param</em> <strong>callback</strong> <em>{Object}</em>  - callback(err, info)      </p>\n</blockquote>\n<p>Renders a Mandrill template</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L637-L689"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"send",html:'<h4 id="email-send-_locals-_-options-_callback_-">Email.send( [ <em>locals </em> ,] options [, <em>callback</em> ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>locals</strong> <em>{Object}</em>  - backwards compatibility<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - passed to <code>Email.render()</code><br><em>@param</em> <strong>callback</strong> <em>{Object}</em>  - callback(err, info)    </p>\n</blockquote>\n<p class="api-note"> For compatibility with older implementations, send supports providing locals and options objects as the first and second arguments, and the callback as the third.  Typical use case should be <code>.send( options, callback )</code></p>\n\n<p> Options:</p>\n<ul>\n<li><strong>mandrill</strong> - Initialised Mandrill API instance</li>\n<li><strong>templateMandrillName</strong> - the immutable name or slug of a template that exists in the user&#39;s account. For backwards-compatibility, the template name may also be used but the immutable slug is preferred.  Validation: required.  </li>\n<li><strong>templateMandrillContent</strong> - an array of template content to send. Each item in the array should be an object with two keys - name: the name of the content block to set the content for, and content: the actual content to put into the block<pre><code class="lang-javascript"> options.templateMandrillContent = [\n     {\n         &quot;name&quot;: &quot;header&quot;,\n         &quot;content&quot;: &quot;&lt;h2&gt;&quot; + keystone.get(&#39;name&#39;) + &quot;&lt;/h2&gt;&quot;\n     }\n ]\n</code></pre>\n</li>\n<li><strong>tags</strong> - an array of <strong>Strings</strong> to tag the message with. Stats are accumulated using tags, and only the first 100 are stored, so this should not be unique or change frequently. Tags should be 50 characters or less. Any tags starting with an underscore are reserved for internal use and will cause errors.   </li>\n<li><strong>html</strong> - the full HTML content to be sent </li>\n<li><strong>attachments</strong> - an array of supported attachments to add to the message  <pre><code class="lang-javascript"> options.attachments = [\n     {\n         type: MIME_TYPE,\n         name: FILE_NAME,\n         content: BASE64_STRING\n     },\n ]\n</code></pre>\n</li>\n<li><strong>to</strong> - Object / String or Array of Objects / Strings to send to, e.g.  <pre><code class="lang-javascript">[&#39;email2@domain.tld&#39;, { email: &#39;email@domain.tld&#39; }]\n{ email: &#39;email4@domain.tld&#39; }\n&#39;email0@domain.tld&#39;\n</code></pre>\n</li>\n<li><strong>from</strong> - <code>{ name: &#39;Ted&#39;, email: &#39;ted@domain.tld&#39; }</code> or <code>&#39;ted@domain.tld&#39;</code>  </li>\n<li><strong>fromName</strong> - Name to send from  </li>\n<li><strong>fromEmail</strong> - Email address to send from</li>\n<li><strong>mandrillOptions</strong> - any other <a href="https://mandrillapp.com/api/docs/messages.JSON.html#method=send-template" target="_blank"> Mandrill <strong>message</strong> Option</a> <pre><code class="lang-javascript"> options.mandrillOptions = {\n     // whether or not to turn on open tracking for the message\n     track_opens: true,\n     // whether or not to turn on click tracking for the message\n     track_clicks: true, \n     // whether or not to expose all recipients in the &quot;To&quot; header for each email\n     preserve_recipients: false, \n     // whether or not to automatically inline all CSS styles provided \n     // in the message HTML - only for HTML documents less than 256KB in size\n     inline_css: true \n },\n</code></pre>\n</li>\n</ul>\n<p class="caution-note"> You must include an  email address with either <code>from</code> or <code>fromEmail</code> </p>\n\n<div class="code-header"> <h4>Send an email</h4></div><pre class=" language-javascript"><code class="language-javascript">\n     var Email = new keystone.Email({ \n                templateMandrillName: &#39;welcome&#39;,\n                templateMandrillContent: [\n                    {\n                        &quot;name&quot;: &quot;header&quot;,\n                        &quot;content&quot;: &quot;<h2>&quot; + keystone.get(&#39;name&#39;) + &quot;</h2>&quot;\n                    }\n                ]\n            });\n\n            Email.send({\n                to: req.body.email,\n                from: {\n                    name: &#39;from name&#39;,\n                    email: &#39;from@domain.tld&#39;\n                },\n                subject: &#39;subject&#39;\n                templateMandrillContent: [\n                    {\n                        &quot;name&quot;: &quot;main&quot;,\n                        &quot;content&quot;: &quot;custom html for main block&quot;\n                    }\n                ],\n                mandrillOptions: {\n                    track_opens: false,\n                    track_clicks: false\n                },\n            }, \n            function(err, info) {\n                //console.log(err, info);\n            });\n</code></pre>\n<div class="contextual-note">\n<h4> Explanation</h4> \n<p>We defined a template at Mandrill and set <code>templateMandrillName: &#39;welcome&#39;</code>. This will bypass <code>Email.render()</code> and send template information.  <br /> We add <code>templateMandrillContent</code> template blocks in both the <strong>Email</strong> constructor and in <code>.send</code>.  </p>\n</div> \n\n\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L537-L630"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"templateCSSMethods",html:'<h4 id="email-templatecssmethods-shadecolor-color-percent-">Email.templateCSSMethods.shadeColor( color, percent )</h4>\n<blockquote>\n<p><em>@param</em> <strong>color</strong> {String}<br><em>@param</em> <strong>percent</strong> {Number}<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>return a shaded color.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L114-L121"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"templateCache",html:'<h4 id="email-templatecache">Email.templateCache</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>A cache of compiled templates organi(sz)ed by name.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L692"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Classes/Email.md",header:".Email Class",menuHeader:"keystone.email"},field:{list:[{keys:"field",header:".Field super",menuHeader:"keystone.field",main:"field",html:'<h4 id="keystone-field-list-path-options-">Keystone.Field( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p><p class="contextual-note"> Extended by <code>Field.Types</code> Classes, methods should not be used directly. </p></p>\n<p><div class="code-header" > <h4>Extend</h4>file named customType.js</div><pre class=" language-javascript "><code  class=" language-javascript ">var keystone = require(&#39;keystone&#39;);\nvar util = require(&#39;util&#39;);\n/*<em>\n    Custom FieldType Constructor\n    @extends Field\n    @api public\n</em>*/\nfunction custom(list, path, options) {\n    // add your options to this</p>\n<pre><code>    // call super\\_  \n    custom.super\\_.call(this, list, path, options);  \n</code></pre><p>}\n/*<em> inherit Field </em>*/\nutil.inherits(custom, keystone.Field);    </p>\n<p>/*<em> override or add methods </em>*/\ncustom.prototype.addToSchema = function() {\n    // override schema instructions</p>\n<p>}</p>\n<p>/*<em> Export Field Type </em>*/\nexports = module.exports = custom;\n</code></pre> </p>\n<p><div class="code-header" > <h4>main file</div><pre class=" language-javascript "><code  class=" language-javascript ">var keystone = require(&#39;keystone&#39;);\nObject.defineProperty(keystone.Field.Types, &#39;myField&#39;, { get: function() {\n    return require(./customType.js&#39;);\n} });</p>\n<p></code></pre> </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"addToSchema",html:'<h4 id="field-addtoschema-">Field.addToSchema(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Default method to register the field on the List&#39;s Mongoose Schema.  </p>\n<p class="caution-note">Overridden by some fieldType Classes.</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L218-L228"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"bindUnderscoreMethods",html:'<h4 id="field-bindunderscoremethods-methods-">Field.bindUnderscoreMethods( methods )</h4>\n<blockquote>\n<p><em>@param</em> <strong>methods</strong> {Array}<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Automatically bind underscore methods specified by the _underscoreMethods property.</p>\n<p class="note">Will always include the &#39;update&#39; method</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L230-L246"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"col",html:'<h4 id="field-col-">Field.col(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.col\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L209"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"collapse",html:'<h4 id="field-collapse-">Field.collapse(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.collapse\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L214"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"dependsOn",html:'<h4 id="field-dependson-">Field.dependsOn(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.dependsOn\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L216"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"format",html:'<h4 id="field-format-item-">Field.format( item )</h4>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Default method to format the field value for display.  </p>\n<p class="caution-note">Overridden by some fieldType Classes.</p>\n\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L127-L154"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'
},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"getData",html:'<h4 id="field-getdata-data-">Field.getData( data )</h4>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Gets the field&#39;s data from an Item, as used by the React components</p>\n<p><div class="code-header"> <h4>Return</h4></div><pre class=" language-javascript"><code class="language-javascript">return item.get(this.path);\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L131-L136"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"getDefaultValue",html:'<h4 id="field-getdefaultvalue-">Field.getDefaultValue(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Gets default value for the field, based on the option or default for the type</p>\n<p><div class="code-header"> <h4>Return</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.default\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L124-L129"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"getOptions",html:'<h4 id="field-getoptions-">Field.getOptions(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Gets the options for the Field, as used by the React components.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L83-L107"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"getPreSaveWatcher",html:'<h4 id="field-getpresavewatcher-">Field.getPreSaveWatcher(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p>Field watching implementation</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L138-L201"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"getSize",html:'<h4 id="field-getsize-">Field.getSize( )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Validates and returns the size of the field.<br>Defaults to deprecated &#39;width&#39; option.</p>\n<p><div class="code-header"> <h4>Return</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.__size\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L109-L122"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"getValueFromData",html:'<h4 id="field-getvaluefromdata-">Field.getValueFromData(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>    </p>\n</blockquote>\n<p>Retrieves the value from an object, whether the path is nested or flattened.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L311-L318"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"hidden",html:'<h4 id="field-hidden-">Field.hidden(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.hidden\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L215"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"initial",html:'<h4 id="field-initial-">Field.initial(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.initial\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L206"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"isModified",html:'<h4 id="field-ismodified-item-">Field.isModified( item )</h4>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Default method to detect whether the field has been modified in an item.  </p>\n<p class="caution-note">Overridden by some fieldType Classes.</p>\n\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L270-L278"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"nocol",html:'<h4 id="field-nocol-">Field.nocol(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.nocol\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L211"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"noedit",html:'<h4 id="field-noedit-">Field.noedit(   )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.noedit\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L210"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"nofilter",html:'<h4 id="field-nofilter-">Field.nofilter(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.nofilter\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L213"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"nosort",html:'<h4 id="field-nosort-">Field.nosort(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.nosort\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L212"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"note",html:'<h4 id="field-note-">Field.note(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">\nreturn this.options.note\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L208"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"required",html:'<h4 id="field-required-">Field.required(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.required\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L207"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"size",html:'<h4 id="field-size-">Field.size(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.getSize()\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L205"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"underscoreMethod",html:'<h4 id="field-underscoremethod-path-fn-">Field.underscoreMethod( path, fn )</h4>\n<blockquote>\n<p><em>@param</em> <strong>path</strong> {String} \n<em>@param</em> <strong>item</strong> {Function} \n<em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p>Adds a method to the underscoreMethods collection on the field&#39;s list, with a path prefix to match this field&#39;s path and bound to the document.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L248-L258"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"updateItem",html:'<h4 id="field-updateitem-item-data-">Field.updateItem( item, data )</h4>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@param</em> <strong>data</strong> {Object}<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object</p>\n<p class="caution-note">Overridden by some fieldType Classes.</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L297-L309"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"validateInput",html:'<h4 id="field-validateinput-data-required-item-">Field.validateInput( data [, required, item ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object</p>\n<p class="caution-note">Overridden by some fieldType Classes.</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L280-L295"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Classes/Field.md",header:".Field super",menuHeader:"keystone.field"},fieldTypes:{list:[{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",main:"fieldTypes",html:'<h4 id="-field-types">.Field.Types</h4>\n<p>Returns an object of Keystone Field Types to work with.<br>Each Field Type inherits all the <code>Field</code> methods above.  </p>\n<p><p class="note">Any new or override methods for each Type are <span class="subMethod"> styled like so </span>. \n</p>\nField Type Classes are located at:<br><strong>/fields/types/<i>fieldtype</i>/<i>Fieldtype</i>Type.js</strong>  </p>\n<p>Each Field Type has React class constructors on top of their unique methods.</p>\n<h5 id="field-html">Field HTML</h5>\n<p><strong>/fields/types/<i>fieldtype</i>/<i>Fieldtype</i>Field.js</strong>  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"AzureFile",html:'<h4 id="-field-types-azurefile-list-path-options-">.Field.Types.AzureFile( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._underscoreMethods = [&#39;format&#39;, &#39;uploadFile&#39;];  </p>\n<p>this._fixedSize = &#39;full&#39;;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/azurefile/AzureFileType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre>  </p>\n<p><span class="subMethod"> .Field.Types.AzureFile.azurefileconfig   </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Exposes the custom or keystone azure config settings.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/azurefile/AzureFileType.js#L67-L75">&nbsp; </div><pre class=" language-javascript hideCode api"></pre>  </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/azurefile/AzureFileType.js#L78-L173"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<pre><code class="lang-javascript">return item.get(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/azurefile/AzureFileType.js#L176-L184"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">return item.isModified(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/azurefile/AzureFileType.js#L187-L195">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object </p>\n<p class="warning-note"> TODO - will only return true</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/azurefile/AzureFileType.js#L198-L207"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object</p>\n<p class="warning-note"> TODO - will not return</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/azurefile/AzureFileType.js#L210-L218"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.uploadFile( item, file, update [, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>file</strong> {Object} - valid file object<br><em>@param</em> <strong>update</strong> {Boolean} - update or not<br><em>@param</em> <strong>callback</strong> {Function} - callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Uploads the file for this field.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/azurefile/AzureFileType.js#L221-L277"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.getRequestHandler( item, req [, paths, callback] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.action</code> in <code>req.body</code> (<code>clear</code> or <code>delete</code>)<br><code>field.paths.upload</code> in <code>req.files</code> (uploads the file to Azure)  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/azurefile/AzureFileType.js#L280-L320">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.handleRequest( item, req [, paths, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.AzureFile.getRequestHandler()</code>).  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/azurefile/AzureFileType.js#L323-L331"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Boolean",html:'<h4 id="-field-types-boolean-list-path-options-">.Field.Types.Boolean( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = Boolean;\nthis._properties = [&#39;indent&#39;];\nthis._fixedSize = &#39;full&#39;;\nthis.indent = (options.indent) ? true : false;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/boolean/BooleanType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre>  </p>\n<p><span class="subMethod"> .Field.Types.Boolean.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.    </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/boolean/BooleanType.js#L18-L29">&nbsp; </div><pre class=" language-javascript hideCode api"></pre>  </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Boolean.validateInput( data [, required ] ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid filter object<br><em>@param</em> <strong>required</strong> {Boolean} - (optional)<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Validates that a truthy value for this field has been provided in a data object.<br>Useful for checkboxes that are required to be true (e.g. agreed to terms and cond&#39;s).  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/boolean/BooleanType.js#L31-L41"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Boolean.updateItem( item, data ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@param</em> <strong>data</strong> {Object} - valid data value object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.<br>Only updates the value if it has changed.<br>Treats a falsy value or the string &quot;false&quot; as <code>false</code>, everything else as true.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/boolean/BooleanType.js#L176-L184"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"CloudinaryImage",html:'<h4 id="-field-types-cloudinaryimage-list-path-options-">.Field.Types.CloudinaryImage( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._underscoreMethods = [&#39;format&#39;];\nthis._fixedSize = &#39;full&#39;;\nthis._properties = [&#39;select&#39;, &#39;selectPrefix&#39;, &#39;autoCleanup&#39;, &#39;publicID&#39;, &#39;folder&#39;, &#39;filenameAsPublicID&#39;];\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimage/CloudinaryImageType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.CloudinaryImage.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimage/CloudinaryImageType.js#L56-L270"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImage.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<pre><code class="lang-javascript">return item.get(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimage/CloudinaryImageType.js#L273-L281"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImage.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">return item.isModified(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimage/CloudinaryImageType.js#L284-L292">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImage.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object </p>\n<p class="warning-note"> TODO - will only return true</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimage/CloudinaryImageType.js#L295-L304"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImage.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object </p>\n<p class="warning-note"> TODO - will not return</p>\n\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimage/CloudinaryImageType.js#L307-L329"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImage.getRequestHandler( item, req [, paths, callback] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.action</code> in <code>req.body</code> (<code>clear</code> or <code>delete</code>)<br><code>field.paths.upload</code> in <code>req.files</code> (uploads the image to cloudinary)  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimage/CloudinaryImageType.js#L332-L446">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImage.handleRequest( item, req [, paths, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.CloudinaryImage.getRequestHandler()</code>).  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimage/CloudinaryImageType.js#L449-L457"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"CloudinaryImages",html:'<h4 id="-field-types-cloudinaryimages-list-path-options-">.Field.Types.CloudinaryImages( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._underscoreMethods = [&#39;format&#39;];\nthis._fixedSize = &#39;full&#39;;\nthis._properties = [&#39;select&#39;, &#39;selectPrefix&#39;, &#39;autoCleanup&#39;, &#39;publicID&#39;, &#39;folder&#39;, &#39;filenameAsPublicID&#39;];\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimages/CloudinaryImagesType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.CloudinaryImages.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimages/CloudinaryImagesType.js#L51-L195"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImages.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<pre><code class="lang-javascript">return item.get(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimages/CloudinaryImagesType.js#L198-L208"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImages.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">return item.isModified(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimages/CloudinaryImagesType.js#L211-L220">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImages.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object </p>\n<p class="warning-note"> TODO - will only return true</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimages/CloudinaryImagesType.js#L223-L232"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImages.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object</p>\n<p class="warning-note"> TODO - will not return</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimages/CloudinaryImagesType.js#L235-L243"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImages.getRequestHandler( item, req [, paths, callback] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.action</code> in <code>req.body</code> (<code>clear</code> or <code>delete</code>)<br><code>field.paths.upload</code> in <code>req.files</code> (uploads the image to cloudinary)  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimages/CloudinaryImagesType.js#L246-L350">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImages.handleRequest( item, req [, paths, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.CloudinaryImage.getRequestHandler()</code>).  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimages/CloudinaryImagesType.js#L363-L371"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'
},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Code",html:'<h4 id="-field-types-code-list-path-options-">.Field.Types.Code( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._defaultSize = &#39;full&#39;;\nthis.height = options.height || 180;\nthis.lang = options.lang || options.language;\nthis.<em>properties = [&#39;editor&#39;, &#39;height&#39;, &#39;lang&#39;];\nthis.codemirror = options.codemirror || {};\nthis.editor = </em>.defaults(this.codemirror, { mode : this.lang });</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/code/CodeType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Code.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.    </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/code/CodeType.js#L23-L24">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Color",html:'<h4 id="-field-types-color-list-path-options-">.Field.Types.Color( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._underscoreMethods = [];\nthis._fixedSize = &#39;small&#39;;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/color/ColorType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Date",html:'<h4 id="-field-types-date-list-path-options-">.Field.Types.Date( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = Date;\nthis._underscoreMethods = [&#39;format&#39;, &#39;moment&#39;, &#39;parse&#39;];\nthis._fixedSize = &#39;medium&#39;;\nthis._properties = [&#39;formatString&#39;, &#39;yearRange&#39;, &#39;isUTC&#39;];\nthis.parseFormatString = options.parseFormat || &#39;YYYY-MM-DD&#39;;\nthis.formatString = (options.format === false) ? false : (options.format || &#39;Do MMM YYYY&#39;);\nthis.yearRange = options.yearRange;\nthis.isUTC = options.utc || false;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/date/DateType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Date.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/date/DateType.js#L27-L58"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Date.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/date/DateType.js#L60-L69"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Date.moment( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Returns a new <code>moment</code> object with the field value.    </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/date/DateType.js#L71-L78">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Date.parse( item )  </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Parses input using moment, sets the value, and returns the moment object.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/date/DateType.js#L80-L88">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Date.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Checks that a valid date has been provided in a data object.<br>An empty value clears the stored value and is considered valid.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/date/DateType.js#L90-L104"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Date.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/date/DateType.js#L106-L122"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"DateArray",html:'<h4 id="-field-types-datearray-list-path-options-">.Field.Types.DateArray( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = [Date];\nthis._defaultSize = &#39;medium&#39;;\nthis._underscoreMethods = [&#39;format&#39;];\nthis._properties = [&#39;formatString&#39;];\nthis.parseFormatString = options.parseFormat || &#39;YYYY-MM-DD&#39;;\nthis.formatString = (options.format === false) ? false : (options.format || &#39;Do MMM YYYY&#39;);</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datearray/DateArrayType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.DateArray.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datearray/DateArrayType.js#L38-L50"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.DateArray.validateInput( data [, required, item ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Checks that a valid array of dates has been provided in a data object.<br>An empty value clears the stored value and is considered valid.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datearray/DateArrayType.js#L52-L101"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.DateArray.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datearray/DateArrayType.js#L104-L133"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Datetime",html:'<h4 id="-field-types-datetime-list-path-options-">.Field.Types.Datetime( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">var parseFormats = [&#39;YYYY-MM-DD&#39;, &#39;YYYY-MM-DD h:m:s a&#39;, &#39;YYYY-MM-DD h:m a&#39;, &#39;YYYY-MM-DD H:m:s&#39;, &#39;YYYY-MM-DD H:m&#39;];</p>\n<p>...\nthis._nativeType = Date;\nthis._underscoreMethods = [&#39;format&#39;, &#39;moment&#39;, &#39;parse&#39;];\nthis._fixedSize = &#39;full&#39;;\nthis._properties = [&#39;formatString&#39;, &#39;isUTC&#39;];\nthis.typeDescription = &#39;date and time&#39;;\nthis.parseFormatString = options.parseFormat || parseFormats;\nthis.formatString = (options.format === false) ? false : (options.format || &#39;YYYY-MM-DD h:m:s a&#39;);\nthis.isUTC = options.utc || false;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datetime/DatetimeType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Datetime.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datetime/DatetimeType.js#L34"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Datetime.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datetime/DatetimeType.js#L35"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Datetime.moment( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Returns a new <code>moment</code> object with the field value.    </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datetime/DatetimeType.js#L36">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Datetime.parse( item )  </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Parses input using moment, sets the value, and returns the moment object.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datetime/DatetimeType.js#L37">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Datetime.getInputFromData( data ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Get the value from a data object; may be simple or a pair of fields</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datetime/DatetimeType.js#L39-L48"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Datetime.validateInput( data [, required, item ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Checks that a valid date has been provided in a data object<br>An empty value clears the stored value and is considered valid.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datetime/DatetimeType.js#L50-L64"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Datetime.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datetime/DatetimeType.js#L66-L82"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Email",html:'<h4 id="-field-types-email-list-path-options-">.Field.Types.Email( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._underscoreMethods = [&#39;gravatarUrl&#39;];\nthis.typeDescription = &#39;email address&#39;;\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/email/EmailType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Email.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/email/EmailType.js#L21"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Email.gravatarUrl( item, size, defaultImage, rating ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@param</em> <strong>size</strong> {Number} - size of images ranging from 1 to 2048 pixels, square<br><em>@param</em> <strong>defaultImage</strong> {String}<br><em>@param</em> <strong>rating</strong> {String}<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Get the value from a data object; may be simple or a pair of fields</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/email/EmailType.js#L23-L43"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Email.validateInput( data [, required, item ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a valid email has been provided in a data object</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/email/EmailType.js#L45-L55"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Email.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.<br>Ensures that the email address is lowercase.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/email/EmailType.js#L57-L69"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Embedly",html:'<h4 id="-field-types-embedly-list-path-options-">.Field.Types.Embedly( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p class="caution-note">Requires the option <code>from</code> to refer to another path in the schema that provides the url to expand.</p>\n\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">\nthis._underscoreMethods = [&#39;reset&#39;];\nthis._fixedSize = &#39;full&#39;;</p>\n<p>this.fromPath = options.from;\nthis.embedlyOptions = options.options || {};</p>\n<p>// TODO: implement filtering, usage disabled for now\noptions.nofilter = true;</p>\n<p></code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/embedly/EmbedlyType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre>  </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Embedly.addToSchema(  ) </span>      </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.    </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/embedly/EmbedlyType.js#L63-L182"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Embedly.reset( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Resets the value of the field</h4></div><pre class=" language-javascript"><code class="language-javascript">{\n    exists: false,\n    type: null,\n    title: null,\n    url: null,\n    width: null,\n    height: null,\n    version: null,\n    description: null,\n    html: null,\n    authorName: null,\n    authorUrl: null,\n    providerName: null,\n    providerUrl: null,\n    thumbnailUrl: null,\n    thumbnailWidth: null,\n    thumbnailHeight: null\n}</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/embedly/EmbedlyType.js#L185-L210"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Embedly.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<pre><code class="lang-javascript">return item.get(this.paths.html);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/embedly/EmbedlyType.js#L213-L221"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Embedly.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">// Assume that it has changed if the url is different\nreturn item.isModified(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/embedly/EmbedlyType.js#L224-L233">&nbsp; </div><pre class=" language-javascript hideCode api"></pre></p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Embedly.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p class="caution-note">Embedly fields do not incur validation and will always return <code>true</code>. </p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/embedly/EmbedlyType.js#L236-L245"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Embedly.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.    </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/embedly/EmbedlyType.js#L248-L275"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"GeoPoint",html:'<h4 id="-field-types-geopoint-list-path-options-">.Field.Types.GeoPoint( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._fixedSize = &#39;medium&#39;;</p>\n<p>// TODO: implement filtering, usage disabled for now\noptions.nofilter = true;</p>\n<p></code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/geopoint/GeoPointType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.GeoPoint.addToSchema(  ) </span>      </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.<br>Adds a 2dsphere indexed lat/lng pair.      </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/geopoint/GeoPointType.js#L34-L45"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.GeoPoint.getData( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Gets the field&#39;s data from an Item, as used by the React components</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/geopoint/GeoPointType.js#L48-L55"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.GeoPoint.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<pre><code class="lang-javascript">return item.get(this.paths.html);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/geopoint/GeoPointType.js#L58-L69"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.GeoPoint.validateInput( data [, required, item ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/geopoint/GeoPointType.js#L72-L93"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.GeoPoint.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.    </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/geopoint/GeoPointType.js#L96-L130"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Html",html:'<h4 id="-field-types-html-list-path-options-">.Field.Types.Html( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._defaultSize = &#39;full&#39;;\nthis.wysiwyg = options.wysiwyg || false;\nthis.height = options.height || 180;\nthis._properties = [&#39;wysiwyg&#39;, &#39;height&#39;];</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/html/HtmlType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre>  </p>\n<p><span class="subMethod"> .Field.Types.Html.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.    </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/html/HtmlType.js#L21">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Key",html:'<h4 id="-field-types-key-list-path-options-">.Field.Types.Key( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._defaultSize = &#39;medium&#39;;\nthis.separator = options.separator || &#39;-&#39;;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/key/KeyType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre>  </p>\n<p><span class="subMethod"> .Field.Types.Key.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.    </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/key/KeyType.js#L20">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Key.generateKey( str ) </span>     </p>\n<blockquote>\n<p><em>@param</em> <strong>str</strong> {String}<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Generates a valid key from a string</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/key/KeyType.js#L22-L27"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Key.validateInput( data [, required, item ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Checks that a valid key has been provided in a data object</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/key/KeyType.js#L29-L39"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Key.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.<br>Ensures that the email address is lowercase.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/key/KeyType.js#L41-L53"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"LocalFile",html:'<h4 id="-field-types-localfile-list-path-options-">.Field.Types.LocalFile( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._underscoreMethods = [&#39;format&#39;, &#39;uploadFile&#39;];\nthis._fixedSize = &#39;full&#39;;</p>\n<p>// TODO: implement filtering, usage disabled for now\noptions.nofilter = true;\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfile/LocalFileType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.LocalFile.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfile/LocalFileType.js#L65-L167"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.\nDelegates to the options.format function if it exists.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfile/LocalFileType.js#L170-L185"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.hasFormatter(  ) </span> </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has formatter function in <code>options.format</code></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfile/LocalFileType.js#L188-L196">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.href( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Return the public href for the stored file  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfile/LocalFileType.js#L199-L209">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">return item.isModified(this.paths.path);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfile/LocalFileType.js#L212-L220">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p class="warning-note"> TODO (if needed) - will only return true</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfile/LocalFileType.js#L295-L304"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p class="warning-note"> TODO - direct updating of data (not via upload) - will not currently return</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfile/LocalFileType.js#L235-L243"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.uploadFile( item, file, update [, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>file</strong> {Object} - valid file object<br><em>@param</em> <strong>update</strong> {Boolean} - update or not<br><em>@param</em> <strong>callback</strong> {Function} - callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Uploads the file for this field.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfile/LocalFileType.js#L246-L304"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.getRequestHandler( item, req [, paths, callback] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.action</code> in <code>req.body</code> (<code>clear</code> or <code>delete</code>)<br><code>field.paths.upload</code> in <code>req.files</code> (uploads the image to localfile)  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfile/LocalFileType.js#L307-L348">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.handleRequest( item, req [, paths, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.LocalFile.getRequestHandler()</code>).  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfile/LocalFileType.js#L351-L359"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre></p>\n'
},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"LocalFiles",html:'<h4 id="-field-types-localfiles-list-path-options-">.Field.Types.LocalFiles( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._underscoreMethods = [&#39;format&#39;, &#39;uploadFile&#39;];\nthis._fixedSize = &#39;full&#39;;</p>\n<p>// TODO: implement filtering, usage disabled for now\noptions.nofilter = true;\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfiles/LocalFilesType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.LocalFiles.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfiles/LocalFilesType.js#L67-L193"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.\nDelegates to the options.format function if it exists.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfiles/LocalFilesType.js#L196-L214"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.hasFormatter(  ) </span> </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has formatter function in <code>options.format</code></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfiles/LocalFilesType.js#L217-L225">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.href( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Return the public href for a single stored file  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfiles/LocalFilesType.js#L228-L238">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">return item.isModified(this.paths.path);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfiles/LocalFilesType.js#L241-L249">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p class="warning-note"> TODO (if needed) - will only return true</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfiles/LocalFilesType.js#L252-L261"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p class="warning-note"> TODO - direct updating of data (not via upload) - will not currently return</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfiles/LocalFilesType.js#L264-L272"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.uploadFiles( item, file, update [, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>file</strong> {Object} - valid file object<br><em>@param</em> <strong>update</strong> {Boolean} - update or not<br><em>@param</em> <strong>callback</strong> {Function} - callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Uploads the files for this field.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfiles/LocalFilesType.js#L275-L339"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.getRequestHandler( item, req [, paths, callback] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.action</code> in <code>req.body</code> (<code>clear</code> or <code>delete</code>)<br><code>field.paths.upload</code> in <code>req.files</code> (uploads the image to localfiles)  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfiles/LocalFilesType.js#L352-L421">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.handleRequest( item, req [, paths, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.LocalFiles.getRequestHandler()</code>).  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfiles/LocalFilesType.js#L424-L432"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre></p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Location",html:'<h4 id="-field-types-location-list-path-options-">.Field.Types.Location( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._underscoreMethods = [&#39;format&#39;, &#39;googleLookup&#39;, &#39;kmFrom&#39;, &#39;milesFrom&#39;];\nthis._fixedSize = &#39;full&#39;;</p>\n<p>this.enableMapsAPI = (options.geocodeGoogle===true || (options.geocodeGoogle !== false &amp;&amp; keystone.get(&#39;google server api key&#39;))) ? true : false;</p>\n<p>this._properties = [&#39;enableMapsAPI&#39;];\nthis.requiredPaths = [&#39;street1&#39;, &#39;suburb&#39;];</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/location/LocationType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Location.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/location/LocationType.js#L62-L138"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats a list of the values stored by the field. Only paths that have values will be included.<br>Optionally provide a space-separated list of values to include.<br>Delimiter defaults to <code>&#39;, &#39;</code>.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/location/LocationType.js#L141-L166"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/location/LocationType.js#L169-L185">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object.<br><code>options.required</code> specifies an Array or space-delimited list of paths that are required (defaults to street1, suburb).  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/location/LocationType.js#L188-L230"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/location/LocationType.js#L233-L293"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.getRequestHandler( item, req [, paths, callback ] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - valid file object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.improve</code> in <code>req.body</code> - improves data via <code>.googleLookup()</code>.<br><code>field.paths.overwrite</code> in <code>req.body</code> - in conjunction with <code>improve</code>, overwrites existing data.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/location/LocationType.js#L296-L333">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.handleRequest( item, req [, paths, callback ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - valid file object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.Location.getRequestHandler()</code>).  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/location/LocationType.js#L336-L344"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre></p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.googleLookup( item, region [, update ], callback )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object}<br><em>@param</em> <strong>region</strong> {String}<br><em>@param</em> <strong>update</strong> {Boolean|String} -  (optional)<br><em>@param</em> <strong>callback</strong> {Function}<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Autodetect the full address and lat, lng from the stored value.<br>Internal status codes mimic the Google API status codes.</p>\n<p class="caution-note">Uses Google&#39;s Maps API and may only be used in conjunction with a Google map.<br>Geocoding results without displaying them on a map is prohibited.<br>Please make sure your Keystone app complies with the Google Maps API License. </p>\n\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/location/LocationType.js#L336-L344"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre></p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.kmFrom( item, point )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>point</strong> {Number}<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns the distance from a [lat, lng] point in kilometres.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/location/LocationType.js#L529-L537"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre></p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.milesFrom( item, point )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>point</strong> {Number}<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns the distance from a [lat, lng] point in miles.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/location/LocationType.js#L540-L548"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre></p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Markdown",html:'<h4 id="-field-types-markdown-list-path-options-">.Field.Types.Markdown( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._defaultSize = &#39;full&#39;;</p>\n<p>// TODO: implement filtering, usage disabled for now\noptions.nofilter = true;</p>\n<p>this.toolbarOptions = options.toolbarOptions || {};\nthis.height = options.height || 90;</p>\n<p>// since wysiwyg option can be falsey this needs to use <code>in</code> instead of ||\nthis.wysiwyg = (&#39;wysiwyg&#39; in options) ? options.wysiwyg : true;</p>\n<p>this._properties = [&#39;wysiwyg&#39;, &#39;height&#39;, &#39;toolbarOptions&#39;];</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/markdown/MarkdownType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Markdown.addToSchema(  ) </span>      </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.    </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/markdown/MarkdownType.js#L41-L82"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Markdown.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<pre><code class="lang-javascript">return item.get(this.paths.html);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/markdown/MarkdownType.js#L85-L93"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Markdown.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">// Assume that it has changed if the url is different\nreturn item.isModified(this.paths.md);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/markdown/MarkdownType.js#L112-L120">&nbsp; </div><pre class=" language-javascript hideCode api"></pre></p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Markdown.validateInput( data [, required, item ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object.<br>Will accept either the field path, or paths.md.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/markdown/MarkdownType.js#L96-L109"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Markdown.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.<br>Will accept either the field path, or paths.md </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/markdown/MarkdownType.js#L123-L138"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Money",html:'<h4 id="-field-types-money-list-path-options-">.Field.Types.Money( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this.currency = options.currency;\nthis._nativeType = Number;\nthis._underscoreMethods = [&#39;format&#39;];\nthis._properties = [&#39;currency&#39;];\nthis._fixedSize = &#39;small&#39;;\nthis._formatString = (options.format === false) ? false : (options.format || &#39;$0,0.00&#39;);</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/money/MoneyType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Money.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/money/MoneyType.js#L29-L46">&nbsp; </div><pre class=" language-javascript hideCode api"></pre></p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Money.validateInput( data [, required, item ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/money/MoneyType.js#L27"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Money.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/money/MoneyType.js#L26"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Name",html:'<h4 id="-field-types-name-list-path-options-">.Field.Types.Name( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">\nthis._fixedSize = &#39;large&#39;;\noptions.nofilter = true; // TODO: added in 0.4\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/name/NameType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Name.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.<br>Adds String properties for .first and .last name, and a virtual with get() and set() methods for .full  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/name/NameType.js#L18-L57"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Name.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/name/NameType.js#L59-L65"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Name.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">return item.isModified(this.paths.first) || item.isModified(this.paths.last);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/name/NameType.js#L84-L91">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Name.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/name/NameType.js#L67-L82"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Name.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/name/NameType.js#L93-L124"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Number",html:'<h4 id="-field-types-number-list-path-options-">.Field.Types.Number( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = Number;\nthis._fixedSize = &#39;small&#39;;\nthis._underscoreMethods = [&#39;format&#39;];\nthis._formatString = (options.format === false) ? false : (options.format || &#39;0,0[.][000000000000]&#39;);</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/number/NumberType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Number.addFilterToQuery( filter, query ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object \n<em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Adds filters to a query.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/number/NumberType.js#L23-L56"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Number.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/number/NumberType.js#L32-L51"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Number.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Checks that a valid array of number has been provided in a data object.<br>An empty value clears the stored value and is considered valid.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/number/NumberType.js#L69-L84"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Number.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/number/NumberType.js#L86-L102"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"NumberArray",html:'<h4 id="-field-types-numberarray-list-path-options-">.Field.Types.NumberArray( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = [Number];\nthis._underscoreMethods = [&#39;format&#39;];\nthis._formatString = (options.format === false) ? false : (options.format || &#39;0,0[.][000000000000]&#39;);\nthis._fixedSize = &#39;small&#39;;</p>\n<p></code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/numberarray/NumberArrayType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.NumberArray.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/numberarray/NumberArrayType.js#L32-L51"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.NumberArray.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Checks that a valid array of number has been provided in a data object.<br>An empty value clears the stored value and is considered valid.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/numberarray/NumberArrayType.js#L63-L101"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.NumberArray.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/numberarray/NumberArrayType.js#L103-L138"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Password",html:'<h4 id="-field-types-password-list-path-options-">.Field.Types.Password( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._underscoreMethods = [&#39;format&#39;, &#39;compare&#39;];\nthis._fixedSize = &#39;large&#39;;\n// You can&#39;t sort on password fields\noptions.nosort = true;\noptions.nofilter = true; // TODO: remove this when 0.4 is merged\nthis.workFactor = options.workFactor || 10;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/password/PasswordType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Password.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/password/PasswordType.js#L23-L77"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Password.addFilterToQuery( filter, query )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Add filters to a query.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/password/PasswordType.js#L79-L86"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Password.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p class="note"> Password fields are always formatted as a random no. of asterisks, because the saved hash should never be displayed nor the length of the actual password hinted at.</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/password/PasswordType.js#L88-L103"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Password.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/password/PasswordType.js#L169-L185">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Password.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object.<br><code>options.required</code> specifies an Array or space-delimited list of paths that are required (defaults to street1, suburb).  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/password/PasswordType.js#L188-L230"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Password.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/password/PasswordType.js#L233-L293"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'
},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Relationship",html:'<h4 id="-field-types-relationship-list-path-options-">.Field.Types.Relationship( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this.many = (options.many) ? true : false;\nthis.filters = options.filters;\nthis._defaultSize = &#39;full&#39;;\nthis._nativeType = keystone.mongoose.Schema.Types.ObjectId;\nthis._underscoreMethods = [&#39;format&#39;];\nthis._properties = [&#39;isValid&#39;, &#39;many&#39;, &#39;filters&#39;];</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Relationship.addFilterToQuery( filter, query )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Add filters to a query.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L98-L117"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.addFilters( query, item ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@param</em> <strong>item</strong> {Object} - list item<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Adds relationship filters to a query </p>\n<p class="caution-note">TODO: Deprecate this? Not sure it&#39;s used anywhere </p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L203-L223">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L63-L96"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>force the formatted value to be a string</p>\n<p class="caution-note">unexpected things happen with ObjectIds.</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L119-L126"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.hasFilters </span>   </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Whether the field has any filters defined </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L194-L201">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.isValid </span>   </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Returns true if the relationship configuration is valid  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L176-L183">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.refList </span>   </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Returns the Related List </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L185-L192">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.<br>Only updates the value if it has changed.<br>Treats an empty string as a null value.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L141-L174"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L128-L139"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"S3File",html:'<h4 id="-field-types-s3file-list-path-options-">.Field.Types.S3File( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">grappling.mixin(this)\n    .allowHooks(&#39;pre:upload&#39;);\nthis._underscoreMethods = [&#39;format&#39;, &#39;uploadFile&#39;];\nthis._fixedSize = &#39;full&#39;;</p>\n<p>// TODO: implement filtering, usage disabled for now\noptions.nofilter = true;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.S3File.s3config   </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Exposes the custom or keystone azure config settings.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L67-L75">&nbsp; </div><pre class=" language-javascript hideCode api"></pre>  </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L78-L173"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<pre><code class="lang-javascript">return item.get(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L176-L184"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.hasFormatter(  ) </span> </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects the field have formatter function.  </p>\n<pre><code class="lang-javascript">return &#39;function&#39; === typeof this.options.format;\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L178-L186">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.generateHeaders( item, file, callback )  </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - list item<br><em>@param</em> <strong>file</strong> {Object} - the uploaded file<br><em>@param</em> <strong>callback</strong> {Function} - callback<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Generates a headers object for this item to use during upload.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L223-L361"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">return item.isModified(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L187-L195">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object </p>\n<p class="warning-note"> TODO - will only return true</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L198-L207"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object</p>\n<p class="warning-note"> TODO - will not return</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L210-L218"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.uploadFile( item, file, update [, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>file</strong> {Object} - valid file object<br><em>@param</em> <strong>update</strong> {Boolean} - update or not<br><em>@param</em> <strong>callback</strong> {Function} - callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Uploads the file for this field.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L221-L277"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.getRequestHandler( item, req [, paths, callback] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.action</code> in <code>req.body</code> (<code>clear</code> or <code>delete</code>)<br><code>field.paths.upload</code> in <code>req.files</code> (uploads the file to s3file)  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L280-L320">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.handleRequest( item, req [, paths, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.S3File.getRequestHandler()</code>).  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L323-L331"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Select",html:'<h4 id="-field-types-select-list-path-options-">.Field.Types.Select( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this.ui = options.ui || &#39;select&#39;;\nthis.numeric = options.numeric ? true : false;\nthis._nativeType = (options.numeric) ? Number : String;\nthis._underscoreMethods = [&#39;format&#39;];\nthis.<em>properties = [&#39;ops&#39;, &#39;numeric&#39;];\nif (typeof options.options === &#39;string&#39;) {\n    options.options = options.options.split(&#39;,&#39;);\n}\nif (!Array.isArray(options.options)) {\n    throw new Error(&#39;Select fields require an options array.&#39;);\n}\nthis.ops = options.options.map(function(i) {\n    var op = </em>.isString(i) ? { value: i.trim(), label: utils.keyToLabel(i) } : i;\n    if (!<em>.isObject(op)) {\n        op = { label: &#39;&#39; + i, value: &#39;&#39; + i };\n    }\n    if (options.numeric &amp;&amp; !</em>.isNumber(op.value)) {\n        op.value = Number(op.value);\n    }\n    return op;\n});\n// undefined options.emptyOption defaults to true\nif (options.emptyOption === undefined) {\n    options.emptyOption = true;\n}\n// ensure this.emptyOption is a boolean\nthis.emptyOption = options.emptyOption ? true : false;\n// cached maps for options, labels and values\nthis.map = utils.optionsMap(this.ops);\nthis.labels = utils.optionsMap(this.ops, &#39;label&#39;);\nthis.values = _.pluck(this.ops, &#39;value&#39;);</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/select/SelectType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Select.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object}<br><em>@param</em> <strong>query</strong> {Object}<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/select/SelectType.js#L103-L114">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Select.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p>Adds a virtual for accessing the label of the selected value, and statics to the Schema for converting a value to a label, and retrieving all of the defined options.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/select/SelectType.js#L47-L87"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Select.cloneOps(  ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Retrieves a shallow clone of the options arrays</h4></div><pre class=" language-javascript"><code class="language-javascript"> return <em>.map(this.ops, </em>.clone); </code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/select/SelectType.js#L89-L94"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Select.cloneMap(  ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Retrieves a shallow clone of the options map.</h4></div><pre class=" language-javascript"><code class="language-javascript"> return utils.optionsMap(this.ops, true); </code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/select/SelectType.js#L96-L101"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Select.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/select/SelectType.js#L127-L132"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Select.validateInput( data [, required, item ] ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object}<br><em>@param</em> <strong>required</strong> {Boolean} \n<em>@param</em> <strong>item</strong> {Object}<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Validates that a valid option has been provided in a data object.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/select/SelectType.js#L116-L125"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Text",html:'<h4 id="-field-types-text-list-path-options-">.Field.Types.Text( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._underscoreMethods = [&#39;crop&#39;];</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/text/TextType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Text.addFilterToQuery( filter, query ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Adds filters to a query.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/text/TextType.js#L17-L37"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Text.crop( item, length, append, preserveWords ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>length</strong> {Number} - length to crop to<br><em>@param</em> <strong>append</strong> {String} - string to append<br><em>@param</em> <strong>preserveWords</strong> {Boolean} - whether to preserve the last word in full<br><em>@return</em> {String} - cropped string<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Crops the string to the specifed length.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/text/TextType.js#L39-L44"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"TextArray",html:'<h4 id="-field-types-textarray-list-path-options-">.Field.Types.TextArray( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = [String];\nthis._underscoreMethods = [&#39;crop&#39;];</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/textarray/TextArrayType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre>  </p>\n<p><span class="subMethod"> .Field.Types.TextArray.validateInput( data [, required, item ]) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid filter object<br><em>@param</em> <strong>required</strong> {Boolean} - required or not<br><em>@param</em> <strong>item</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/textarray/TextArrayType.js#L26-L47"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.TextArray.updateItem( item, data ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@param</em> <strong>data</strong> {Object}<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.    </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/textarray/TextArrayType.js#L49-L72"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Textarea",html:'<h4 id="-field-types-textarea-list-path-options-">.Field.Types.Textarea( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._underscoreMethods = [&#39;format&#39;, &#39;crop&#39;];\nthis.height = options.height || 90;\nthis._properties = [&#39;height&#39;];</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/textarea/TextareaType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Textarea.addFilterToQuery( filter, query ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Adds filters to a query.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/textarea/TextareaType.js#L21"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Textarea.crop( item, length, append, preserveWords ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>length</strong> {Number} - length to crop to<br><em>@param</em> <strong>append</strong> {String} - string to append<br><em>@param</em> <strong>preserveWords</strong> {Boolean} - whether to preserve the last word in full<br><em>@return</em> {String} - cropped string<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Crops the string to the specifed length.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/textarea/TextareaType.js#L22"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Textarea.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/textarea/TextareaType.js#L24-L30"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Url",html:'<h4 id="-field-types-url-list-path-options-">.Field.Types.Url( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._underscoreMethods = [&#39;format&#39;];\nthis._formatUrl = options.format || removeProtocolPrefix;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/url/UrlType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Url.addFilterToQuery( filter, query ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Adds filters to a query.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/url/UrlType.js#L18-L19"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Url.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value using either a supplied format function or default.<br>Strips the leading protocol from the value for simpler display.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/url/UrlType.js#L21-L28"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Url.removeProtocolPrefix( url ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>url</strong> {String} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Remove the protocol prefix from url.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/url/UrlType.js#L30-L35"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Classes/FieldTypes.md",header:".Field.Types Classes",menuHeader:"keystone.field.types"},list:{list:[{keys:"list",header:".List Class",menuHeader:"keystone.list",main:"list",html:'<h4 id="new-keystone-list-key-options-">new Keystone.List( key, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em>  - List name<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - Object of valid options<br><em>@return</em> <strong>Instance</strong>   </p>\n</blockquote>\n<p>Create a new Keystone List.<br>Each list is a wrapper around a mongoose collection schema and includes Keystone specific enhancements.<br>The mongoose schema is available via <code>list.schema</code>.  </p>\n<p><div class="code-header"> <h4>Create a new list</h4></div><pre class=" language-javascript"><code class="language-javascript">  </p>\n<pre><code>    var keystone = require(&#39;keystone&#39;);\n    var Types = keystone.Field.Types;\n\n    var Post = new keystone.List(&#39;Post&#39;, {\n        autokey: { path: &#39;slug&#39;, from: &#39;title&#39;, unique: true },\n        map: { name: &#39;title&#39; },\n        defaultSort: &#39;-createdAt&#39;\n    });\n\n    Post.add({\n        title: { type: String, required: true },\n        state: { type: Types.Select, options: &#39;draft, published, archived&#39;, default: &#39;draft&#39; },\n        author: { type: Types.Relationship, ref: &#39;User&#39; },\n        createdAt: { type: Date, default: Date.now },\n        publishedAt: Date,\n        image: { type: Types.CloudinaryImage },\n        content: {\n            brief: { type: Types.Html, wysiwyg: true, height: 150 },\n            extended: { type: Types.Html, wysiwyg: true, height: 400 }\n        }\n    });\n\n    Post.defaultColumns = &#39;title, state|20%, author, publishedAt|15%&#39;;\n    Post.register();\n</code></pre><p></code></pre>  </p>\n<p><div class="code-header"> <h4>Default options </h4></div><pre class=" language-javascript"><code class="language-javascript">\n    var defaultOptions = {\n        schema: {\n            collection: keystone.prefixModel(key)\n        },\n        noedit: false,\n        nocreate: false,\n        nodelete: false,\n        autocreate: false,\n        sortable: false,\n        hidden: false,\n        track: false,\n        inherits: false,\n        searchFields: &#39;<strong>name</strong>&#39;,\n        defaultSort: &#39;<strong>default</strong>&#39;,\n        defaultColumns: &#39;<strong>name</strong>&#39;\n    };</p>\n<p></code></pre>  </p>\n<p><div class="code-header"> <h4>List properties </h4></div><pre class=" language-javascript"><code class="language-javascript">\n    this.key = key;\n    this.path = this.get(&#39;path&#39;) || utils.keyToPath(key, true);\n    this.schema = new keystone.mongoose.Schema({}, this.options.schema);\n    this.schemaFields = [];\n    this.uiElements = [];\n    this.underscoreMethods = {};\n    this.fields = {};\n    this.fieldsArray = [];\n    this.fieldTypes = {};\n    this.relationshipFields = [];\n    this.relationships = {};\n    this.mappings = {\n        name: null,\n        createdBy: null,\n        createdOn: null,\n        modifiedBy: null,\n        modifiedOn: null\n    };</p>\n<p></code></pre>  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"add",html:'<h4 id="list-add-fields-">List.add( fields )</h4>\n<blockquote>\n<p><em>@param</em> <strong>fields</strong> <em>{Object}</em>  - Object of valid Keystone/Mongoose document fields<br><em>@return</em> <strong>this</strong> </p>\n</blockquote>\n<p>Adds one or more fields to the List<br>Based on Mongoose&#39;s <code>Schema.add</code> </p>\n<pre><code class="lang-javascript">Post.add({\n    title: { type: String, required: true },\n    state: { type: Types.Select, options: &#39;draft, published, archived&#39;, default: &#39;draft&#39; },\n    author: { type: Types.Relationship, ref: &#39;User&#39; },\n    createdAt: { type: Date, default: Date.now },\n    publishedAt: Date,\n    image: { type: Types.CloudinaryImage },\n    content: {\n        brief: { type: Types.Html, wysiwyg: true, height: 150 },\n        extended: { type: Types.Html, wysiwyg: true, height: 400 }\n    }\n});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/list/add.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'
},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"addFiltersToQuery",html:'<h4 id="list-addfilterstoquery-filters-query-">List.addFiltersToQuery( filters, query )</h4>\n<blockquote>\n<p><em>@param</em> <strong>filters</strong> <em>{Array}</em>  - Filters to add to query<br><em>@param</em> <strong>query</strong> <em>{Object}</em>  - Query object<br><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p>Adds one or more filters to a list query in the AdminUI</p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/addFiltersToQuery.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"addSearchToQuery",html:'<h4 id="list-addsearchtoquery-searchstring-query-">List.addSearchToQuery( searchString, query )</h4>\n<blockquote>\n<p><em>@param</em> <strong>searchString</strong> <em>{String}</em>  - Search string<br><em>@param</em> <strong>query</strong> <em>{Object}</em>  - Query object<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Adds a search string to a list query in the AdminUI</p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/addSearchToQuery.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"automap",html:'<h4 id="list-automap-field-">List.automap ( field )</h4>\n<blockquote>\n<p><em>@param</em> <strong>field</strong> <em>{Object}</em>  - valid field object<br><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p>Checks to see if a field path matches a currently unmapped path, and\nif so, adds a mapping for it.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/automap.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"expandColumns",html:'<h4 id="list-expandcolumns-cols-">List.expandColumns( cols )</h4>\n<blockquote>\n<p><em>@param</em> <strong>field</strong> <em>{Object}</em>  - valid field object<br><em>@return</em> <strong>this</strong>   </p>\n</blockquote>\n<p>Expands a comma-separated string or array of columns into valid column objects.  </p>\n<p>Columns can be:  </p>\n<ul>\n<li>A Field, in the format <code>field|width</code> </li>\n<li>A Field in a single related List, in the format <code>list:field|width</code>  </li>\n<li>Any valid path in the Schema, in the format <code>path|width</code>  </li>\n</ul>\n<p>The width part is optional, and can be in the format <code>n%</code> or <code>npx</code>.</p>\n<p>The path <code>__name__</code> is automatically mapped to the namePath of the List.  </p>\n<p>The field or path for the name of the item (defaults to ID if not set or detected) is automatically prepended if not explicitly included.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/expandColumns.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"expandPaths",html:'<h4 id="list-expandpaths-paths-">List.expandPaths( paths )</h4>\n<blockquote>\n<p><em>@param</em> <strong>paths</strong> <em>{String}</em>  - field paths<br><em>@return</em> <strong>Object</strong>   </p>\n</blockquote>\n<p>Expand a String of field paths into objects</p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/expandPaths.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"expandSort",html:'<h4 id="list-expandsort-input-">List.expandSort( input )</h4>\n<blockquote>\n<p><em>@param</em> <strong>paths</strong> <em>{String}</em><br><em>@return</em> <strong>Object</strong><br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/list/expandSort.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"field",html:'<h4 id="list-field-path-options-">List.field( path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>path</strong> <em>{String}</em> - new field path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - field options<br><em>@return</em> <strong>Object</strong><br><em>@api</em> <strong>private</strong>    </p>\n</blockquote>\n<p>Creates a new field at the specified path, with the provided options.<br>If no options are provides, returns the field at the specified path.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/field.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"getAdminURL",html:'<h4 id="list-getadminurl-item-">List.getAdminURL( item )</h4>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> <em>{String}</em> - item<br><em>@return</em> <strong>String</strong>    </p>\n</blockquote>\n<p>Gets the Admin URL to view the list (or an item if provided)  </p>\n<pre><code class="lang-javascript">    var listURL = list.getAdminURL()\n    var itemURL = list.getAdminURL(item)\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/list/getAdminURL.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"getCSV",html:'<h4 id="list-getcsv-item-fields-expandrelationshipfields-">List.getCSV ( item, [fields, expandRelationshipFields] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> <em>{Object}</em> - list item<br><em>@param</em> <strong>fields</strong> <em>{Object}</em><br><em>@param</em> <strong>expandRelationshipFields</strong> <em>{Boolean}</em><br><em>@return</em> <strong>String</strong>    </p>\n</blockquote>\n<p>Gets the data from an Item ready to be serialised to CSV for download</p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/getCSV.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"getData",html:'<h4 id="list-getdata-item-fields-expandrelationshipfields-">List.getData ( item, [fields, expandRelationshipFields] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> <em>{Object}</em> - list item<br><em>@param</em> <strong>fields</strong> <em>{Object}</em><br><em>@param</em> <strong>expandRelationshipFields</strong> <em>{Boolean}</em><br><em>@return</em> <strong>String</strong>    </p>\n</blockquote>\n<p>Gets the data from an Item ready to be serialised for client-side use, as used by the React components  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/getData.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"getDocumentName",html:'<h4 id="list-getdocumentname-doc-_escape_-">List.getDocumentName( doc [, <em>escape</em> ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>doc</strong> <em>{Object}</em> - mongoose document<br><em>@param</em> <strong>escape</strong> <em>{Boolean}</em><br><em>@return</em> <strong>String</strong>    </p>\n</blockquote>\n<p>Gets the name of the provided document from the correct path  </p>\n<pre><code class="lang-javascript">var name = list.getDocumentName(item)\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/list/getDocumentName.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"getOptions",html:'<h4 id="list-getoptions-">List.getOptions( )</h4>\n<blockquote>\n<p><em>@return</em> <strong>Object</strong>    </p>\n</blockquote>\n<p>Gets the options for the List, as used by the React components</p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/getOptions.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"getPages",html:'<h4 id="list-getpages-options-_maxpages_-">List.getPages( options [, <em>maxPages</em> ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>options</strong> {Object} - page options<br><em>@param</em> <strong>maxPages</strong> {Number} - the maximum number pages to display in the pagination<br><em>@return</em> <strong>Object</strong>  - options  </p>\n</blockquote>\n<p>Generate page array for pagination  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/getPages.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"getSearchFilters",html:'<h4 id="list-getsearchfilters-search-add-">List.getSearchFilters( search, add )</h4>\n<blockquote>\n<p><em>@param</em> <strong>search</strong> {String} - query\n<em>@param</em> <strong>add</strong> {Object} - additional filters<br><em>@return</em> <strong>Object</strong></p>\n</blockquote>\n<p class="caution-note">This function is deprecated in favor of <code><a href="#List-addSearchToQuery">.addSearchToQuery</a></code> and will be removed in a later version.</p>\n\n<p>Gets filters for a Mongoose query that will search for the provided string, based on the searchFields List option.  </p>\n<p>Also accepts a filters object from <code>processFilters()</code>, any of which may override the search string.  </p>\n<pre><code class="lang-javascript">list.getSearchFilters(&#39;jed&#39;) // returns { name: /jed/i }\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/list/getSearchFilters.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"getUniqueValue",html:'<h4 id="list-getuniquevalue-path-generator-_limit_-callback-">List.getUniqueValue( path, generator [, <em>limit</em> ], callback )</h4>\n<blockquote>\n<p><em>@param</em> <strong>path</strong> {String} - path to check for uniqueness<br><em>@param</em> <strong>generator</strong> {Function} - generator method to call to generate a new value<br><em>@param</em> <strong>limit</strong> {Number} - the maximum number of attempts (optional, defaults to 10)<br><em>@param</em> <strong>callback</strong> {Function} - callback(err, uniqueValue)<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Gets a unique value from a generator method by checking for documents with the same value.  </p>\n<p>To avoid infinite loops when a unique value cannot be found, it will bail and pass back an undefined value after 10 attempts.  </p>\n<p class="warning-note">Because there will always be a small amount of time between checking for an existing value and saving a document, race conditions can occur and it is possible that another document has the &#39;unique&#39; value assigned at the same time. <br /> <br /> If true uniqueness is required, you should also create a unique index on the database path, and handle duplicate errors thrown on save. </p>  \n\n\n\n\n<p><div class="code-header addGitHubLink" data-file="lib/list/getUniqueValue.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"isReserved",html:'<h4 id="list-isreserved-path-">List.isReserved( path )</h4>\n<blockquote>\n<p><em>@param</em> <strong>path</strong> {String} - path to check<br><em>@return</em> <strong>Boolean</strong></p>\n</blockquote>\n<p>Check whether or not a <code>path</code> is a reserved path. This restricts the use of <code>Object.prototype</code> method keys as well as internal mongo paths.  </p>\n<p><div class="code-header"> <h4>Reserved Paths</h4></div><pre class=" language-javascript"><code class="language-javascript">\n    [\n        &#39;id&#39;,\n        &#39;_id&#39;,\n        &#39;_&#39;,\n        &#39;prototype&#39;,\n        &#39;__proto__&#39;,\n        &#39;hasOwnProperty&#39;,\n        &#39;toString&#39;,\n        &#39;__defineGetter__&#39;,\n        &#39;__defineSetter__&#39;,\n        &#39;__lookupGetter__&#39;,\n        &#39;__lookupSetter__&#39;,\n        &#39;isPrototypeOf&#39;,\n        &#39;propertyIsEnumerable&#39;,\n        &#39;toLocaleString&#39;,\n        &#39;valueOf&#39;\n    ];\n</code></pre>  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/isReserved.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"map",html:'<h4 id="list-map-field-path-">List.map( field, path )</h4>\n<blockquote>\n<p><em>@param</em> <strong>field</strong> {String} - map to<br><em>@param</em> <strong>path</strong> {String} - map this<br><em>@return</em> <strong>Object</strong><br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Maps a built-in field (e.g. name) to a specific path or returns field mapping  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/map.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"paginate",html:'<h4 id="list-paginate-options-_callback_-">List.paginate( options  [, <em>callback</em> ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>options</strong> {Object} - options<br><em>@param</em> <strong>callback</strong> {Function} - callback<br><em>@return</em> <strong>chain</strong> - exec</p>\n</blockquote>\n<p>Gets a special Query object that will paginate documents in the list.  </p>\n<pre><code class="lang-javascript">list.paginate({\n    page: 1,\n    perPage: 100,\n    maxPages: 10\n}).exec(function(err, results) {\n    // do something\n});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/list/paginate.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"processFilters",html:'<h4 id="list-processfilters-q-">List.processFilters( q )</h4>\n<blockquote>\n<p><em>@param</em> <strong>q</strong> {String} - filters<br><em>@return</em> <strong>Object</strong> - filters  </p>\n</blockquote>\n<p>Processes a filter string into a filters object</p>\n<p class="caution-note">This function is deprecated in favor of <code><a href="#List-addFiltersToQuery">.addFiltersToQuery</a></code> and will be removed in a later version.</p>\n\n<p><div class="code-header addGitHubLink" data-file="lib/list/processFilters.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"register",html:'<h4 id="list-register-">List.register(  )</h4>\n<blockquote>\n<p><em>@return</em> <strong>this</strong>    </p>\n</blockquote>\n<p>Registers the Schema with Mongoose, and the List with Keystone.  </p>\n<p>Also adds default fields and virtuals to the schema for the list.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/register.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"relationship",html:'<h4 id="list-relationship-def-">List.relationship( ...def )</h4>\n<blockquote>\n<p><em>@param</em> <strong>def</strong> {...String|Option} - relationship (multiple arguments allowed)<br><em>@return</em> <strong>this</strong><br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Registers relationships to this list defined on others  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/relationship.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"selectColumns",html:'<h4 id="list-selectcolumns-q-cols-">List.selectColumns( q, cols )</h4>\n<blockquote>\n<p><em>@param</em> <strong>q</strong> {Query} - query<br><em>@param</em> <strong>cols</strong> {Array} - columns<br><em>@return</em> <strong>Query</strong> - q   </p>\n</blockquote>\n<p>Specified select and populate options for a query based the provided columns.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/selectColumns.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"set",html:'<h4 id="list-set-key-value-">List.set( key, value )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> {String} - key name<br><em>@param</em> <strong>value</strong> {...String|Object|Array|Function} - value<br><em>@return</em> <strong>value</strong> - value  </p>\n</blockquote>\n<p>Gets and Sets list options. Aliased as <code>.get()</code>.  </p>\n<pre><code class="lang-javascript">list.set(&#39;test&#39;) // returns the &#39;test&#39; value\nlist.set(&#39;test&#39;, value) // sets the &#39;test&#39; option to `value`\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/list/set.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"underscoreMethod",html:'<h4 id="list-underscoremethod-path-fn-">List.underscoreMethod( path, fn )</h4>\n<blockquote>\n<p><em>@param</em> <strong>path</strong> {String} - path<br><em>@param</em> <strong>fn</strong> {Function} - underscore method<br><em>@return</em> <strong>this</strong>    </p>\n</blockquote>\n<p>Adds a method to the underscoreMethods collection on the list, which is then added to the schema before the list is registered with mongoose.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/underscoreMethod.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"updateAll",html:'<h4 id="list-updateall-data-_callback_-">List.updateAll( data [, <em>callback</em> ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - path<br><em>@param</em> <strong>callback</strong> {Function} - callback<br><em>@return</em> <strong>this</strong>  </p>\n</blockquote>\n<p>Updates every document in a List, setting the provided data on each.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/updateAll.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"schema",header:!1,menuHeader:!1,name:"<i>schemaPlugins</i>.autokey",html:'<h4 id="list-_schemaplugins_-autokey-">List <em>schemaPlugins</em>.autokey (  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> </p>\n<h4 id="adds-a-key-to-each-document-in-a-collection">Adds a key to each document in a collection</h4>\n<p>Uses a current field, <code>from</code>, to create a key.<br>Creates a new field based on <code>path</code>.<br>Key will be unique if <code>unique</code> is <strong>boolean</strong> <code>true</code>.<br>Key will update anytime the <code>from</code> field updates unless <code>fixed</code> is <strong>boolean</strong> <code>true</code>.<br></div><pre class=" language-javascript"><code class="language-javascript">    autokey: { \n        path: &#39;slug&#39;, \n        from: &#39;name&#39;,\n        unique: true,\n        fixed: false\n    }\n</code></pre></p>\n<p>Uses <code class="default-value"> list.schema.pre(&#39;save&#39;...) </code> to alter documents.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/schemaPlugins/autokey.js"><a href="#" class="loadCode">code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"schema",header:!1,menuHeader:!1,name:"<i>schemaPlugins</i>.history",html:'<h4 id="list-_schemaplugins_-history-">List <em>schemaPlugins</em>.history (  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> </p>\n<h4 id="when-enabled-it-tracks-changes-to-each-document-on-save-or-remove-">When enabled, it tracks changes to each document on save or remove.</h4>\n<p>Creates a new collection named <code>yourcollections_revisions</code> when <strong>boolean</strong> <code>true</code>.<br>Revisions are noted on all <code>Save</code> and <code>Remove</code> operations.<br></div><pre class=" language-javascript"><code class="language-javascript">    history: true</code></pre></p>\n<p>Uses <code class="default-value"> list.schema.pre(&#39;save&#39;...) </code> and <code class="default-value"> list.schema.pre(&#39;remove&#39;...) </code>to alter documents.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/schemaPlugins/history.js"><a href="#" class="loadCode">code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"schema",header:!1,menuHeader:!1,name:"<i>schemaPlugins</i>.sortable",html:'<h4 id="list-_schemaplugins_-sortable-">List <em>schemaPlugins</em>.sortable (  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> </p>\n<h4 id="drag-and-drop-sorting-in-adminui">Drag and Drop Sorting in AdminUI</h4>\n<p>Adds a hidden field <code>sortOrder</code> to the schema.<br></div><pre class=" language-javascript"><code class="language-javascript">    sortable: true </code></pre></p>\n<p>Uses <code class="default-value"> list.schema.pre(&#39;save&#39;...) </code>to alter documents.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/schemaPlugins/sortable.js"><a href="#" class="loadCode">code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"schema",header:!1,menuHeader:!1,name:"<i>schemaPlugins</i>.track",html:'<h4 id="list-_schemaplugins_-track-">List <em>schemaPlugins</em>.track (  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"><h4>Adds tracking fields to a collection</h4></div><pre class=" language-javascript"><code class="language-javascript"> track: true </code></pre>  </p>\n<p><div class="code-header"> <h4>Added fields</h4></div><pre class=" language-javascript"><code class="language-javascript">    { \n        createdAt: false, \n        createdBy: false,\n        updatedAt: false,\n        updatedBy: false\n    };\n</code></pre> </p>\n<p>Uses <code class="default-value"> list.schema.pre(&#39;save&#39;...) </code> to alter documents.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/schemaPlugins/track.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],pre:null,main:"markdown/class/Classes/List.md",header:".List Class",menuHeader:"keystone.list",add:!0,schema:{list:[],main:!1,pre:"schemaPlugins",header:!1,menuHeader:!1}},middleware:{list:[{keys:"middleware",header:".middleware helper",menuHeader:"keystone.middleware",main:"middleware",html:'<h4 id="keystone-middleware">Keystone.middleware</h4>\n<p>Middleware helpers for cors and api</p>\n<p><div class="code-header addGitHubLink" data-file="lib/middleware"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"middleware",header:".middleware helper",menuHeader:"keystone.middleware",name:"api",html:'<h4 id="-middleware-api">.middleware.api</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Adds helper methods to the <code>res</code> object</h4></div><pre class=" language-javascript"><code class="language-javascript">res.apiResponse(data);</p>\n<p>res.apiError(key, err, msg, code);  </p>\n<p>res.apiNotFound(err, msg);  </p>\n<p>res.apiNotAllowed(err, msg);</p>\n<p></code></pre></p>\n<p><div class="code-header"> <h4>Example</h4></div><pre class=" language-javascript"><code class="language-javascript">app.all(&#39;/api*&#39;, keystone.middleware.api);\napp.get(&#39;/api/v2/posts&#39;, function( req, res ){\n    // send back json data with included middleware\n    ... // get data\n    res.apiResponse(data); \n});\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/middleware/api.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"middleware",header:".middleware helper",menuHeader:"keystone.middleware",name:"cors",html:'<h4 id="-middleware-cors">.middleware.cors</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Adds CORS headers to the response.</h4></div><pre class=" language-javascript"><code class="language-javascript"> app.all(&#39;/api*&#39;, keystone.middleware.cors);\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/middleware/cors.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Helpers/Middleware.md",header:".middleware helper",menuHeader:"keystone.middleware"},security:{list:[{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",main:"security",html:'<h4 id="keystone-security-csrf">Keystone.security.csrf</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Helper to uilize csrf   </p>\n<p><span class="subMethod"> .security.csrf.TOKEN_KEY </span>= <code>&#39;_csrf&#39;</code><br><span class="subMethod"> .security.csrf.LOCAL_KEY</span>  = <code>&#39;csrf_token_key&#39;</code><br><span class="subMethod"> .security.csrf.LOCAL_VALUE </span>= <code>&#39;csrf_token_value&#39;</code><br><span class="subMethod"> .security.csrf.SECRET_KEY </span>= <code>.TOKEN_KEY + &#39;_secret&#39;</code><br><span class="subMethod"> .security.csrf.SECRET_LENGTH </span>= <code>10</code><br><span class="subMethod"> .security.csrf.CSRF_HEADER_KEY</span>  = <code>&#39;x-csrf-token&#39;</code><br><span class="subMethod"> .security.csrf.XSRF_HEADER_KEY </span>= <code>&#39;x-xsrf-token&#39;</code><br><span class="subMethod"> .security.csrf.XSRF_COOKIE_KEY </span> = <code>&#39;XSRF-TOKEN&#39;</code>  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript  hideCode api"></pre> </p>\n'},{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",name:"createSecret",html:'<h4 id="-security-csrf-createsecret-">.security.csrf.createSecret(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L26-L28"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",name:"getSecret",html:'<h4 id="-security-csrf-getsecret-req-">.security.csrf.getSecret( req )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L22-L24"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",name:"getToken",html:'<h4 id="-security-csrf-gettoken-req-res-">.security.csrf.getToken( req, res )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L30-L34"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",name:"middleware",html:'<h4 id="-security-csrf-middleware-init-req-res-next-">.security.csrf.middleware.init( req, res, next )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@param</em> <strong>next</strong> <em>{Object}</em>  - callback<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L61-L65"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<h4 id="-security-csrf-middleware-validate-req-res-next-">.security.csrf.middleware.validate( req, res, next )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@param</em> <strong>next</strong> <em>{Object}</em>  - callback<br><em>@api</em> <strong>public</strong></p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L67-L82"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",name:"requestToken",html:'<h4 id="-security-csrf-requesttoken-req-">.security.csrf.requestToken( req )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L36-L47"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",name:"tokenize",html:'<h4 id="-security-csrf-tokenize-salt-secret-">.security.csrf.tokenize( salt, secret )</h4>\n<blockquote>\n<p><em>@param</em> <strong>salt</strong> <em>{String}</em><br><em>@param</em> <strong>secret</strong> <em>{String}</em><br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L14-L16"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",name:"validate",html:'<h4 id="-session-keystoneauth-req-token-">.session.keystoneAuth( req, token )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>token</strong> <em>{String}</em>  - token<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L49-L57"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre>  </p>\n'}],main:"markdown/class/Helpers/Security.md",header:".security.csrf helper",menuHeader:"keystone.security.csrf"},session:{list:[{keys:"session",header:".session helper",menuHeader:"keystone.session",main:"session",html:'<h4 id="keystone-session">Keystone.session</h4>\n<p>Helper to uilize sessions  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/session.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'
},{keys:"session",header:".session helper",menuHeader:"keystone.session",name:"keystoneAuth",html:'<h4 id="-session-keystoneauth-req-res-next-">.session.keystoneAuth( req, res, next )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@param</em> <strong>next</strong> <em>{Object}</em>  - callback  </p>\n</blockquote>\n<p>Middleware to enable access to Keystone.</p>\n<p>Bounces the user to the signin screen if they are not signed in or do not have permission.  </p>\n<p><code>req.user</code> is the user returned by the database. It&#39;s type is Keystone.List.<br><code>req.user.canAccessKeystone</code> denotes whether the user has access to the admin panel.</p>\n<p class="note">If you&#39;re having issues double check your user model. Setting <code>canAccessKeystone</code> to true in the database will not be reflected here if it is virtual. <br/> See <a href="http://mongoosejs.com/docs/guide.html#virtuals">http://mongoosejs.com/docs/guide.html#virtuals</a></p>\n\n\n<p><div class="code-header addGitHubLink" data-file="lib/session.js#L190-L215"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"session",header:".session helper",menuHeader:"keystone.session",name:"persist",html:'<h4 id="-session-persist-req-res-next-">.session.persist( req, res, next )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@param</em> <strong>next</strong> <em>{Object}</em>  - callback  </p>\n</blockquote>\n<p>Middleware to ensure session persistence across server restarts.  </p>\n<p>Looks for a userId cookie, and if present, and there is no user signed in, automatically signs the user in.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/session.js#L156-L188"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"session",header:".session helper",menuHeader:"keystone.session",name:"signin",html:'<h4 id="-session-signin-user-req-res-onsuccess-onfail-">.session.signin( user, req, res, onSuccess, onFail )</h4>\n<blockquote>\n<p><em>@param</em> <strong>user</strong> <em>{Object}</em>  - user object<br><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@param</em> <strong>onSuccess</strong> <em>{Object}</em>  - onSuccess callback, is passed the User instance<br><em>@param</em> <strong>onFail</strong> <em>{Object}</em>  - onFail callback  </p>\n</blockquote>\n<p>Signs in a user user matching the lookup filters </p>\n<p><div class="code-header"> <h4>Example</h4>From <a href="http://www.sydjs.com" target="_blank">sydjs.com</a> <a href="https://github.com/JedWatson/sydjs-site/blob/master/routes/views/session/signin.js" target="_blank">(code)</a></div><pre class=" language-javascript"><code class="language-javascript">\nfunction(req, res) {</p>\n<pre><code>if (req.user) {\n    return res.redirect(req.cookies.target || &#39;/me&#39;);\n}\n\nvar view = new keystone.View(req, res),\n    locals = res.locals;\n\nlocals.section = &#39;session&#39;;\nlocals.form = req.body;\n\nview.on(&#39;post&#39;, { action: &#39;signin&#39; }, function(next) {\n\n    if (!req.body.email || !req.body.password) {\n        req.flash(&#39;error&#39;, &#39;Please enter your username and password.&#39;);\n        return next();\n    }\n\n    var onSuccess = function() {\n        if (req.body.target &amp;&amp; !/join|signin/.test(req.body.target)) {\n            console.log(&#39;[signin] - Set target as [&#39; + req.body.target + &#39;].&#39;);\n            res.redirect(req.body.target);\n        } else {\n            res.redirect(&#39;/me&#39;);\n        }\n    }\n\n    var onFail = function() {\n        req.flash(&#39;error&#39;, &#39;Your username or password were incorrect, please try again.&#39;);\n        return next();\n    }\n\n    keystone.session.signin({ email: req.body.email, password: req.body.password }, req, res, onSuccess, onFail);\n\n});\n\nview.render(&#39;session/signin&#39;);\n</code></pre><p>}\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/session.js#L71-L116"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"session",header:".session helper",menuHeader:"keystone.session",name:"signinWithUser",html:'<h4 id="-session-signinwithuser-user-req-res-onsuccess-">.session.signinWithUser( user, req, res, onSuccess )</h4>\n<blockquote>\n<p><em>@param</em> <strong>user</strong> <em>{Object}</em>  - user object<br><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@param</em> <strong>onSuccess</strong> <em>{Object}</em>  - onSuccess callback, is passed the User instance  </p>\n</blockquote>\n<p>Creates a user session by supplying a user object </p>\n<p><div class="code-header"> <h4>Example</h4></div><pre class=" language-javascript"><code class="language-javascript"></p>\n<p>// express route\nkeystone.app.post(&#39;/signin&#39;, function(req, res) {</p>\n<pre><code>    var passwordCheck = req.body.password;\n    var onSuccess = function(user) {\n        // successful session generation\n    }\n    User.model.find({email: req.body.email}).exec(function(err, user) {\n        if (user &amp;&amp; (!passwordCheck || scmp(passwordCheck, hash(user.password)))) {\n            keystone.session.signinWithUser(user, req, res, onSuccess);\n        } else {\n            // handle error\n        }\n    });\n</code></pre><p>}\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/session.js#L23-L58"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"session",header:".session helper",menuHeader:"keystone.session",name:"signout",html:'<h4 id="-session-signout-req-res-next-">.session.signout( req, res, next )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@param</em> <strong>next</strong> <em>{Object}</em>  - callback  </p>\n</blockquote>\n<p>Signs the current user out and resets the session</p>\n<p><div class="code-header"> <h4>Example</h4>From <a href="http://www.sydjs.com" target="_blank">sydjs.com</a> <a href="https://github.com/JedWatson/sydjs-site/blob/master/routes/views/session/signout.js" target="_blank">(code)</a></div><pre class=" language-javascript"><code class="language-javascript">\nfunction(req, res) {</p>\n<pre><code>    var view = new keystone.View(req, res),\n        locals = res.locals;\n\n    locals.section = &#39;session&#39;;\n\n    keystone.session.signout(req, res, function() {\n        res.redirect(&#39;/&#39;);\n    });\n</code></pre><p>};\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/session.js#L127-L154"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Helpers/Session.md",header:".session helper",menuHeader:"keystone.session"},view:{list:[{keys:"view",header:".View Class",menuHeader:"keystone.view",main:"view",html:'<h4 id="new-keystone-view-req-res-">new Keystone.View( req, res )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - valid Express req object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - valid Express res object<br><em>@return</em> <strong>Instance</strong>   </p>\n</blockquote>\n<p>Helper to simplify view logic in a Keystone application  </p>\n<pre><code class="lang-javascript">    var view = new keystone.View(req, res);\n\n    view.render(&#39;index&#39;);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/view.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"view",header:".View Class",menuHeader:"keystone.view",name:"on",html:'<h4 id="view-on-on-callback-">View.on( on [, callback ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>on</strong> <em>{Function|Object|String}</em>  - Method to be executed<br><em>@param</em> <strong>callback</strong> <em>{Function}</em>  - Function to run in parallel on <code>on</code>.<br><em>@return</em> <strong>this</strong>  </p>\n</blockquote>\n<p>Adds a method (or array of methods) to be executed in parallel to the <code>init</code>, <code>action</code> or <code>render</code> queue.</p>\n<h5 id="argument-on-options">argument <code>on</code> options</h5>\n<ul>\n<li><strong>init</strong> - Init events are always fired in series, before any other actions<pre><code class="lang-javascript">view.on(&#39;init&#39;, function (next) {\n  // do something before any actions or queries have run\n});\n</code></pre>\n</li>\n<li><strong><code>Function</code></strong> - If the first argument is a <strong>Function</strong> that returns truthy then the second argument is added to the queue.</li>\n<li><strong>Dynamic</strong> - Do certain actions depending on information in the response object.  <pre><code class="lang-javascript">view.on({ &#39;user.name.first&#39;: &#39;Admin&#39; }, function(next) {\n    console.log(&#39;Hello Admin!&#39;);\n    next();\n});\n</code></pre>\n</li>\n<li><strong>get</strong> - HTTP verb  </li>\n<li><strong>post</strong> - HTTP verb  </li>\n<li><strong>put</strong> - HTTP verb  </li>\n<li><strong>delete</strong> - HTTP verb  </li>\n<li><strong>render</strong> - Render events are always fired last in parallel, after any other actions  <pre><code class="lang-javascript">view.on(&#39;render&#39;, function (next) {\n  // do something after init, action and query middleware has run\n});\n</code></pre>\n</li>\n</ul>\n<p><div class="code-header"><h4>example</h4></div><pre class=" language-javascript"><code class="language-javascript">view.on(function() {</p>\n<pre><code>    var thing = true;\n    return thing;\n\n}, function(next) {\n\n    console.log(&#39;thing is true!&#39;);\n    next();\n\n});\n</code></pre><p></code></pre>  </p>\n<p><div class="code-header"> </p>\n<p><h4>grab posts</h4><br></div><pre class=" language-javascript"><code class="language-javascript">    // Load posts\n    view.on(&#39;init&#39;, function(next) {</p>\n<pre><code>        var q = keystone.list(&#39;Post&#39;).paginate({\n                page: req.query.page || 1,\n                perPage: 10,\n                maxPages: 10\n            })\n            .where(&#39;state&#39;, &#39;published&#39;)\n            .sort(&#39;-publishedDate&#39;)\n            .populate(&#39;author categories&#39;);\n\n        if (locals.data.category) {\n            q.where(&#39;categories&#39;).in([locals.data.category]);\n        }\n\n        q.exec(function(err, results) {\n            locals.data.posts = results;\n            next(err);\n        });\n\n    });\n</code></pre><p></code></pre>  </p>\n<p><div class="code-header addGitHubLink"  data-file="lib/view.js#L42-L193">&nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"view",header:".View Class",menuHeader:"keystone.view",name:"query",html:'<h4 id="view-query-key-query-options-">View.query( key, query, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{Array}</em>  - Keys can be nested paths, containing objects will be created as required.<br><em>@param</em> <strong>query</strong> <em>{Object}</em>  - Mongoose query<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - Options<br><em>@return</em> <strong>chain</strong> - QueryCallbacks  </p>\n</blockquote>\n<p>Queues a mongoose query for execution before the view is rendered.<br>The results of the query are set in <code>locals[key]</code>.<br>Keys can be nested paths, containing objects will be created as required.<br>The third argument <code>then</code> can be a method to call after the query is completed such as <code class="default-value"> function(err, results, callback)</code>, or a <code>populateRelated</code> definition (string or array).</p>\n<p><div class="code-header"> <h4>Examples</h4></div><pre class=" language-javascript"><code class="language-javascript"> </p>\n<pre><code>/* an array of books from the database will be added to locals.books.*/\nview.query(&#39;books&#39;, keystone.list(&#39;Book&#39;).model.find());\n\n/*  You can also nest properties on the locals variable. */\nview.query(\n    &#39;admin.books&#39;,\n    keystone.list(&#39;Book&#39;).model.find().where(&#39;user&#39;, &#39;Admin&#39;)\n);\n/* locals.admin.books will be the result of the query */\n\n\n/* views.query().then is always called if it is available */\nview.query(&#39;books&#39;, keystone.list(&#39;Book&#39;).model.find())\n    .then(function (err, results, next) {\n        if (err) return next(err);\n        console.log(results);\n        next();\n    });\n</code></pre><p></code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/view.js#L214-L310">&nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"view",header:".View Class",menuHeader:"keystone.view",name:"render",html:'<h4 id="view-render-renderfn-locals-callback-">View.render( renderFn, locals, callback )</h4>\n<blockquote>\n<p><em>@param</em> <strong>renderFn</strong> <em>{Function|String}</em>  - Render function<br><em>@param</em> <strong>locals</strong> <em>{Object}</em>  - Locals<br><em>@param</em> <strong>callback</strong> <em>{Function}</em>  - Render callback  </p>\n</blockquote>\n<p>Executes the current queue of init and action methods in series, and then executes the render function.<br>If <strong>renderFn</strong> is a String, it is provided to <code>res.render</code>.<br>It is expected that <em>most</em> init stacks require processing in series, but it is safe to execute actions in parallel.<br>If there are several <code>init</code> methods that should be run in parallel, queue them as an Array, e.g. <code>view.on(&#39;init&#39;, [first, second])</code>.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/view.js#L312-L375">&nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Classes/View.md",header:".View Class",menuHeader:"keystone.view"}},"0.4.x":{keystone:{list:[{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"adminApp",html:'<h4 id="-adminapp">.adminApp</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong> </p>\n</blockquote>\n<p>Expose Admin UI App. </p>\n<p><div class="code-header addGitHubLink" data-file="index.js#L123-L126"> &nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",main:"keystone",html:'<h4 id="new-keystone-">new Keystone( )</h4>\n<blockquote>\n<p><em>@return</em> <strong>Instance</strong>   </p>\n</blockquote>\n<p><div class="code-header" ><h4> The Keystone instance is a global object.</h4></div><pre class=" language-javascript  "><code  class=" language-javascript">var keystone = require(&#39;keystone&#39;); </code></pre> </p>\n<p><div class="code-header" ><h4> defaults</h4>Set with:<br /><code>keystone.init({ &#39;key&#39;: value, ... })</code> <br />  <code>keystone.options({ &#39;key&#39;: value, ... })</code><br /><code>keystone.set(&#39;key&#39;, value)</code>  </div><pre class=" language-javascript  "><code  class=" language-javascript">this.express = express; // exposes express\nthis.lists = {};\nthis.paths = {}; </p>\n<p>this._options = {\n    &#39;name&#39;: &#39;Keystone&#39;,\n    &#39;brand&#39;: &#39;Keystone&#39;,\n    &#39;compress&#39;: true,\n    &#39;headless&#39;: false,\n    &#39;logger&#39;: &#39;:method :url :status :response-time ms&#39;,\n    &#39;auto update&#39;: false,\n    &#39;model prefix&#39;: null,\n    &#39;module root&#39;: moduleRoot,\n    &#39;frame guard&#39;: &#39;sameorigin&#39;,\n    &#39;env&#39;: process.env.NODE_ENV || &#39;development&#39;,\n    &#39;port&#39;: process.env.PORT || process.env.OPENSHIFT_NODEJS_PORT,\n    &#39;host&#39;: process.env.HOST || process.env.IP || process.env.OPENSHIFT_NODEJS_IP,\n    &#39;listen&#39;: process.env.LISTEN,\n    &#39;ssl&#39;: process.env.SSL,\n    &#39;ssl port&#39;: process.env.SSL_PORT,\n    &#39;ssl host&#39;: process.env.SSL_HOST,\n    &#39;ssl key&#39;: process.env.SSL_KEY,\n    &#39;ssl cert&#39;: process.env.SSL_CERT,\n    &#39;cookie secret&#39;: process.env.COOKIE_SECRET,\n    &#39;cookie signin&#39;: this.get(&#39;env&#39;) === &#39;development&#39;) ? true : false,\n    &#39;embedly api key&#39;: process.env.EMBEDLY_API_KEY || process.env.EMBEDLY_APIKEY,\n    &#39;mandrill api key&#39;: process.env.MANDRILL_API_KEY || process.env.MANDRILL_APIKEY,\n    &#39;mandrill username&#39;: process.env.MANDRILL_USERNAME,\n    &#39;google api key&#39;:  process.env.GOOGLE_BROWSER_KEY,\n    &#39;google server api key&#39;:  process.env.GOOGLE_SERVER_KEY,\n    &#39;ga property&#39;:  process.env.GA_PROPERTY,\n    &#39;ga domain&#39;: process.env.GA_DOMAIN,\n    &#39;chartbeat property&#39;: process.env.CHARTBEAT_PROPERTY,\n    &#39;chartbeat domain&#39;: process.env.CHARTBEAT_DOMAIN,\n    &#39;allowed ip ranges&#39;: process.env.ALLOWED_IP_RANGES,\n    // process.env.CLOUDINARY_URL is processed by the cloudinary package when this is set\n    &#39;cloudinary config&#39;: process.env.CLOUDINARY_URL ? true : false,\n    // s3 conditional on process.env.S3_<em> vars\n    &#39;s3 config&#39;: { bucket: process.env.S3_BUCKET, key: process.env.S3_KEY, secret: process.env.S3_SECRET, region: process.env.S3<em>REGION }, \n    // azure conditional on process.env.AZURE</em></em> vars\n    &#39;azurefile config&#39;: { account: process.env.AZURE_STORAGE_ACCOUNT, key: process.env.AZURE_STORAGE_ACCESS_KEY },</p>\n<p>};</p>\n<p></code></pre> </p>\n<p><div class="code-header addGitHubLink" data-file="index.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"bindEmailTestRoutes",html:'<h4 id="-bindemailtestroutes-app-emails-">.bindEmailTestRoutes( app, emails )</h4>\n<blockquote>\n<p><em>@param</em> <strong>app</strong> <em>{Object}</em><br><em>@param</em> <strong>emails</strong> <em>{Object}</em><br><em>@api</em> <strong>private</strong> </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/core/bindEmailTestRoutes.js">  <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"createItems",html:'<h4 id="-createitems-data-_options_-callback-">.createItems( data[, <em>options</em>], callback )</h4>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> <em>{Object}</em>  - Create item data<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - <em>Optional</em> Object of options<br><em>@param</em> <strong>callback</strong> <em>{Function}</em>  - Callback function on done or error<br><em>@return</em> <strong>callback</strong> </p>\n</blockquote>\n<p>Keystone&#39;s <code>createItems</code> function is a simple but powerful way to populate your database with data.</p>\n<p>It can be used to create <a href="http://en.wikipedia.org/wiki/Test_fixture">test fixtures</a> or initialise your database with default content / users / etc.</p>\n<p>There&#39;s also a shorthand syntax that can be used within update files; if you are using the <code>auto updates</code> feature, any file that exports a <code>create</code> object will automatically be wrapped and the data will be created.</p>\n<p><code>createItems</code> takes two passes at the data it is provided, first creating the items and retaining references by key (if provided) that can be used to populate relationships in the second pass. This makes it easy to create related data without asynchronous nesting (which for data creation sometimes ends up in knots).</p>\n<p>The <code>data</code> argument should be an <code>Object</code> containing an <code>Array</code> for each <code>List</code> you want to populate. Each object in the array contains the data for a single item.</p>\n<p>Each data property should match to a field path (or sub-field path) - all paths recognised by the <code>UpdateHandler</code> are usable.</p>\n<p>A special property, <code>__ref</code>, can be set with a string value that is used to reference the item in relationships.</p>\n<p>Relationship fields should contain either a string matching another item&#39;s <code>__ref</code> property, or (for <code>many: true</code> relationship fields) can contain an array of strings.</p>\n<p>The <code>options</code> parameter can be used to override the default options.  </p>\n<pre><code class="lang-javascript">var options = {\n    verbose: false,\n    strict: true\n};\n</code></pre>\n<p>The <code>callback(err, stats)</code> function is passed the error (if there was one) and a stats object containing counts for each list of items that were created, and a special <code>message</code> property that can be parsed as Markdown or logged to the console.</p>\n<pre><code class="lang-javascript">// This example demonstrates complete usage of keystone.createItems,\n// and how to use its callback to log the message to the console.\n\nfunction(done) {\n\n    keystone.createItems({\n\n        User: [{\n            &#39;name.full&#39;: &#39;Jed Watson&#39;,\n            email: &#39;jed@keystonejs.com&#39;,\n            password: &#39;admin&#39;,\n            isAdmin: true,\n            __ref: &#39;jed&#39;\n        }],\n\n        PostCategory: [{\n            name: &#39;Keystone JS&#39;,\n            __ref: &#39;keystone&#39;\n        }, {\n            name: &#39;Node.js&#39;,\n            __ref: &#39;node&#39;\n        }],\n\n        Post: [{\n            title: &#39;A draft post&#39;,\n            author: &#39;jed&#39;,\n            &#39;content.brief&#39;: &#39;This is an example draft post.&#39;,\n            categories: [&#39;keystone&#39;, &#39;node&#39;]\n        }, {\n            title: &#39;A published post&#39;,\n            state: &#39;published&#39;,\n            author: &#39;jed&#39;,\n            publishedDate: &#39;2014-04-12&#39;,\n            &#39;content.brief&#39;: &#39;This post has been published!&#39;,\n            categories: &#39;node&#39;\n        }]\n\n    }, function(err, stats) {\n        stats &amp;&amp; console.log(stats.message);\n        done(err);\n    });\n\n}\n</code></pre>\n<pre><code class="lang-javascript">// This example demonstrates the shorthand syntax you can use to\n// create items in a Keystone update script.\n\nvar keystone = require(&#39;keystone&#39;);\n\nexports.create = {\n\n    User: [{\n        &#39;name.full&#39;: &#39;Jed Watson&#39;,\n        email: &#39;jed@keystonejs.com&#39;,\n        password: &#39;admin&#39;,\n        isAdmin: true,\n        __ref: &#39;jed&#39;\n    }],\n\n    PostCategory: [{\n        name: &#39;Keystone JS&#39;,\n        __ref: &#39;keystone&#39;\n    }, {\n        name: &#39;Node.js&#39;,\n        __ref: &#39;node&#39;\n    }],\n\n    Post: [{\n        title: &#39;A draft post&#39;,\n        author: &#39;jed&#39;,\n        &#39;content.brief&#39;: &#39;This is an example draft post.&#39;,\n        categories: [&#39;keystone&#39;, &#39;node&#39;]\n    }, {\n        title: &#39;A published post&#39;,\n        state: &#39;published&#39;,\n        author: &#39;jed&#39;,\n        publishedDate: &#39;2014-04-12&#39;,\n        &#39;content.brief&#39;: &#39;This post has been published!&#39;,\n        categories: &#39;node&#39;\n    }]\n\n};\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/createItems.js"> <a href="#" class="loadCode">code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"expandPath",html:'<h4 id="-expandpath-path-">.expandPath( path )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em>  - path<br><em>@return</em> <strong>expandedPath</strong> </p>\n</blockquote>\n<p>Expands a path to include moduleRoot if it is relative</p>\n<pre><code class="lang-javascript">var path = keystone.expandPath(keystone.get(&#39;views&#39;));\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/options.js#L190-L204"> &nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"get",html:'<h4 id="-get-key-">.get( key )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em>  - Key of the option you want to retrieve<br><em>@return</em> <strong>value</strong> </p>\n</blockquote>\n<p>Get a Keystone option/value pair.</p>\n<pre><code class="lang-javascript">var brand = keystone.get(&#39;brand&#39;);\n// &gt;&gt; KeystoneJS\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/options.js#L177-L188"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"getOrphanedLists",html:'<h4 id="-getorphanedlists-">.getOrphanedLists( )</h4>\n<blockquote>\n<p><em>@return</em> <strong>nav</strong> </p>\n</blockquote>\n<p>Retrieves orphaned lists (those not in a nav section)</p>\n<pre><code class="lang-javascript">var orphanLists = keystone.getOrphanedLists();\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/getOrphanedLists.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"getPath",html:'<h4 id="-getpath-key-defaultvalue-">.getPath( key, defaultValue )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em>  - Key of the option you want to retrieve<br><em>@param</em> <strong>defaultValue</strong> <em>{String}</em>  - Default value if <code>key</code> is not a valid option<br><em>@return</em> <strong>path</strong> </p>\n</blockquote>\n<p>Gets an expanded path option, expanded to include moduleRoot if it is relative.  </p>\n<pre><code class="lang-javascript">var path = keystone.getPath(&#39;views&#39;, &#39;templates/views&#39;);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/options.js#L206-L218"> &nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"importer",html:'<h4 id="-importer-rel__dirname-">.importer( rel__dirname )</h4>\n<blockquote>\n<p><em>@param</em> <strong>rel__dirname</strong> <em>{String}</em>  - path<br><em>@return</em> <strong>imported</strong> </p>\n</blockquote>\n<p>Import all .js Modules in given path</p>\n<pre><code class="lang-javascript">var importRoutes = keystone.importer(__dirname);\n\nvar routes = {\n    site: importRoutes(&#39;./site&#39;),\n    api: importRoutes(&#39;./api&#39;)\n};\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/importer.js"> <a href="#" class="loadCode">code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"init",html:'<h4 id="-init-options-">.init( options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>options</strong> <em>{Object}</em> - set the intital value of Keystone options<br><em>@return</em> <strong>this</strong> </p>\n</blockquote>\n<p>Initialize the Keystone options object.  See <a href="http://keystonejs.com/docs/configuration/">Configuration Docs</a>.</p>\n<p>If  Mongoose and/or Express references are not provided, they will be added during <code>.init</code>.  </p>\n<pre><code class="lang-javascript">keystone.init({\n    &#39;name&#39;: &#39;Keystone&#39;,\n    &#39;brand&#39;: &#39;KeystoneJS&#39;,\n    &#39;less&#39;: &#39;public&#39;,\n    &#39;static&#39;: &#39;public&#39;,\n    &#39;favicon&#39;: &#39;public/favicon.ico&#39;,\n    &#39;views&#39;: &#39;templates/views&#39;,\n    &#39;view engine&#39;: &#39;jade&#39;,\n    &#39;emails&#39;: &#39;templates/emails&#39;,\n    &#39;auto update&#39;: true,\n    &#39;session&#39;: true,\n    &#39;auth&#39;: true,\n    &#39;user model&#39;: &#39;User&#39;,\n    &#39;cookie secret&#39;: &#39;=Hw1WfV6XlGW(w~K8=&amp;5r%U2]EZ&#39;,\n\n    &#39;app&#39;: app, // custom express instance\n    &#39;mongoose&#39;: mongoose, // custom mongoose instance\n});\n</code></pre>\n<p class="api-note">The minimum required to start a Keystone instance is the <code>cookie secret</code> option.</p>\n\n\n<p><div class="code-header addGitHubLink" data-file="lib/core/init.js"> <a href="#" class="loadCode">code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"initNav",html:'<h4 id="-initnav-nav-">.initNav( nav )</h4>\n<blockquote>\n<p><em>@param</em> <strong>nav</strong> <em>{Object}</em><br><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p>Initialises Keystone&#39;s internal nav config.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/core/initNav.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"list",html:'<h4 id="-list-arg-">.list( arg )</h4>\n<blockquote>\n<p><em>@param</em> <strong>arg</strong> <em>{...String|Function}</em>  - current list key or new constructed List<br><em>@return</em> <strong>list</strong> </p>\n</blockquote>\n<p>Registers or retrieves a list.  Used by <code>List.register()</code> to register a newly constructed List with Keystone.   </p>\n<pre><code class="lang-javascript">var User = keystone.list(&#39;User&#39;);\n\nUser.model.find().exec(function(docs,err) {\n\n});\n</code></pre>\n<p><p class="api-note">To retrieve a list that may return <code>undefined</code> you should use <code>keystone.lists[key]</code>.  Using <code>.list()</code> will throw a <code>ReferenceError</code> if the arg is not a valid <code>List</code> or the <code>key</code> for a valid <code>List</code> </p> `  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/core/list.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"mount",html:'<h4 id="-mount-_mountpath_-_parentapp_-_events_-">.mount( [<em>mountPath</em>, <em>parentApp</em>, <em>events</em>] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>mountPath</strong> <em>{String}</em>  - <em>Optional</em> Folder to mount Keystone as a sub-app<br><em>@param</em> <strong>parentApp</strong> <em>{Express()}</em>  - <em>Optional</em> Express app<br><em>@param</em> <strong>events</strong> <em>{...Function|Object}</em>  - <em>Optional</em> Object with onMount event or Function to run once mounted<br><em>@return</em> <strong>events.onMount()</strong> </p>\n</blockquote>\n<p>You can use <code>.mount()</code> for custom Express setups.<br><strong>mountPath</strong> is an optional path to mount Keystone under.<br><strong>parentApp</strong> will be your Express app.<br>The <strong>events</strong> parameter can be used to perform commands once Keystone has been mounted.<br>If <strong>events</strong> is a function it will get mapped to <code>{onMount: events}</code>.  </p>\n<pre><code class="lang-javascript">/* Mount Keystone as a sub-app */\n\nvar app = express(),\n    keystone = require(&#39;keystone&#39;),\n    server,\n    theEvents = require(&quot;events&quot;).EventEmitter;\n\n/**\n    Keystone supports the following options specifically for running in encapsulated mode (with no embedded server):  \n\n       - name\n       - port\n       - views\n       - view engine\n       - compress\n       - favico\n       - less\n       - static\n       - headless\n       - logger\n       - cookie secret\n       - session\n       - 404\n       - 500\n       - routes\n       - locals\n       - auto update\n       - app\n       - mongoose\n*/\n\nkeystone.init({ \n    app: app,\n});\n\ntheEvents.on(&#39;keystone ready&#39;,function() {\n    var server = app.listen(3000);\n    console.log(&#39;server started&#39;);\n});\n\nkeystone.mount(&#39;/content&#39;, app, {\n    onMount: function() {\n        //put your app&#39;s static content and error handling middleware here and start your server\n       theEvents.emit(&#39;keystone ready&#39;);\n    }\n});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/mount.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'
},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"options",html:'<h4 id="-options-options-">.options( options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>options</strong> <em>{Object}</em>  - An <strong>Object</strong> of key/value pairs to add to options.<br><em>@return</em> <strong>keystone._options</strong> </p>\n</blockquote>\n<p>Set multiple Keystone option/value pair.</p>\n<pre><code class="lang-javascript">keystone.options({test: value});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/options.js#L148-L174"> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"populateRelated",html:'<h4 id="-populaterelated-docs-relationships-callback-">.populateRelated( docs, relationships, callback )</h4>\n<blockquote>\n<p><em>@param</em> <strong>docs</strong> <em>{Array}</em>  - Array of documents<br><em>@param</em> <strong>relationships</strong> <em>{Array}</em>  - Array of ref paths to populate<br><em>@param</em> <strong>callback</strong> <em>{Function}</em>  - Callback function on done or error<br><em>@return</em> <strong>callback</strong> </p>\n</blockquote>\n<p>Populate the related fields for an Array of docs.  </p>\n<p class="caution-note">This is currently highly inefficient and should only be used in development, or for small data sets. There are lots of things that can be done to improve performance... later.</p>\n\n<pre><code class="lang-javascript">keystone.populateRelated(docs,[&#39;owner&#39;,&#39;memberOf&#39;],function() {\n    // docs are populated\n});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/populateRelated.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"prefixModel",html:'<h4 id="-prefixmodel-key-">.prefixModel( key )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em>  - collection name<br><em>@return</em> <strong>this</strong> </p>\n</blockquote>\n<p>Create proper model collection name with or without prefix. </p>\n<p><div class="code-header addGitHubLink" data-file="index.js#L96-L104">  &nbsp;  </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"redirect",html:'<h4 id="-redirect-params-">.redirect( ...params )</h4>\n<blockquote>\n<p><em>@param</em> <strong>params</strong> <em>{...String|Object}</em>  - String or Object of redirects<br><em>@return</em> <strong>callback events</strong> </p>\n</blockquote>\n<p>Adds one or more redirections (urls that are redirected when no matching routes are found, before treating the request as a 404)</p>\n<pre><code class="lang-javascript">keystone.redirect(&#39;/old-route&#39;, &#39;new-route&#39;);\n\nkeystone.redirect({\n    &#39;old-route&#39;: &#39;new-route&#39;\n});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/redirect.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"render",html:'<h4 id="-render-req-res-view-ext-">.render( req, res, view, ext )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  -  Express req object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  -  Express res object<br><em>@param</em> <strong>view</strong> <em>{String}</em>  -  View to render<br><em>@param</em> <strong>ext</strong> <em>{Object}</em>  -  extend the locals object<br><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p>Internal method to render a view</p>\n<p><div class="code-header addGitHubLink" data-file="lib/core/render.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"routes",html:'<h4 id="-routes-app-">.routes( app )</h4>\n<blockquote>\n<p><em>@param</em> <strong>app</strong> <em>{Express()}</em>  - Express app instance<br><em>@return</em> <strong>this</strong> </p>\n</blockquote>\n<p>Adds bindings for the keystone routes</p>\n<pre><code class="lang-javascript">var app = express();\napp.use(...); // middlewareroutes, routes, etc. should come before keystone is mounted / started\nkeystone.routes(app);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/routes.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"set",html:'<h4 id="-set-key-value-">.set( key, value )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em>  - Key of the option you want to set<br><em>@param</em> <strong>value</strong> <em>{...String|Object|Function|Array}</em>  - Can be any valid <strong>Object</strong> value<br><em>@return</em> <strong>this</strong> </p>\n</blockquote>\n<p>Set a Keystone option/value pair.</p>\n<pre><code class="lang-javascript">keystone.set(&#39;mongo&#39;,&#39;mongodb://localhost/keystone&#39;);\n\nkeystone.set(&#39;custom key&#39;,{key1:&#39;key1&#39;});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/options.js#L41-L145"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"start",html:'<h4 id="-start-_events_-">.start( [<em>events</em>] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>events</strong> <em>{...Function|Object}</em>  - Function or Object of events<br><em>@return</em> <strong>callback events</strong> </p>\n</blockquote>\n<p>Start the Keystone server.  You can work with the events in the example.</p>\n<pre><code class="lang-javascript">keystone.start({\n    onMount: function() {\n\n    },\n    onStart: function() {\n\n    },\n    onHttpServerCreated: function() {\n\n    },\n    onHttpsServerCreated: function() {\n\n    },\n    onSocketServerCreated: function() {\n\n    },\n});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/start.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"static",html:'<h4 id="-static-app-">.static ( app )</h4>\n<blockquote>\n<p><em>@param</em> <strong>app</strong> {Object} - Express app</p>\n</blockquote>\n<p>Legacy Attach Mechanisms </p>\n<p><div class="code-header addGitHubLink" data-file="index.js#L128-L133"> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"utils",html:'<h4 id="-utils">.utils</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong> </p>\n</blockquote>\n<p><div class="code-header"> <h4>Expose <code>keystone-utils</code></h4></div><pre class=" language-javascript"><code class="language-javascript">Keystone.utils = require(&#39;keystone-utils&#39;);</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="index.js#L154"> &nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"version",html:'<h4 id="-version">.version</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong> {Number} </p>\n</blockquote>\n<p>Current version</p>\n<p><div class="code-header addGitHubLink" data-file="index.js#L236-L242"> &nbsp;  </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"keystone",header:"Keystone Class",menuHeader:"keystone",name:"wrapHTMLError",html:'<h4 id="-wraphtmlerror-title-_err_-">.wrapHTMLError( title, [<em>err</em>] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>title</strong> <em>{String}</em>  - Error title<br><em>@param</em> <strong>err</strong> <em>{String}</em>  - <em>Optional</em> Error message<br><em>@return</em> <strong>html</strong> </p>\n</blockquote>\n<p>Wraps an error in simple HTML to be sent as a response to the browser</p>\n<pre><code class="lang-javascript">var html = keystone.wrapHTMLError(&#39;Credential Error&#39;,&#39;Please &lt;a href=&quot;/keystone/signin&quot;&gt;login&lt;/a&gt; to view this page&#39;);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/core/wrapHTMLError.js"> <a href="#" class="loadCode"> code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Classes/Keystone.md",header:"Keystone Class",menuHeader:"keystone"},content:{list:[{keys:"content",header:".content Class",menuHeader:"keystone.content",main:"content",html:'<h4 id="keystone-content-">Keystone.content(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/content/index.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"content",header:".content Class",menuHeader:"keystone.content",name:"editable",html:'<h4 id="-content-editable-user-options-">.content.editable( user, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>user</strong> <em>{Object}</em>  - user object<br><em>@param</em> <strong>options</strong> <em>{Object}</em><br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Outputs client-side editable data for content management.  </p>\n<p>Called automatically when pages are added.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/index.js#L196-L233"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"content",header:".content Class",menuHeader:"keystone.content",name:"fetch",html:'<h4 id="-content-fetch-page-callback-">.content.fetch( page, callback )</h4>\n<blockquote>\n<p><em>@param</em> <strong>page</strong> <em>{String}</em><br><em>@param</em> <strong>callback</strong> <em>{Function}</em><br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Loads page content by page key (optional).</h4>If page key is not provided, returns a hash of all page contents in the database.</div><pre class=" language-javascript"><code class="language-javascript">keystone.content.fetch(&#39;home&#39;, function(err, content) { ... });</code></pre> </p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/index.js#L15-L82"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"content",header:".content Class",menuHeader:"keystone.content",name:"initModel",html:'<h4 id="-content-initmodel-">.content.initModel( )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>      </p>\n</blockquote>\n<p>Ensures the Mongoose model for storing content is initialised.  </p>\n<p>Called automatically when pages are added.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/index.js#L166-L194"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"content",header:".content Class",menuHeader:"keystone.content",name:"page",html:'<h4 id="-content-page-key-page-">.content.page( key, page )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em><br><em>@param</em> <strong>page</strong> <em>{Object}</em><br><em>@api</em> <strong>private</strong>     </p>\n</blockquote>\n<p>Registers a page. Should not be called directly, use <code>.content.Page.register()</code> instead.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/index.js#L131-L164"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"content",header:".content Class",menuHeader:"keystone.content",name:"store",html:'<h4 id="-content-store-page-content-callback-">.content.store( page, content, callback )</h4>\n<blockquote>\n<p><em>@param</em> <strong>page</strong> <em>{String}</em><br><em>@param</em> <strong>content</strong> <em>{Object}</em><br><em>@param</em> <strong>callback</strong> <em>{Function}</em><br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Sets page content by page key.</h4>Merges content with existing content.</div><pre class=" language-javascript"><code class="language-javascript">keystone.content.store(&#39;home&#39;, { title: &#39;Welcome&#39; }, function(err) { ... });</code></pre> </p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/index.js#L84-L129"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Classes/Content.md",header:".content Class",menuHeader:"keystone.content"},contentPage:{list:[{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",main:"contentPage",html:'<h4 id="keystone-content-page-key-options-">Keystone.content.Page( key, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong>  {String}<br><em>@param</em> <strong>options</strong>  {Options}<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"add",html:'<h4 id="-content-page-add-fields-">.content.Page.add( fields )</h4>\n<blockquote>\n<p><em>@param</em> <strong>fields</strong> <em>{Object}</em><br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L73-L124"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"clean",html:'<h4 id="-content-page-clean-data-">.content.Page.clean( data )</h4>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> <em>{Object}</em><br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Cleans a data structure so only the defined fields are present.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L181-L197"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"get",html:'<h4 id="-content-page-get-key-">.content.Page.get( key )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em><br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Gets page options</h4></div><pre class=" language-javascript"><code class="language-javascript"> page.get(&#39;test&#39;) // returns the &#39;test&#39; value\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L59-L69"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"name",html:'<h4 id="-content-page-name">.content.Page.name</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.get(&#39;name&#39;) || this.set(&#39;name&#39;, utils.keyToLabel(this.key));</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L29-L33"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"populate",html:'<h4 id="-content-page-populate-data-">.content.Page.populate( data )</h4>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> <em>{Object}</em><br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Populates a data structure based on defined fields</p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L145-L161"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"register",html:'<h4 id="-content-page-register-">.content.Page.register(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Registers the page with Keystone.</h4></div><pre class=" language-javascript"><code class="language-javascript">var homePage = new keystone.content.Page(&#39;home&#39;);\n// ...\nhomePage.register();</p>\n<pre><code>// later...\nvar homePage = keystone.content.page(&#39;home&#39;);\n</code></pre><p></code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L59-L69"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"set",html:'<h4 id="-content-page-set-key-value-">.content.Page.set( key, value )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em><br><em>@param</em> <strong>value</strong> <em>{Array|Function|Object|String}</em><br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Sets page options.</h4></div><pre class=" language-javascript"><code class="language-javascript">page.set(&#39;test&#39;, value) // sets the &#39;test&#39; option to <code>value</code></code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L35-L56"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"contentPage",header:".content.Page Class",menuHeader:"keystone.content.Page",name:"validate",html:'<h4 id="-content-page-validate-data-">.content.Page.validate( data )</h4>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> <em>{Object}</em><br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Validates a data structure based on defined fields.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/content/page.js#L163-L179"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Classes/ContentPage.md",header:".content.Page Class",menuHeader:"keystone.content.Page"},contentType:{list:[{keys:"contentType",header:".content.Type Class",menuHeader:"keystone.content.Type",main:"contentType",html:'<h4 id="keystone-content-type-path-options-">Keystone.content.Type( path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>path</strong>  {String}<br><em>@param</em> <strong>options</strong>  {Options}<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p class="warning-note">TODO</p>\n\n<p><div class="code-header addGitHubLink" data-file="lib/content/type.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Classes/ContentType.md",header:".content.Type Class",menuHeader:"keystone.content.Type"},email:{list:[{keys:"email",header:".Email Class",menuHeader:"keystone.email",main:"email",html:'<h4 id="new-keystone-email-options-">new Keystone.Email( options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>options</strong> <em>{...String|Object}</em><br><em>@return</em> <strong>this</strong>     </p>\n</blockquote>\n<p>Once created, emails can be sent with Mandrill, or rendered for viewing.   </p>\n<p class="api-note">Passing a <strong>String</strong> will set <code>templateName</code> and use <a href="#email-defaults"><code>Email.defaults</code></a>.</p>\n<p class="caution-note"> Requires setting Keystone option <code>emails</code>  to render.  <br />Requires setting either <code>options.mandrill</code> or Keystone option <code>mandrill api key</code>  to send.   </p>    \n\n<p><strong> <code>options</code> </strong>:   </p>\n<ul>\n<li><strong>templateName</strong> - The name of the template to render.  Default use should be the name of a jade template file or directory. Required if not using <code>templateMandrillName</code>.   </li>\n<li><strong>templateExt</strong> - The extension name of our template file.  A template must be available at <code>templateName.templateExt</code> or <code>templateName/email.templateExt</code>.  </li>\n<li><strong>templateEngine</strong> - The engine to use to render the email html.  Defaults to <code>require(&#39;jade&#39;)</code>  </li>\n<li><strong>templateBasePath</strong> - Base path to load email template files.   </li>\n<li><strong>templateCompile</strong> - A custom template compiler.    Use in conjunction with <code>templateRender</code>.  <pre><code class="lang-javascript">// example for nunjucks  \noptions.templateCompile: function(engine, contents, opts, path) {\n  return engine.compile(contents, opts, path); //calling compile() on the nunjucks engine, and returning the compiled template\n},\n</code></pre>\n</li>\n<li><strong>templateRender</strong> - A custom renderer function.  Use in conjunction with <code>templateCompile</code>.  <pre><code class="lang-javascript">// example for nunjucks  \noptions.templateRender: function(template, locals) {\n  return template.render(locals); //calling the nunjucks compiled template render()\n},\n</code></pre>\n</li>\n<li><strong>templateMandrillName</strong> - Name of a Mandrill template to use to render emails.    </li>\n<li><strong>templateMandrillContent</strong> - An <strong>Array</strong> of content blocks for a Mandrill template. <pre><code class="lang-javascript">options.templateMandrillContent = [\n  {\n      &quot;name&quot;: &quot;header&quot;,\n      &quot;content&quot;: &quot;&lt;h2&gt;&quot; + keystone.get(&#39;name&#39;) + &quot;&lt;/h2&gt;&quot;\n  }\n]\n</code></pre>\n</li>\n</ul>\n<div class="code-header"> <h4>Create a new Email instance and send an Email</h4></div><pre class=" language-javascript"><code class="language-javascript">\n    var Email = new keystone.Email(&#39;welcome&#39;);\n    Email.send({\n        subject:&#39;Your  account information&#39;,\n        tags:&#39;new user&#39;,\n        to:newUser.realEmail,\n        fromName:&#39;Account Team&#39;,\n        fromEmail:&#39;support@domain.tld&#39;,\n        enquiry: {\n            _: require(&#39;lodash&#39;),\n            name:newUser.name.first+&#39;  &#39;+newUser.name.last,\n            email:newUser.realEmail,\n            html:&#39;&#39;\n        }\n    },function(err,info){\n        //console.log(err,&#39;New user email sent&#39;,info);\n    });\n</code></pre>\n\n<div class="contextual-note">\n<h4> Explanation</h4> \n<p>We pass <code>&#39;welcome&#39;</code> as our template name. <br />Since we set <code>keystone.init({ ..., &#39;emails&#39;: &#39;templates/emails&#39;})</code> the class looked in <code>/templates/emails/welcome.jade</code> and <code>/templates/emails/welcome/email.jade</code> for the template to use to render the email.</p>\n</div>  \n\n\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L125-L170"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"buildOptions",html:'<h4 id="email-buildoptions-err-options-_callback_-">Email.buildOptions( err, options [, <em>callback</em>] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>err</strong> <em>{Object}</em>  - Error<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - Input options<br><em>@param</em> <strong>callback</strong> <em>{Object}</em>  - callback(err, message)<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Build an options object.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L379-L535"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"compileTemplate",html:'<h4 id="email-compiletemplate-_callback_-">Email.compileTemplate(  <em>callback</em>  )</h4>\n<blockquote>\n<p><em>@param</em> <strong>callback</strong> <em>{Object}</em>  - callback(err, email)<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Ensures the template for the email has been compiled</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L309-L342"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"defaults",html:'<h4 id="email-defaults">Email.defaults</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>Email.defaults </h4></div><pre class=" language-javascript"><code class="language-javascript">{\n    templateExt: &#39;jade&#39;,\n    templateEngine: require(&#39;jade&#39;),\n    templateBasePath: path.normalize(path.join(__dirname, &#39;..&#39;, &#39;templates&#39;, &#39;helpers&#39;, &#39;emails&#39;)),\n    mandrill: {\n        track_opens: true,\n        track_clicks: true,\n        preserve_recipients: false,\n        inline_css: true\n    },\n    // Mandrill template\n    templateMandrillName: null,\n    templateForceHtml: false // Force html render\n}\n</code></pre> </p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L12-L25"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"getEmailsPath",html:'<h4 id="email-getemailspath-">Email.getEmailsPath(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Return the value of <code>keystone.get(&#39;emails&#39;);</code>.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L58-L64"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"loadTemplate",html:'<h4 id="email-loadtemplate-_callback_-">Email.loadTemplate(  <em>callback</em>  )</h4>\n<blockquote>\n<p><em>@param</em> <strong>callback</strong> <em>{Object}</em>  - callback(err, email)<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Loads the template. Looks for <code>templateName.templateExt</code>, followed by <code>templateName/email.templateExt</code></p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L273-L307"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"prepare",html:'<h4 id="email-prepare-options-_callback_-">Email.prepare( options [, <em>callback</em> ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>options</strong> <em>{Object}</em>  - locals<br><em>@param</em> <strong>callback</strong> <em>{Object}</em>  - callback(err, message)<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Ensures the template for the email has been compiled</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L344-L377"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"render",html:'<h4 id="email-render-locals-_callback_-">Email.render( locals [, <em>callback</em> ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>locals</strong> <em>{Object}</em>  - object of local variables provided to the template<br><em>@param</em> <strong>callback</strong> <em>{Object}</em>  - callback(err, email)  </p>\n</blockquote>\n<p>Renders the email and passes it to the callback. Used by <code>Email.send()</code> but can also be called directly to generate a preview.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L172-L270"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"renderMandrill",html:'<h4 id="email-rendermandrill-_locals_-options-_callback_-">Email.renderMandrill( [<em>locals</em> ,] options [, <em>callback</em> ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>locals</strong> <em>{Object}</em>  - backwards compatibility<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - locals options object<br><em>@param</em> <strong>callback</strong> <em>{Object}</em>  - callback(err, info)      </p>\n</blockquote>\n<p>Renders a Mandrill template</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L637-L689"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"send",html:'<h4 id="email-send-_locals-_-options-_callback_-">Email.send( [ <em>locals </em> ,] options [, <em>callback</em> ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>locals</strong> <em>{Object}</em>  - backwards compatibility<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - passed to <code>Email.render()</code><br><em>@param</em> <strong>callback</strong> <em>{Object}</em>  - callback(err, info)    </p>\n</blockquote>\n<p class="api-note"> For compatibility with older implementations, send supports providing locals and options objects as the first and second arguments, and the callback as the third.  Typical use case should be <code>.send( options, callback )</code></p>\n\n<p> Options:</p>\n<ul>\n<li><strong>mandrill</strong> - Initialised Mandrill API instance</li>\n<li><strong>templateMandrillName</strong> - the immutable name or slug of a template that exists in the user&#39;s account. For backwards-compatibility, the template name may also be used but the immutable slug is preferred.  Validation: required.  </li>\n<li><strong>templateMandrillContent</strong> - an <strong>Array</strong> of template content to send. Adds to existing blocks set on Instance creation.  Each item in the array should be an object with two keys - name: the name of the content block to set the content for, and content: the actual content to put into the block<pre><code class="lang-javascript"> options.templateMandrillContent = [\n     {\n         &quot;name&quot;: &quot;header&quot;,\n         &quot;content&quot;: &quot;&lt;h2&gt;&quot; + keystone.get(&#39;name&#39;) + &quot;&lt;/h2&gt;&quot;\n     }\n ]\n</code></pre>\n</li>\n<li><strong>tags</strong> - an array of <strong>Strings</strong> to tag the message with. Stats are accumulated using tags, and only the first 100 are stored, so this should not be unique or change frequently. Tags should be 50 characters or less. Any tags starting with an underscore are reserved for internal use and will cause errors.   </li>\n<li><strong>html</strong> - the full HTML content to be sent </li>\n<li><strong>attachments</strong> - an array of supported attachments to add to the message  <pre><code class="lang-javascript"> options.attachments = [\n     {\n         type: MIME_TYPE,\n         name: FILE_NAME,\n         content: BASE64_STRING\n     },\n ]\n</code></pre>\n</li>\n<li><strong>to</strong> - Object / String or Array of Objects / Strings to send to, e.g.  <pre><code class="lang-javascript">[&#39;email2@domain.tld&#39;, { email: &#39;email@domain.tld&#39; }]\n{ email: &#39;email4@domain.tld&#39; }\n&#39;email0@domain.tld&#39;\n</code></pre>\n</li>\n<li><strong>from</strong> - <code>{ name: &#39;Ted&#39;, email: &#39;ted@domain.tld&#39; }</code> or <code>&#39;ted@domain.tld&#39;</code>  </li>\n<li><strong>fromName</strong> - Name to send from  </li>\n<li><strong>fromEmail</strong> - Email address to send from</li>\n<li><strong>mandrillOptions</strong> - any other <a href="https://mandrillapp.com/api/docs/messages.JSON.html#method=send-template" target="_blank"> Mandrill <strong>message</strong> Option</a> <pre><code class="lang-javascript"> options.mandrillOptions = {\n     // whether or not to turn on open tracking for the message\n     track_opens: true,\n     // whether or not to turn on click tracking for the message\n     track_clicks: true, \n     // whether or not to expose all recipients in the &quot;To&quot; header for each email\n     preserve_recipients: false, \n     // whether or not to automatically inline all CSS styles provided \n     // in the message HTML - only for HTML documents less than 256KB in size\n     inline_css: true \n },\n</code></pre>\n</li>\n</ul>\n<p class="caution-note"> You must include an  email address with either <code>from</code> or <code>fromEmail</code> </p>\n\n<div class="code-header"> <h4>Send an email</h4></div><pre class=" language-javascript"><code class="language-javascript">\n     var Email = new keystone.Email({ \n                templateMandrillName: &#39;welcome&#39;,\n                templateMandrillContent: [\n                    {\n                        &quot;name&quot;: &quot;header&quot;,\n                        &quot;content&quot;: &quot;<h2>&quot; + keystone.get(&#39;name&#39;) + &quot;</h2>&quot;\n                    }\n                ]\n            });\n\n            Email.send({\n                to: req.body.email,\n                from: {\n                    name: &#39;from name&#39;,\n                    email: &#39;from@domain.tld&#39;\n                },\n                subject: &#39;subject&#39;\n                templateMandrillContent: [\n                    {\n                        &quot;name&quot;: &quot;main&quot;,\n                        &quot;content&quot;: &quot;custom html for main block&quot;\n                    }\n                ],\n                mandrillOptions: {\n                    track_opens: false,\n                    track_clicks: false\n                },\n            }, \n            function(err, info) {\n                //console.log(err, info);\n            });\n</code></pre>\n<div class="contextual-note">\n<h4> Explanation</h4> \n<p>We defined a template at Mandrill and set <code>templateMandrillName: &#39;welcome&#39;</code>. This will bypass <code>Email.render()</code> and send template information.  <br /> We add <code>templateMandrillContent</code> template blocks in both the <strong>Email</strong> constructor and in <code>.send</code>.  </p>\n</div> \n\n\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L537-L630"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'
},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"templateCSSMethods",html:'<h4 id="email-templatecssmethods-shadecolor-color-percent-">Email.templateCSSMethods.shadeColor( color, percent )</h4>\n<blockquote>\n<p><em>@param</em> <strong>color</strong> {String}<br><em>@param</em> <strong>percent</strong> {Number}<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>return a shaded color.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L114-L121"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"email",header:".Email Class",menuHeader:"keystone.email",name:"templateCache",html:'<h4 id="email-templatecache">Email.templateCache</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>A cache of compiled templates organi(sz)ed by name.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/email.js#L692"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Classes/Email.md",header:".Email Class",menuHeader:"keystone.email"},field:{list:[{keys:"field",header:".Field super",menuHeader:"keystone.field",main:"field",html:'<h4 id="keystone-field-list-path-options-">Keystone.Field( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p><p class="contextual-note"> Extended by <code>Field.Types</code> Classes, methods should not be used directly. </p></p>\n<p><div class="code-header" > <h4>Extend</h4>file named customType.js</div><pre class=" language-javascript "><code  class=" language-javascript ">var keystone = require(&#39;keystone&#39;);\nvar util = require(&#39;util&#39;);</p>\n<p>/**</p>\n<ul>\n<li>Custom FieldType Constructor</li>\n<li>@extends Field</li>\n<li><p>@api public\n*/\nfunction custom(list, path, options) {\n // add your options to this</p>\n<p> // call super<em>\n custom.super</em>_.call(this, list, path, options);\n}\n// inherit the \nutil.inherits(custom, keystone.Field);</p>\n</li>\n</ul>\n<p>/<em> override or add methods </em>/\ncustom.prototype.addToSchema = function() {\n    // how to add to schema</p>\n<p>}</p>\n<p>/<em> Export Field Type </em>/\nexports = module.exports = custom;\n</code></pre> </p>\n<p><div class="code-header" > <h4>main file</div><pre class=" language-javascript "><code  class=" language-javascript ">var keystone = require(&#39;keystone&#39;);\nObject.defineProperty(keystone.Field.Types, &#39;myField&#39;, { get: function() {\n    return require(./customType.js&#39;);\n} });</p>\n<p></code></pre> </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"addToSchema",html:'<h4 id="field-addtoschema-">Field.addToSchema(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Default method to register the field on the List&#39;s Mongoose Schema.  </p>\n<p class="caution-note">Overridden by some fieldType Classes.</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L218-L228"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"bindUnderscoreMethods",html:'<h4 id="field-bindunderscoremethods-methods-">Field.bindUnderscoreMethods( methods )</h4>\n<blockquote>\n<p><em>@param</em> <strong>methods</strong> {Array}<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Automatically bind underscore methods specified by the _underscoreMethods property.</p>\n<p class="note">Will always include the &#39;update&#39; method</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L230-L246"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"col",html:'<h4 id="field-col-">Field.col(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.col\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L209"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"collapse",html:'<h4 id="field-collapse-">Field.collapse(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.collapse\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L214"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"dependsOn",html:'<h4 id="field-dependson-">Field.dependsOn(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.dependsOn\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L216"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"format",html:'<h4 id="field-format-item-">Field.format( item )</h4>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Default method to format the field value for display.  </p>\n<p class="caution-note">Overridden by some fieldType Classes.</p>\n\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L127-L154"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"getData",html:'<h4 id="field-getdata-data-">Field.getData( data )</h4>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Gets the field&#39;s data from an Item, as used by the React components</p>\n<p><div class="code-header"> <h4>Return</h4></div><pre class=" language-javascript"><code class="language-javascript">return item.get(this.path);\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L131-L136"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"getDefaultValue",html:'<h4 id="field-getdefaultvalue-">Field.getDefaultValue(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Gets default value for the field, based on the option or default for the type</p>\n<p><div class="code-header"> <h4>Return</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.default\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L124-L129"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"getOptions",html:'<h4 id="field-getoptions-">Field.getOptions(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Gets the options for the Field, as used by the React components.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L83-L107"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"getPreSaveWatcher",html:'<h4 id="field-getpresavewatcher-">Field.getPreSaveWatcher(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p>Field watching implementation</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L138-L201"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"getSize",html:'<h4 id="field-getsize-">Field.getSize( )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Validates and returns the size of the field.<br>Defaults to deprecated &#39;width&#39; option.</p>\n<p><div class="code-header"> <h4>Return</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.__size\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L109-L122"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"getValueFromData",html:'<h4 id="field-getvaluefromdata-data-">Field.getValueFromData( data )</h4>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>private</strong>    </p>\n</blockquote>\n<p>Retrieves the value from an object, whether the path is nested or flattened.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L311-L318"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"hidden",html:'<h4 id="field-hidden-">Field.hidden(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.hidden\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L215"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"initial",html:'<h4 id="field-initial-">Field.initial(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.initial\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L206"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"isModified",html:'<h4 id="field-ismodified-item-">Field.isModified( item )</h4>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Default method to detect whether the field has been modified in an item.  </p>\n<p class="caution-note">Overridden by some fieldType Classes.</p>\n\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L270-L278"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"nocol",html:'<h4 id="field-nocol-">Field.nocol(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.nocol\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L211"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"noedit",html:'<h4 id="field-noedit-">Field.noedit(   )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.noedit\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L210"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"nofilter",html:'<h4 id="field-nofilter-">Field.nofilter(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.nofilter\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L213"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"nosort",html:'<h4 id="field-nosort-">Field.nosort(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.nosort\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L212"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"note",html:'<h4 id="field-note-">Field.note(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">\nreturn this.options.note\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L208"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"required",html:'<h4 id="field-required-">Field.required(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.options.required\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L207"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"size",html:'<h4 id="field-size-">Field.size(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> <h4>Getter</h4></div><pre class=" language-javascript"><code class="language-javascript">return this.getSize()\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L205"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"underscoreMethod",html:'<h4 id="field-underscoremethod-path-fn-">Field.underscoreMethod( path, fn )</h4>\n<blockquote>\n<p><em>@param</em> <strong>path</strong> {String} \n<em>@param</em> <strong>item</strong> {Function} \n<em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p>Adds a method to the underscoreMethods collection on the field&#39;s list, with a path prefix to match this field&#39;s path and bound to the document.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L248-L258"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"updateItem",html:'<h4 id="field-updateitem-item-data-">Field.updateItem( item, data )</h4>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@param</em> <strong>data</strong> {Object}<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object</p>\n<p class="caution-note">Overridden by some fieldType Classes.</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L297-L309"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"field",header:".Field super",menuHeader:"keystone.field",name:"validateInput",html:'<h4 id="field-validateinput-data-required-item-">Field.validateInput( data [, required, item ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object</p>\n<p class="caution-note">Overridden by some fieldType Classes.</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/Type.js#L280-L295"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Classes/Field.md",header:".Field super",menuHeader:"keystone.field"},fieldTypes:{list:[{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",main:"fieldTypes",html:'<h4 id="-field-types">.Field.Types</h4>\n<p>Returns an object of Keystone Field Types to work with.<br>Each Field Type inherits all the <code>Field</code> methods above.  </p>\n<p><p class="note">Any new or override methods for each Type are <span class="subMethod"> styled like so </span>. \n</p>\nField Type Classes are located at:<br><strong>/fields/types/<i>fieldtype</i>/<i>Fieldtype</i>Type.js</strong>  </p>\n<p>Each Field Type has React class constructors on top of their unique methods.</p>\n<h5 id="column-support">Column Support</h5>\n<p><strong>/fields/types/<i>fieldtype</i>/<i>Fieldtype</i>Columns.js</strong>  </p>\n<h5 id="field-html">Field HTML</h5>\n<p><strong>/fields/types/<i>fieldtype</i>/<i>Fieldtype</i>Field.js</strong>  </p>\n<h5 id="filters">Filters</h5>\n<p><strong>/fields/types/<i>fieldtype</i>/<i>Fieldtype</i>Filters.js</strong>  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/fieldTypes.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"AzureFile",html:'<h4 id="-field-types-azurefile-list-path-options-">.Field.Types.AzureFile( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._underscoreMethods = [&#39;format&#39;, &#39;uploadFile&#39;];  </p>\n<p>this._fixedSize = &#39;full&#39;;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/azurefile/AzureFileType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre>  </p>\n<p><span class="subMethod"> .Field.Types.AzureFile.azurefileconfig   </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Exposes the custom or keystone azure config settings.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/azurefile/AzureFileType.js#L67-L75">&nbsp; </div><pre class=" language-javascript hideCode api"></pre>  </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/azurefile/AzureFileType.js#L78-L173"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<pre><code class="lang-javascript">return item.get(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/azurefile/AzureFileType.js#L176-L184"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">return item.isModified(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/azurefile/AzureFileType.js#L187-L195">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object </p>\n<p class="warning-note"> TODO - will only return true</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/azurefile/AzureFileType.js#L198-L207"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object</p>\n<p class="warning-note"> TODO - will not return</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/azurefile/AzureFileType.js#L210-L218"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.uploadFile( item, file, update [, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>file</strong> {Object} - valid file object<br><em>@param</em> <strong>update</strong> {Boolean} - update or not<br><em>@param</em> <strong>callback</strong> {Function} - callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Uploads the file for this field.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/azurefile/AzureFileType.js#L221-L277"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.getRequestHandler( item, req [, paths, callback] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.action</code> in <code>req.body</code> (<code>clear</code> or <code>delete</code>)<br><code>field.paths.upload</code> in <code>req.files</code> (uploads the file to Azure)  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/azurefile/AzureFileType.js#L280-L320">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.AzureFile.handleRequest( item, req [, paths, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.AzureFile.getRequestHandler()</code>).  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/azurefile/AzureFileType.js#L323-L331"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Boolean",html:'<h4 id="-field-types-boolean-list-path-options-">.Field.Types.Boolean( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = Boolean;\nthis._properties = [&#39;indent&#39;];\nthis._fixedSize = &#39;full&#39;;\nthis.indent = (options.indent) ? true : false;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/boolean/BooleanType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre>  </p>\n<p><span class="subMethod"> .Field.Types.Boolean.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.    </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/boolean/BooleanType.js#L18-L29">&nbsp; </div><pre class=" language-javascript hideCode api"></pre>  </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Boolean.validateInput( data [, required ] ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid filter object<br><em>@param</em> <strong>required</strong> {Boolean} - (optional)<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Validates that a truthy value for this field has been provided in a data object.<br>Useful for checkboxes that are required to be true (e.g. agreed to terms and cond&#39;s).  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/boolean/BooleanType.js#L31-L41"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Boolean.updateItem( item, data ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@param</em> <strong>data</strong> {Object} - valid data value object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.<br>Only updates the value if it has changed.<br>Treats a falsy value or the string &quot;false&quot; as <code>false</code>, everything else as true.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/boolean/BooleanType.js#L176-L184"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"CloudinaryImage",html:'<h4 id="-field-types-cloudinaryimage-list-path-options-">.Field.Types.CloudinaryImage( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._underscoreMethods = [&#39;format&#39;];\nthis._fixedSize = &#39;full&#39;;\nthis._properties = [&#39;select&#39;, &#39;selectPrefix&#39;, &#39;autoCleanup&#39;, &#39;publicID&#39;, &#39;folder&#39;, &#39;filenameAsPublicID&#39;];\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimage/CloudinaryImageType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.CloudinaryImage.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimage/CloudinaryImageType.js#L56-L270"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImage.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<pre><code class="lang-javascript">return item.get(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimage/CloudinaryImageType.js#L273-L281"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImage.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">return item.isModified(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimage/CloudinaryImageType.js#L284-L292">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImage.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object </p>\n<p class="warning-note"> TODO - will only return true</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimage/CloudinaryImageType.js#L295-L304"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImage.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object </p>\n<p class="warning-note"> TODO - will not return</p>\n\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimage/CloudinaryImageType.js#L307-L329"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImage.getRequestHandler( item, req [, paths, callback] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.action</code> in <code>req.body</code> (<code>clear</code> or <code>delete</code>)<br><code>field.paths.upload</code> in <code>req.files</code> (uploads the image to cloudinary)  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimage/CloudinaryImageType.js#L332-L446">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImage.handleRequest( item, req [, paths, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.CloudinaryImage.getRequestHandler()</code>).  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimage/CloudinaryImageType.js#L449-L457"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'
},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"CloudinaryImages",html:'<h4 id="-field-types-cloudinaryimages-list-path-options-">.Field.Types.CloudinaryImages( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._underscoreMethods = [&#39;format&#39;];\nthis._fixedSize = &#39;full&#39;;\nthis._properties = [&#39;select&#39;, &#39;selectPrefix&#39;, &#39;autoCleanup&#39;, &#39;publicID&#39;, &#39;folder&#39;, &#39;filenameAsPublicID&#39;];\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimages/CloudinaryImagesType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.CloudinaryImages.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimages/CloudinaryImagesType.js#L51-L195"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImages.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<pre><code class="lang-javascript">return item.get(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimages/CloudinaryImagesType.js#L198-L208"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImages.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">return item.isModified(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimages/CloudinaryImagesType.js#L211-L220">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImages.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object </p>\n<p class="warning-note"> TODO - will only return true</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimages/CloudinaryImagesType.js#L223-L232"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImages.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object</p>\n<p class="warning-note"> TODO - will not return</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimages/CloudinaryImagesType.js#L235-L243"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImages.getRequestHandler( item, req [, paths, callback] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.action</code> in <code>req.body</code> (<code>clear</code> or <code>delete</code>)<br><code>field.paths.upload</code> in <code>req.files</code> (uploads the image to cloudinary)  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimages/CloudinaryImagesType.js#L246-L350">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.CloudinaryImages.handleRequest( item, req [, paths, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.CloudinaryImage.getRequestHandler()</code>).  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/cloudinaryimages/CloudinaryImagesType.js#L363-L371"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Code",html:'<h4 id="-field-types-code-list-path-options-">.Field.Types.Code( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._defaultSize = &#39;full&#39;;\nthis.height = options.height || 180;\nthis.lang = options.lang || options.language;\nthis.<em>properties = [&#39;editor&#39;, &#39;height&#39;, &#39;lang&#39;];\nthis.codemirror = options.codemirror || {};\nthis.editor = </em>.defaults(this.codemirror, { mode : this.lang });</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/code/CodeType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Code.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.    </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/code/CodeType.js#L23-L24">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Color",html:'<h4 id="-field-types-color-list-path-options-">.Field.Types.Color( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._underscoreMethods = [];\nthis._fixedSize = &#39;small&#39;;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/color/ColorType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Date",html:'<h4 id="-field-types-date-list-path-options-">.Field.Types.Date( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = Date;\nthis._underscoreMethods = [&#39;format&#39;, &#39;moment&#39;, &#39;parse&#39;];\nthis._fixedSize = &#39;medium&#39;;\nthis._properties = [&#39;formatString&#39;, &#39;yearRange&#39;, &#39;isUTC&#39;];\nthis.parseFormatString = options.parseFormat || &#39;YYYY-MM-DD&#39;;\nthis.formatString = (options.format === false) ? false : (options.format || &#39;Do MMM YYYY&#39;);\nthis.yearRange = options.yearRange;\nthis.isUTC = options.utc || false;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/date/DateType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Date.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/date/DateType.js#L27-L58"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Date.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/date/DateType.js#L60-L69"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Date.moment( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Returns a new <code>moment</code> object with the field value.    </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/date/DateType.js#L71-L78">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Date.parse( item )  </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Parses input using moment, sets the value, and returns the moment object.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/date/DateType.js#L80-L88">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Date.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Checks that a valid date has been provided in a data object.<br>An empty value clears the stored value and is considered valid.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/date/DateType.js#L90-L104"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Date.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/date/DateType.js#L106-L122"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"DateArray",html:'<h4 id="-field-types-datearray-list-path-options-">.Field.Types.DateArray( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = [Date];\nthis._defaultSize = &#39;medium&#39;;\nthis._underscoreMethods = [&#39;format&#39;];\nthis._properties = [&#39;formatString&#39;];\nthis.parseFormatString = options.parseFormat || &#39;YYYY-MM-DD&#39;;\nthis.formatString = (options.format === false) ? false : (options.format || &#39;Do MMM YYYY&#39;);</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datearray/DateArrayType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.DateArray.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datearray/DateArrayType.js#L38-L50"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.DateArray.validateInput( data [, required, item ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Checks that a valid array of dates has been provided in a data object.<br>An empty value clears the stored value and is considered valid.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datearray/DateArrayType.js#L52-L101"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.DateArray.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datearray/DateArrayType.js#L104-L133"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Datetime",html:'<h4 id="-field-types-datetime-list-path-options-">.Field.Types.Datetime( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">var parseFormats = [&#39;YYYY-MM-DD&#39;, &#39;YYYY-MM-DD h:m:s a&#39;, &#39;YYYY-MM-DD h:m a&#39;, &#39;YYYY-MM-DD H:m:s&#39;, &#39;YYYY-MM-DD H:m&#39;];</p>\n<p>...\nthis._nativeType = Date;\nthis._underscoreMethods = [&#39;format&#39;, &#39;moment&#39;, &#39;parse&#39;];\nthis._fixedSize = &#39;full&#39;;\nthis._properties = [&#39;formatString&#39;, &#39;isUTC&#39;];\nthis.typeDescription = &#39;date and time&#39;;\nthis.parseFormatString = options.parseFormat || parseFormats;\nthis.formatString = (options.format === false) ? false : (options.format || &#39;YYYY-MM-DD h:m:s a&#39;);\nthis.isUTC = options.utc || false;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datetime/DatetimeType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Datetime.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datetime/DatetimeType.js#L34"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Datetime.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datetime/DatetimeType.js#L35"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Datetime.moment( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Returns a new <code>moment</code> object with the field value.    </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datetime/DatetimeType.js#L36">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Datetime.parse( item )  </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Parses input using moment, sets the value, and returns the moment object.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datetime/DatetimeType.js#L37">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Datetime.getInputFromData( data ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Get the value from a data object; may be simple or a pair of fields</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datetime/DatetimeType.js#L39-L48"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Datetime.validateInput( data [, required, item ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Checks that a valid date has been provided in a data object<br>An empty value clears the stored value and is considered valid.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datetime/DatetimeType.js#L50-L64"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Datetime.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/datetime/DatetimeType.js#L66-L82"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Email",html:'<h4 id="-field-types-email-list-path-options-">.Field.Types.Email( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._underscoreMethods = [&#39;gravatarUrl&#39;];\nthis.typeDescription = &#39;email address&#39;;\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/email/EmailType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Email.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/email/EmailType.js#L21"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Email.gravatarUrl( item, size, defaultImage, rating ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@param</em> <strong>size</strong> {Number} - size of images ranging from 1 to 2048 pixels, square<br><em>@param</em> <strong>defaultImage</strong> {String}<br><em>@param</em> <strong>rating</strong> {String}<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Get the value from a data object; may be simple or a pair of fields</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/email/EmailType.js#L23-L43"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Email.validateInput( data [, required, item ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a valid email has been provided in a data object</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/email/EmailType.js#L45-L55"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Email.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.<br>Ensures that the email address is lowercase.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/email/EmailType.js#L57-L69"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Embedly",html:'<h4 id="-field-types-embedly-list-path-options-">.Field.Types.Embedly( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p class="caution-note">Requires the option <code>from</code> to refer to another path in the schema that provides the url to expand.</p>\n\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">\nthis._underscoreMethods = [&#39;reset&#39;];\nthis._fixedSize = &#39;full&#39;;</p>\n<p>this.fromPath = options.from;\nthis.embedlyOptions = options.options || {};</p>\n<p>// TODO: implement filtering, usage disabled for now\noptions.nofilter = true;</p>\n<p></code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/embedly/EmbedlyType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre>  </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Embedly.addToSchema(  ) </span>      </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.    </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/embedly/EmbedlyType.js#L63-L182"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Embedly.reset( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Resets the value of the field</h4></div><pre class=" language-javascript"><code class="language-javascript">{\n    exists: false,\n    type: null,\n    title: null,\n    url: null,\n    width: null,\n    height: null,\n    version: null,\n    description: null,\n    html: null,\n    authorName: null,\n    authorUrl: null,\n    providerName: null,\n    providerUrl: null,\n    thumbnailUrl: null,\n    thumbnailWidth: null,\n    thumbnailHeight: null\n}</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/embedly/EmbedlyType.js#L185-L210"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Embedly.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<pre><code class="lang-javascript">return item.get(this.paths.html);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/embedly/EmbedlyType.js#L213-L221"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Embedly.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">// Assume that it has changed if the url is different\nreturn item.isModified(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/embedly/EmbedlyType.js#L224-L233">&nbsp; </div><pre class=" language-javascript hideCode api"></pre></p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Embedly.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p class="caution-note">Embedly fields do not incur validation and will always return <code>true</code>. </p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/embedly/EmbedlyType.js#L236-L245"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Embedly.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.    </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/embedly/EmbedlyType.js#L248-L275"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"GeoPoint",html:'<h4 id="-field-types-geopoint-list-path-options-">.Field.Types.GeoPoint( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._fixedSize = &#39;medium&#39;;</p>\n<p>// TODO: implement filtering, usage disabled for now\noptions.nofilter = true;</p>\n<p></code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/geopoint/GeoPointType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.GeoPoint.addToSchema(  ) </span>      </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.<br>Adds a 2dsphere indexed lat/lng pair.      </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/geopoint/GeoPointType.js#L34-L45"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.GeoPoint.getData( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Gets the field&#39;s data from an Item, as used by the React components</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/geopoint/GeoPointType.js#L48-L55"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.GeoPoint.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<pre><code class="lang-javascript">return item.get(this.paths.html);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/geopoint/GeoPointType.js#L58-L69"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.GeoPoint.validateInput( data [, required, item ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/geopoint/GeoPointType.js#L72-L93"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.GeoPoint.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.    </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/geopoint/GeoPointType.js#L96-L130"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'
},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Html",html:'<h4 id="-field-types-html-list-path-options-">.Field.Types.Html( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._defaultSize = &#39;full&#39;;\nthis.wysiwyg = options.wysiwyg || false;\nthis.height = options.height || 180;\nthis._properties = [&#39;wysiwyg&#39;, &#39;height&#39;];</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/html/HtmlType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre>  </p>\n<p><span class="subMethod"> .Field.Types.Html.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.    </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/html/HtmlType.js#L21">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Key",html:'<h4 id="-field-types-key-list-path-options-">.Field.Types.Key( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._defaultSize = &#39;medium&#39;;\nthis.separator = options.separator || &#39;-&#39;;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/key/KeyType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre>  </p>\n<p><span class="subMethod"> .Field.Types.Key.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.    </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/key/KeyType.js#L20">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Key.generateKey( str ) </span>     </p>\n<blockquote>\n<p><em>@param</em> <strong>str</strong> {String}<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Generates a valid key from a string</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/key/KeyType.js#L22-L27"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Key.validateInput( data [, required, item ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Checks that a valid key has been provided in a data object</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/key/KeyType.js#L29-L39"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Key.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.<br>Ensures that the email address is lowercase.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/key/KeyType.js#L41-L53"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"LocalFile",html:'<h4 id="-field-types-localfile-list-path-options-">.Field.Types.LocalFile( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._underscoreMethods = [&#39;format&#39;, &#39;uploadFile&#39;];\nthis._fixedSize = &#39;full&#39;;</p>\n<p>// TODO: implement filtering, usage disabled for now\noptions.nofilter = true;\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfile/LocalFileType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.LocalFile.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfile/LocalFileType.js#L65-L167"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.\nDelegates to the options.format function if it exists.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfile/LocalFileType.js#L170-L185"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.hasFormatter(  ) </span> </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has formatter function in <code>options.format</code></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfile/LocalFileType.js#L188-L196">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.href( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Return the public href for the stored file  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfile/LocalFileType.js#L199-L209">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">return item.isModified(this.paths.path);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfile/LocalFileType.js#L212-L220">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p class="warning-note"> TODO (if needed) - will only return true</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfile/LocalFileType.js#L295-L304"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p class="warning-note"> TODO - direct updating of data (not via upload) - will not currently return</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfile/LocalFileType.js#L235-L243"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.uploadFile( item, file, update [, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>file</strong> {Object} - valid file object<br><em>@param</em> <strong>update</strong> {Boolean} - update or not<br><em>@param</em> <strong>callback</strong> {Function} - callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Uploads the file for this field.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfile/LocalFileType.js#L246-L304"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.getRequestHandler( item, req [, paths, callback] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.action</code> in <code>req.body</code> (<code>clear</code> or <code>delete</code>)<br><code>field.paths.upload</code> in <code>req.files</code> (uploads the image to localfile)  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfile/LocalFileType.js#L307-L348">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFile.handleRequest( item, req [, paths, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.LocalFile.getRequestHandler()</code>).  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfile/LocalFileType.js#L351-L359"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre></p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"LocalFiles",html:'<h4 id="-field-types-localfiles-list-path-options-">.Field.Types.LocalFiles( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._underscoreMethods = [&#39;format&#39;, &#39;uploadFile&#39;];\nthis._fixedSize = &#39;full&#39;;</p>\n<p>// TODO: implement filtering, usage disabled for now\noptions.nofilter = true;\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfiles/LocalFilesType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.LocalFiles.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfiles/LocalFilesType.js#L67-L193"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.\nDelegates to the options.format function if it exists.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfiles/LocalFilesType.js#L196-L214"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.hasFormatter(  ) </span> </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has formatter function in <code>options.format</code></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfiles/LocalFilesType.js#L217-L225">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.href( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Return the public href for a single stored file  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfiles/LocalFilesType.js#L228-L238">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">return item.isModified(this.paths.path);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfiles/LocalFilesType.js#L241-L249">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p class="warning-note"> TODO (if needed) - will only return true</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfiles/LocalFilesType.js#L252-L261"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p class="warning-note"> TODO - direct updating of data (not via upload) - will not currently return</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfiles/LocalFilesType.js#L264-L272"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.uploadFiles( item, file, update [, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>file</strong> {Object} - valid file object<br><em>@param</em> <strong>update</strong> {Boolean} - update or not<br><em>@param</em> <strong>callback</strong> {Function} - callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Uploads the files for this field.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfiles/LocalFilesType.js#L275-L339"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.getRequestHandler( item, req [, paths, callback] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.action</code> in <code>req.body</code> (<code>clear</code> or <code>delete</code>)<br><code>field.paths.upload</code> in <code>req.files</code> (uploads the image to localfiles)  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfiles/LocalFilesType.js#L352-L421">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.LocalFiles.handleRequest( item, req [, paths, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.LocalFiles.getRequestHandler()</code>).  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/localfiles/LocalFilesType.js#L424-L432"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre></p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Location",html:'<h4 id="-field-types-location-list-path-options-">.Field.Types.Location( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._underscoreMethods = [&#39;format&#39;, &#39;googleLookup&#39;, &#39;kmFrom&#39;, &#39;milesFrom&#39;];\nthis._fixedSize = &#39;full&#39;;</p>\n<p>this.enableMapsAPI = (options.geocodeGoogle===true || (options.geocodeGoogle !== false &amp;&amp; keystone.get(&#39;google server api key&#39;))) ? true : false;</p>\n<p>this._properties = [&#39;enableMapsAPI&#39;];\nthis.requiredPaths = [&#39;street1&#39;, &#39;suburb&#39;];</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/location/LocationType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Location.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/location/LocationType.js#L62-L138"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats a list of the values stored by the field. Only paths that have values will be included.<br>Optionally provide a space-separated list of values to include.<br>Delimiter defaults to <code>&#39;, &#39;</code>.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/location/LocationType.js#L141-L166"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/location/LocationType.js#L169-L185">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object.<br><code>options.required</code> specifies an Array or space-delimited list of paths that are required (defaults to street1, suburb).  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/location/LocationType.js#L188-L230"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/location/LocationType.js#L233-L293"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.getRequestHandler( item, req [, paths, callback ] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - valid file object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.improve</code> in <code>req.body</code> - improves data via <code>.googleLookup()</code>.<br><code>field.paths.overwrite</code> in <code>req.body</code> - in conjunction with <code>improve</code>, overwrites existing data.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/location/LocationType.js#L296-L333">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.handleRequest( item, req [, paths, callback ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - valid file object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.Location.getRequestHandler()</code>).  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/location/LocationType.js#L336-L344"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre></p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.googleLookup( item, region [, update ], callback )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object}<br><em>@param</em> <strong>region</strong> {String}<br><em>@param</em> <strong>update</strong> {Boolean|String} -  (optional)<br><em>@param</em> <strong>callback</strong> {Function}<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Autodetect the full address and lat, lng from the stored value.<br>Internal status codes mimic the Google API status codes.</p>\n<p class="caution-note">Uses Google&#39;s Maps API and may only be used in conjunction with a Google map.<br>Geocoding results without displaying them on a map is prohibited.<br>Please make sure your Keystone app complies with the Google Maps API License. </p>\n\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/location/LocationType.js#L336-L344"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre></p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.kmFrom( item, point )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>point</strong> {Number}<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns the distance from a [lat, lng] point in kilometres.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/location/LocationType.js#L529-L537"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre></p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Location.milesFrom( item, point )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>point</strong> {Number}<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns the distance from a [lat, lng] point in miles.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/location/LocationType.js#L540-L548"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre></p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Markdown",html:'<h4 id="-field-types-markdown-list-path-options-">.Field.Types.Markdown( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._defaultSize = &#39;full&#39;;</p>\n<p>// TODO: implement filtering, usage disabled for now\noptions.nofilter = true;</p>\n<p>this.toolbarOptions = options.toolbarOptions || {};\nthis.height = options.height || 90;</p>\n<p>// since wysiwyg option can be falsey this needs to use <code>in</code> instead of ||\nthis.wysiwyg = (&#39;wysiwyg&#39; in options) ? options.wysiwyg : true;</p>\n<p>this._properties = [&#39;wysiwyg&#39;, &#39;height&#39;, &#39;toolbarOptions&#39;];</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/markdown/MarkdownType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Markdown.addToSchema(  ) </span>      </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.    </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/markdown/MarkdownType.js#L41-L82"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Markdown.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<pre><code class="lang-javascript">return item.get(this.paths.html);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/markdown/MarkdownType.js#L85-L93"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Markdown.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">// Assume that it has changed if the url is different\nreturn item.isModified(this.paths.md);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/markdown/MarkdownType.js#L112-L120">&nbsp; </div><pre class=" language-javascript hideCode api"></pre></p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Markdown.validateInput( data [, required, item ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object.<br>Will accept either the field path, or paths.md.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/markdown/MarkdownType.js#L96-L109"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Markdown.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.<br>Will accept either the field path, or paths.md </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/markdown/MarkdownType.js#L123-L138"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Money",html:'<h4 id="-field-types-money-list-path-options-">.Field.Types.Money( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this.currency = options.currency;\nthis._nativeType = Number;\nthis._underscoreMethods = [&#39;format&#39;];\nthis._properties = [&#39;currency&#39;];\nthis._fixedSize = &#39;small&#39;;\nthis._formatString = (options.format === false) ? false : (options.format || &#39;$0,0.00&#39;);</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/money/MoneyType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Money.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/money/MoneyType.js#L29-L46">&nbsp; </div><pre class=" language-javascript hideCode api"></pre></p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Money.validateInput( data [, required, item ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/money/MoneyType.js#L27"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Money.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/money/MoneyType.js#L26"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'
},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Name",html:'<h4 id="-field-types-name-list-path-options-">.Field.Types.Name( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">\nthis._fixedSize = &#39;large&#39;;\noptions.nofilter = true; // TODO: added in 0.4\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/name/NameType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Name.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.<br>Adds String properties for .first and .last name, and a virtual with get() and set() methods for .full  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/name/NameType.js#L18-L57"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Name.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/name/NameType.js#L59-L65"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Name.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">return item.isModified(this.paths.first) || item.isModified(this.paths.last);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/name/NameType.js#L84-L91">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Name.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/name/NameType.js#L67-L82"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Name.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/name/NameType.js#L93-L124"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Number",html:'<h4 id="-field-types-number-list-path-options-">.Field.Types.Number( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = Number;\nthis._fixedSize = &#39;small&#39;;\nthis._underscoreMethods = [&#39;format&#39;];\nthis._formatString = (options.format === false) ? false : (options.format || &#39;0,0[.][000000000000]&#39;);</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/number/NumberType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Number.addFilterToQuery( filter, query ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Adds filters to a query.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/number/NumberType.js#L23-L56"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Number.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/number/NumberType.js#L32-L51"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Number.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Checks that a valid array of number has been provided in a data object.<br>An empty value clears the stored value and is considered valid.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/number/NumberType.js#L69-L84"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Number.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/number/NumberType.js#L86-L102"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"NumberArray",html:'<h4 id="-field-types-numberarray-list-path-options-">.Field.Types.NumberArray( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = [Number];\nthis._underscoreMethods = [&#39;format&#39;];\nthis._formatString = (options.format === false) ? false : (options.format || &#39;0,0[.][000000000000]&#39;);\nthis._fixedSize = &#39;small&#39;;</p>\n<p></code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/numberarray/NumberArrayType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.NumberArray.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/numberarray/NumberArrayType.js#L32-L51"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.NumberArray.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Checks that a valid array of number has been provided in a data object.<br>An empty value clears the stored value and is considered valid.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/numberarray/NumberArrayType.js#L63-L101"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.NumberArray.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/numberarray/NumberArrayType.js#L103-L138"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Password",html:'<h4 id="-field-types-password-list-path-options-">.Field.Types.Password( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._underscoreMethods = [&#39;format&#39;, &#39;compare&#39;];\nthis._fixedSize = &#39;large&#39;;\n// You can&#39;t sort on password fields\noptions.nosort = true;\noptions.nofilter = true; // TODO: remove this when 0.4 is merged\nthis.workFactor = options.workFactor || 10;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/password/PasswordType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Password.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/password/PasswordType.js#L23-L77"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Password.addFilterToQuery( filter, query )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Add filters to a query.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/password/PasswordType.js#L79-L86"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Password.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p class="note"> Password fields are always formatted as a random no. of asterisks, because the saved hash should never be displayed nor the length of the actual password hinted at.</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/password/PasswordType.js#L88-L103"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Password.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/password/PasswordType.js#L169-L185">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Password.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object.<br><code>options.required</code> specifies an Array or space-delimited list of paths that are required (defaults to street1, suburb).  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/password/PasswordType.js#L188-L230"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Password.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/password/PasswordType.js#L233-L293"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Relationship",html:'<h4 id="-field-types-relationship-list-path-options-">.Field.Types.Relationship( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this.many = (options.many) ? true : false;\nthis.filters = options.filters;\nthis._defaultSize = &#39;full&#39;;\nthis._nativeType = keystone.mongoose.Schema.Types.ObjectId;\nthis._underscoreMethods = [&#39;format&#39;];\nthis._properties = [&#39;isValid&#39;, &#39;many&#39;, &#39;filters&#39;];</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Relationship.addFilterToQuery( filter, query )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Add filters to a query.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L98-L117"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.addFilters( query, item ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@param</em> <strong>item</strong> {Object} - list item<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Adds relationship filters to a query </p>\n<p class="caution-note">TODO: Deprecate this? Not sure it&#39;s used anywhere </p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L203-L223">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L63-L96"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>force the formatted value to be a string</p>\n<p class="caution-note">unexpected things happen with ObjectIds.</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L119-L126"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.hasFilters </span>   </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Whether the field has any filters defined </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L194-L201">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.isValid </span>   </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Returns true if the relationship configuration is valid  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L176-L183">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.refList </span>   </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Returns the Related List </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L185-L192">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.<br>Only updates the value if it has changed.<br>Treats an empty string as a null value.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L141-L174"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Relationship.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/relationship/RelationshipType.js#L128-L139"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"S3File",html:'<h4 id="-field-types-s3file-list-path-options-">.Field.Types.S3File( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">grappling.mixin(this)\n    .allowHooks(&#39;pre:upload&#39;);\nthis._underscoreMethods = [&#39;format&#39;, &#39;uploadFile&#39;];\nthis._fixedSize = &#39;full&#39;;</p>\n<p>// TODO: implement filtering, usage disabled for now\noptions.nofilter = true;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.S3File.s3config   </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Exposes the custom or keystone azure config settings.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L67-L75">&nbsp; </div><pre class=" language-javascript hideCode api"></pre>  </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L78-L173"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<pre><code class="lang-javascript">return item.get(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L176-L184"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.hasFormatter(  ) </span> </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects the field have formatter function.  </p>\n<pre><code class="lang-javascript">return &#39;function&#39; === typeof this.options.format;\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L178-L186">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.generateHeaders( item, file, callback )  </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - list item<br><em>@param</em> <strong>file</strong> {Object} - the uploaded file<br><em>@param</em> <strong>callback</strong> {Function} - callback<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Generates a headers object for this item to use during upload.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L223-L361"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class="lang-javascript">return item.isModified(this.paths.url);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L187-L195">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object </p>\n<p class="warning-note"> TODO - will only return true</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L198-L207"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object</p>\n<p class="warning-note"> TODO - will not return</p>\n\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L210-L218"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.uploadFile( item, file, update [, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>file</strong> {Object} - valid file object<br><em>@param</em> <strong>update</strong> {Boolean} - update or not<br><em>@param</em> <strong>callback</strong> {Function} - callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Uploads the file for this field.</p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L221-L277"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.getRequestHandler( item, req [, paths, callback] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.action</code> in <code>req.body</code> (<code>clear</code> or <code>delete</code>)<br><code>field.paths.upload</code> in <code>req.files</code> (uploads the file to s3file)  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L280-L320">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.S3File.handleRequest( item, req [, paths, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.S3File.getRequestHandler()</code>).  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/s3file/S3FileType.js#L323-L331"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Select",html:'<h4 id="-field-types-select-list-path-options-">.Field.Types.Select( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this.ui = options.ui || &#39;select&#39;;\nthis.numeric = options.numeric ? true : false;\nthis._nativeType = (options.numeric) ? Number : String;\nthis._underscoreMethods = [&#39;format&#39;];\nthis.<em>properties = [&#39;ops&#39;, &#39;numeric&#39;];\nif (typeof options.options === &#39;string&#39;) {\n    options.options = options.options.split(&#39;,&#39;);\n}\nif (!Array.isArray(options.options)) {\n    throw new Error(&#39;Select fields require an options array.&#39;);\n}\nthis.ops = options.options.map(function(i) {\n    var op = </em>.isString(i) ? { value: i.trim(), label: utils.keyToLabel(i) } : i;\n    if (!<em>.isObject(op)) {\n        op = { label: &#39;&#39; + i, value: &#39;&#39; + i };\n    }\n    if (options.numeric &amp;&amp; !</em>.isNumber(op.value)) {\n        op.value = Number(op.value);\n    }\n    return op;\n});\n// undefined options.emptyOption defaults to true\nif (options.emptyOption === undefined) {\n    options.emptyOption = true;\n}\n// ensure this.emptyOption is a boolean\nthis.emptyOption = options.emptyOption ? true : false;\n// cached maps for options, labels and values\nthis.map = utils.optionsMap(this.ops);\nthis.labels = utils.optionsMap(this.ops, &#39;label&#39;);\nthis.values = _.pluck(this.ops, &#39;value&#39;);</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/select/SelectType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Select.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object}<br><em>@param</em> <strong>query</strong> {Object}<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/select/SelectType.js#L103-L114">&nbsp; </div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Select.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p>Adds a virtual for accessing the label of the selected value, and statics to the Schema for converting a value to a label, and retrieving all of the defined options.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/select/SelectType.js#L47-L87"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Select.cloneOps(  ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Retrieves a shallow clone of the options arrays</h4></div><pre class=" language-javascript"><code class="language-javascript"> return <em>.map(this.ops, </em>.clone); </code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/select/SelectType.js#L89-L94"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Select.cloneMap(  ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Retrieves a shallow clone of the options map.</h4></div><pre class=" language-javascript"><code class="language-javascript"> return utils.optionsMap(this.ops, true); </code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/select/SelectType.js#L96-L101"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Select.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/select/SelectType.js#L127-L132"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Select.validateInput( data [, required, item ] ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object}<br><em>@param</em> <strong>required</strong> {Boolean} \n<em>@param</em> <strong>item</strong> {Object}<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Validates that a valid option has been provided in a data object.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/select/SelectType.js#L116-L125"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'
},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Text",html:'<h4 id="-field-types-text-list-path-options-">.Field.Types.Text( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._underscoreMethods = [&#39;crop&#39;];</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/text/TextType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Text.addFilterToQuery( filter, query ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Adds filters to a query.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/text/TextType.js#L17-L37"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Text.crop( item, length, append, preserveWords ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>length</strong> {Number} - length to crop to<br><em>@param</em> <strong>append</strong> {String} - string to append<br><em>@param</em> <strong>preserveWords</strong> {Boolean} - whether to preserve the last word in full<br><em>@return</em> {String} - cropped string<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Crops the string to the specifed length.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/text/TextType.js#L39-L44"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"TextArray",html:'<h4 id="-field-types-textarray-list-path-options-">.Field.Types.TextArray( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = [String];\nthis._underscoreMethods = [&#39;crop&#39;];</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/textarray/TextArrayType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre>  </p>\n<p><span class="subMethod"> .Field.Types.TextArray.validateInput( data [, required, item ]) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid filter object<br><em>@param</em> <strong>required</strong> {Boolean} - required or not<br><em>@param</em> <strong>item</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/textarray/TextArrayType.js#L26-L47"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.TextArray.updateItem( item, data ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@param</em> <strong>data</strong> {Object}<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.    </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/textarray/TextArrayType.js#L49-L72"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Textarea",html:'<h4 id="-field-types-textarea-list-path-options-">.Field.Types.Textarea( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._underscoreMethods = [&#39;format&#39;, &#39;crop&#39;];\nthis.height = options.height || 90;\nthis._properties = [&#39;height&#39;];</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/textarea/TextareaType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Textarea.addFilterToQuery( filter, query ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Adds filters to a query.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/textarea/TextareaType.js#L21"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Textarea.crop( item, length, append, preserveWords ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>length</strong> {Number} - length to crop to<br><em>@param</em> <strong>append</strong> {String} - string to append<br><em>@param</em> <strong>preserveWords</strong> {Boolean} - whether to preserve the last word in full<br><em>@return</em> {String} - cropped string<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Crops the string to the specifed length.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/textarea/TextareaType.js#L22"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Textarea.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/textarea/TextareaType.js#L24-L30"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"fieldTypes",header:".Field.Types Classes",menuHeader:"keystone.field.types",name:"Url",html:'<h4 id="-field-types-url-list-path-options-">.Field.Types.Url( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header"> <h4>defaults</h4></div><pre class=" language-javascript"><code class="language-javascript">this._nativeType = String;\nthis._underscoreMethods = [&#39;format&#39;];\nthis._formatUrl = options.format || removeProtocolPrefix;</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/url/UrlType.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n<p><span class="subMethod"> .Field.Types.Url.addFilterToQuery( filter, query ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Adds filters to a query.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/url/UrlType.js#L18-L19"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Url.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value using either a supplied format function or default.<br>Strips the leading protocol from the value for simpler display.  </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/url/UrlType.js#L21-L28"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<hr>\n<p><span class="subMethod"> .Field.Types.Url.removeProtocolPrefix( url ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>url</strong> {String} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Remove the protocol prefix from url.   </p>\n<p><div class="code-header addGitHubLink" data-file="fields/types/url/UrlType.js#L30-L35"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Classes/FieldTypes.md",header:".Field.Types Classes",menuHeader:"keystone.field.types"},list:{list:[{keys:"list",header:".List Class",menuHeader:"keystone.list",main:"list",html:'<h4 id="new-keystone-list-key-options-">new Keystone.List( key, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em>  - List name<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - Object of valid options<br><em>@return</em> <strong>Instance</strong>   </p>\n</blockquote>\n<p>Create a new Keystone List.<br>Each list is a wrapper around a mongoose collection schema and includes Keystone specific enhancements.<br>The mongoose schema is available via <code>list.schema</code>.  </p>\n<p><div class="code-header"> <h4>Create a new list</h4></div><pre class=" language-javascript"><code class="language-javascript">  </p>\n<pre><code>    var keystone = require(&#39;keystone&#39;);\n    var Types = keystone.Field.Types;\n\n    var Post = new keystone.List(&#39;Post&#39;, {\n        autokey: { path: &#39;slug&#39;, from: &#39;title&#39;, unique: true },\n        map: { name: &#39;title&#39; },\n        defaultSort: &#39;-createdAt&#39;\n    });\n\n    Post.add({\n        title: { type: String, required: true },\n        state: { type: Types.Select, options: &#39;draft, published, archived&#39;, default: &#39;draft&#39; },\n        author: { type: Types.Relationship, ref: &#39;User&#39; },\n        createdAt: { type: Date, default: Date.now },\n        publishedAt: Date,\n        image: { type: Types.CloudinaryImage },\n        content: {\n            brief: { type: Types.Html, wysiwyg: true, height: 150 },\n            extended: { type: Types.Html, wysiwyg: true, height: 400 }\n        }\n    });\n\n    Post.defaultColumns = &#39;title, state|20%, author, publishedAt|15%&#39;;\n    Post.register();\n</code></pre><p></code></pre>  </p>\n<p><div class="code-header"> <h4>Default options </h4></div><pre class=" language-javascript"><code class="language-javascript">\n    var defaultOptions = {\n        schema: {\n            collection: keystone.prefixModel(key)\n        },\n        noedit: false,\n        nocreate: false,\n        nodelete: false,\n        autocreate: false,\n        sortable: false,\n        hidden: false,\n        track: false,\n        inherits: false,\n        searchFields: &#39;<strong>name</strong>&#39;,\n        defaultSort: &#39;<strong>default</strong>&#39;,\n        defaultColumns: &#39;<strong>name</strong>&#39;\n    };</p>\n<p></code></pre>  </p>\n<p><div class="code-header"> <h4>List properties </h4></div><pre class=" language-javascript"><code class="language-javascript">\n    this.key = key;\n    this.path = this.get(&#39;path&#39;) || utils.keyToPath(key, true);\n    this.schema = new keystone.mongoose.Schema({}, this.options.schema);\n    this.schemaFields = [];\n    this.uiElements = [];\n    this.underscoreMethods = {};\n    this.fields = {};\n    this.fieldsArray = [];\n    this.fieldTypes = {};\n    this.relationshipFields = [];\n    this.relationships = {};\n    this.mappings = {\n        name: null,\n        createdBy: null,\n        createdOn: null,\n        modifiedBy: null,\n        modifiedOn: null\n    };</p>\n<p></code></pre>  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"add",html:'<h4 id="list-add-fields-">List.add( fields )</h4>\n<blockquote>\n<p><em>@param</em> <strong>fields</strong> <em>{Object}</em>  - Object of valid Keystone/Mongoose document fields<br><em>@return</em> <strong>this</strong> </p>\n</blockquote>\n<p>Adds one or more fields to the List<br>Based on Mongoose&#39;s <code>Schema.add</code> </p>\n<pre><code class="lang-javascript">Post.add({\n    title: { type: String, required: true },\n    state: { type: Types.Select, options: &#39;draft, published, archived&#39;, default: &#39;draft&#39; },\n    author: { type: Types.Relationship, ref: &#39;User&#39; },\n    createdAt: { type: Date, default: Date.now },\n    publishedAt: Date,\n    image: { type: Types.CloudinaryImage },\n    content: {\n        brief: { type: Types.Html, wysiwyg: true, height: 150 },\n        extended: { type: Types.Html, wysiwyg: true, height: 400 }\n    }\n});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/list/add.js"> <a href="#" class="loadCode">code</a> </div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"addFiltersToQuery",html:'<h4 id="list-addfilterstoquery-filters-query-">List.addFiltersToQuery( filters, query )</h4>\n<blockquote>\n<p><em>@param</em> <strong>filters</strong> <em>{Array}</em>  - Filters to add to query<br><em>@param</em> <strong>query</strong> <em>{Object}</em>  - Query object<br><em>@return</em> <strong>this</strong> </p>\n</blockquote>\n<p>Adds one or more filters to a list query in the AdminUI</p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/addFiltersToQuery.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"addSearchToQuery",html:'<h4 id="list-addsearchtoquery-searchstring-query-">List.addSearchToQuery( searchString, query )</h4>\n<blockquote>\n<p><em>@param</em> <strong>searchString</strong> <em>{String}</em>  - Search string<br><em>@param</em> <strong>query</strong> <em>{Object}</em>  - Query object<br><em>@return</em> <strong>this</strong>   </p>\n</blockquote>\n<p>Adds a search string to a list query in the AdminUI</p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/addSearchToQuery.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"automap",html:'<h4 id="list-automap-field-">List.automap ( field )</h4>\n<blockquote>\n<p><em>@param</em> <strong>field</strong> <em>{Object}</em>  - valid field object<br><em>@return</em> <strong>this</strong>   </p>\n</blockquote>\n<p>Checks to see if a field path matches a currently unmapped path, and\nif so, adds a mapping for it.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/automap.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"expandColumns",html:'<h4 id="list-expandcolumns-cols-">List.expandColumns( cols )</h4>\n<blockquote>\n<p><em>@param</em> <strong>field</strong> <em>{Object}</em>  - valid field object<br><em>@return</em> <strong>this</strong>   </p>\n</blockquote>\n<p>Expands a comma-separated string or array of columns into valid column objects.  </p>\n<p>Columns can be:  </p>\n<ul>\n<li>A Field, in the format <code>field|width</code> </li>\n<li>A Field in a single related List, in the format <code>list:field|width</code>  </li>\n<li>Any valid path in the Schema, in the format <code>path|width</code>  </li>\n</ul>\n<p>The width part is optional, and can be in the format <code>n%</code> or <code>npx</code>.</p>\n<p>The path <code>__name__</code> is automatically mapped to the namePath of the List.  </p>\n<p>The field or path for the name of the item (defaults to ID if not set or detected) is automatically prepended if not explicitly included.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/expandColumns.js"> <a href="#" class="loadCode">code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"expandPaths",html:'<h4 id="list-expandpaths-paths-">List.expandPaths( paths )</h4>\n<blockquote>\n<p><em>@param</em> <strong>paths</strong> <em>{String}</em>  - field paths<br><em>@return</em> <strong>Object</strong>   </p>\n</blockquote>\n<p>Expand a String of field paths into objects</p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/expandPaths.js"><a href="#" class="loadCode">code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"expandSort",html:'<h4 id="list-expandsort-input-">List.expandSort( input )</h4>\n<blockquote>\n<p><em>@param</em> <strong>paths</strong> <em>{String}</em><br><em>@return</em> <strong>Object</strong>   </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/list/expandSort.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"field",html:'<h4 id="list-field-path-options-">List.field( path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>path</strong> <em>{String}</em> - new field path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - field options<br><em>@return</em> <strong>Object</strong>    </p>\n</blockquote>\n<p>Creates a new field at the specified path, with the provided options.<br>If no options are provides, returns the field at the specified path.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/field.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"getAdminURL",html:'<h4 id="list-getadminurl-item-">List.getAdminURL( item )</h4>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> <em>{String}</em> - item<br><em>@return</em> <strong>String</strong>    </p>\n</blockquote>\n<p>Gets the Admin URL to view the list (or an item if provided)  </p>\n<pre><code class="lang-javascript">    var listURL = list.getAdminURL()\n    var itemURL = list.getAdminURL(item)\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/list/getAdminURL.js"><a href="#" class="loadCode">code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"getCSV",html:'<h4 id="list-getcsv-item-fields-expandrelationshipfields-">List.getCSV ( item, [fields, expandRelationshipFields] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> <em>{Object}</em> - list item<br><em>@param</em> <strong>fields</strong> <em>{Object}</em><br><em>@param</em> <strong>expandRelationshipFields</strong> <em>{Boolean}</em><br><em>@return</em> <strong>String</strong>    </p>\n</blockquote>\n<p>Gets the data from an Item ready to be serialised to CSV for download</p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/getCSV.js"><a href="#" class="loadCode">code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"getData",html:'<h4 id="list-getdata-item-fields-expandrelationshipfields-">List.getData ( item, [fields, expandRelationshipFields] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> <em>{Object}</em> - list item<br><em>@param</em> <strong>fields</strong> <em>{Object}</em><br><em>@param</em> <strong>expandRelationshipFields</strong> <em>{Boolean}</em><br><em>@return</em> <strong>String</strong>    </p>\n</blockquote>\n<p>Gets the data from an Item ready to be serialised for client-side use, as used by the React components  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/getData.js"><a href="#" class="loadCode">code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"getDocumentName",html:'<h4 id="-getdocumentname-doc-escape-">.getDocumentName( doc, escape )</h4>\n<blockquote>\n<p><em>@param</em> <strong>doc</strong> <em>{Object}</em> - mongoose document<br><em>@param</em> <strong>escape</strong> <em>{Boolean}</em><br><em>@return</em> <strong>String</strong>    </p>\n</blockquote>\n<p>Gets the name of the provided document from the correct path  </p>\n<pre><code class="lang-javascript">var name = list.getDocumentName(item)\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/list/getDocumentName.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"getOptions",html:'<h4 id="list-getoptions-">List.getOptions( )</h4>\n<blockquote>\n<p><em>@return</em> <strong>Object</strong>    </p>\n</blockquote>\n<p>Gets the options for the List, as used by the React components</p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/getOptions.js"><a href="#" class="loadCode">code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"getPages",html:'<h4 id="-getpages-options-maxpages-">.getPages( options, maxPages )</h4>\n<blockquote>\n<p>@param <strong>options</strong> {Object} - page options<br>@param <strong>maxPages</strong> {Number} - the maximum number pages to display in the pagination<br><em>@return</em> <strong>Object</strong>  - options  </p>\n</blockquote>\n<p>Generate page array for pagination  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/getPages.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"getUniqueValue",html:'<h4 id="list-getuniquevalue-path-generator-_limit_-callback-">List.getUniqueValue( path, generator [, <em>limit</em> ], callback )</h4>\n<blockquote>\n<p><em>@param</em> <strong>path</strong> {String} - path to check for uniqueness<br><em>@param</em> <strong>generator</strong> {Function} - generator method to call to generate a new value<br><em>@param</em> <strong>limit</strong> {Number} - the maximum number of attempts (optional, defaults to 10)<br><em>@param</em> <strong>callback</strong> {Function} - callback(err, uniqueValue)  </p>\n</blockquote>\n<p>Gets a unique value from a generator method by checking for documents with the same value.  </p>\n<p>To avoid infinite loops when a unique value cannot be found, it will bail and pass back an undefined value after 10 attempts.  </p>\n<p class="warning-note">Because there will always be a small amount of time between checking for an existing value and saving a document, race conditions can occur and it is possible that another document has the &#39;unique&#39; value assigned at the same time. <br /> <br /> If true uniqueness is required, you should also create a unique index on the database path, and handle duplicate errors thrown on save. </p>  \n\n\n\n\n<p><div class="code-header addGitHubLink" data-file="lib/list/getUniqueValue.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"isReserved",html:'<h4 id="list-isreserved-path-">List.isReserved( path )</h4>\n<blockquote>\n<p><em>@param</em> <strong>path</strong> {String} - path to check<br><em>@return</em> <strong>Boolean</strong></p>\n</blockquote>\n<p>Check whether or not a <code>path</code> is a reserved path. This restricts the use of <code>Object.prototype</code> method keys as well as internal mongo paths.  </p>\n<p><div class="code-header"> <h4>Reserved Paths</h4></div><pre class=" language-javascript"><code class="language-javascript">\n    [\n        &#39;id&#39;,\n        &#39;_id&#39;,\n        &#39;_&#39;,\n        &#39;prototype&#39;,\n        &#39;__proto__&#39;,\n        &#39;hasOwnProperty&#39;,\n        &#39;toString&#39;,\n        &#39;__defineGetter__&#39;,\n        &#39;__defineSetter__&#39;,\n        &#39;__lookupGetter__&#39;,\n        &#39;__lookupSetter__&#39;,\n        &#39;isPrototypeOf&#39;,\n        &#39;propertyIsEnumerable&#39;,\n        &#39;toLocaleString&#39;,\n        &#39;valueOf&#39;\n    ];\n</code></pre>  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/isReserved.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"map",html:'<h4 id="list-map-field-path-">List.map( field, path )</h4>\n<blockquote>\n<p><em>@param</em> <strong>field</strong> {String} - map to<br><em>@param</em> <strong>path</strong> {String} - map this<br><em>@return</em> <strong>Object</strong>  </p>\n</blockquote>\n<p>Maps a built-in field (e.g. name) to a specific path or returns field mapping  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/map.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"paginate",html:'<h4 id="list-paginate-options-_callback_-">List.paginate( options  [, <em>callback</em> ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>options</strong> {Object} - options<br><em>@param</em> <strong>callback</strong> {Function} - callback<br><em>@return</em> <strong>chain</strong> - exec</p>\n</blockquote>\n<p>Gets a special Query object that will paginate documents in the list.  </p>\n<pre><code class="lang-javascript">list.paginate({\n    page: 1,\n    perPage: 100,\n    maxPages: 10\n}).exec(function(err, results) {\n    // do something\n});\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/list/paginate.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"register",html:'<h4 id="list-register-">List.register(  )</h4>\n<blockquote>\n<p><em>@return</em> <strong>this</strong>    </p>\n</blockquote>\n<p>Registers the Schema with Mongoose, and the List with Keystone.  </p>\n<p>Also adds default fields and virtuals to the schema for the list.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/register.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"relationship",html:'<h4 id="list-relationship-def-">List.relationship( ...def )</h4>\n<blockquote>\n<p><em>@param</em> <strong>def</strong> {...String|Option} - relationship (multiple arguments allowed)<br><em>@return</em> <strong>this</strong>     </p>\n</blockquote>\n<p>Registers relationships to this list defined on others  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/relationship.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"selectColumns",html:'<h4 id="list-selectcolumns-q-cols-">List.selectColumns( q, cols )</h4>\n<blockquote>\n<p><em>@param</em> <strong>q</strong> {Query} - query<br><em>@param</em> <strong>cols</strong> {Array} - columns<br><em>@return</em> <strong>Query</strong> - q   </p>\n</blockquote>\n<p>Specified select and populate options for a query based the provided columns.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/selectColumns.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"set",html:'<h4 id="list-set-key-value-">List.set( key, value )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> {String} - key name<br><em>@param</em> <strong>value</strong> {...String|Object|Array|Function} - value<br><em>@return</em> <strong>value</strong> - value  </p>\n</blockquote>\n<p>Gets and Sets list options. Aliased as <code>.get()</code>.  </p>\n<pre><code class="lang-javascript">list.set(&#39;test&#39;) // returns the &#39;test&#39; value\nlist.set(&#39;test&#39;, value) // sets the &#39;test&#39; option to `value`\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/list/set.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"underscoreMethod",html:'<h4 id="list-underscoremethod-path-fn-">List.underscoreMethod( path, fn )</h4>\n<blockquote>\n<p><em>@param</em> <strong>path</strong> {String} - path<br><em>@param</em> <strong>fn</strong> {Function} - underscore method<br><em>@return</em> <strong>this</strong>  </p>\n</blockquote>\n<p>Adds a method to the underscoreMethods collection on the list, which is then added to the schema before the list is registered with mongoose.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/underscoreMethod.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"list",header:".List Class",menuHeader:"keystone.list",name:"updateAll",html:'<h4 id="list-updateall-data-_callback_-">List.updateAll( data [, <em>callback</em> ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - path<br><em>@param</em> <strong>callback</strong> {Function} - callback<br><em>@return</em> <strong>this</strong>  </p>\n</blockquote>\n<p>Updates every document in a List, setting the provided data on each.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/list/updateAll.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"schema",header:!1,menuHeader:!1,name:"<i>schemaPlugins</i>.autokey",html:'<h4 id="list-_schemaplugins_-autokey-">List <em>schemaPlugins</em>.autokey (  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> </p>\n<h4 id="adds-a-key-to-each-document-in-a-collection">Adds a key to each document in a collection</h4>\n<p>Uses a current field, <code>from</code>, to create a key.<br>Creates a new field based on <code>path</code>.<br>Key will be unique if <code>unique</code> is <strong>boolean</strong> <code>true</code>.<br>Key will update anytime the <code>from</code> field updates unless <code>fixed</code> is <strong>boolean</strong> <code>true</code>.<br></div><pre class=" language-javascript"><code class="language-javascript">    autokey: { \n        path: &#39;slug&#39;, \n        from: &#39;name&#39;,\n        unique: true,\n        fixed: false\n    }\n</code></pre></p>\n<p>Uses <code class="default-value"> list.schema.pre(&#39;save&#39;...) </code> to alter documents.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/schemaPlugins/autokey.js"><a href="#" class="loadCode">code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'
},{keys:"schema",header:!1,menuHeader:!1,name:"<i>schemaPlugins</i>.history",html:'<h4 id="list-_schemaplugins_-history-">List <em>schemaPlugins</em>.history (  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> </p>\n<h4 id="when-enabled-it-tracks-changes-to-each-document-on-save-or-remove-">When enabled, it tracks changes to each document on save or remove.</h4>\n<p>Creates a new collection named <code>yourcollections_revisions</code> when <strong>boolean</strong> <code>true</code>.<br>Revisions are noted on all <code>Save</code> and <code>Remove</code> operations.<br></div><pre class=" language-javascript"><code class="language-javascript">    history: true</code></pre></p>\n<p>Uses <code class="default-value"> list.schema.pre(&#39;save&#39;...) </code> and <code class="default-value"> list.schema.pre(&#39;remove&#39;...) </code>to alter documents.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/schemaPlugins/history.js"><a href="#" class="loadCode">code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"schema",header:!1,menuHeader:!1,name:"<i>schemaPlugins</i>.sortable",html:'<h4 id="list-_schemaplugins_-sortable-">List <em>schemaPlugins</em>.sortable (  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"> </p>\n<h4 id="drag-and-drop-sorting-in-adminui">Drag and Drop Sorting in AdminUI</h4>\n<p>Adds a hidden field <code>sortOrder</code> to the schema.<br></div><pre class=" language-javascript"><code class="language-javascript">    sortable: true </code></pre></p>\n<p>Uses <code class="default-value"> list.schema.pre(&#39;save&#39;...) </code>to alter documents.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/schemaPlugins/sortable.js"><a href="#" class="loadCode">code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"schema",header:!1,menuHeader:!1,name:"<i>schemaPlugins</i>.track",html:'<h4 id="list-_schemaplugins_-track-">List <em>schemaPlugins</em>.track (  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>private</strong>   </p>\n</blockquote>\n<p><div class="code-header"><h4>Adds tracking fields to a collection</h4></div><pre class=" language-javascript"><code class="language-javascript"> track: true </code></pre>  </p>\n<p><div class="code-header"> <h4>Added fields</h4></div><pre class=" language-javascript"><code class="language-javascript">    { \n        createdAt: false, \n        createdBy: false,\n        updatedAt: false,\n        updatedBy: false\n    };\n</code></pre> </p>\n<p>Uses <code class="default-value"> list.schema.pre(&#39;save&#39;...) </code> to alter documents.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/schemaPlugins/track.js"><a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],pre:null,main:"markdown/class/Classes/List.md",header:".List Class",menuHeader:"keystone.list",add:!0,schema:{list:[],main:!1,pre:"schemaPlugins",header:!1,menuHeader:!1}},middleware:{list:[{keys:"middleware",header:".middleware helper",menuHeader:"keystone.middleware",main:"middleware",html:'<h4 id="keystone-middleware">Keystone.middleware</h4>\n<p>Middleware helpers for sucurity and api functions</p>\n<p><div class="code-header addGitHubLink" data-file="lib/middleware"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"middleware",header:".middleware helper",menuHeader:"keystone.middleware",name:"api",html:'<h4 id="-middleware-api">.middleware.api</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Adds helper methods to the <code>res</code> object</h4></div><pre class=" language-javascript"><code class="language-javascript">res.apiResponse(data);</p>\n<p>res.apiError(key, err, msg, code);  </p>\n<p>res.apiNotFound(err, msg);  </p>\n<p>res.apiNotAllowed(err, msg);</p>\n<p></code></pre></p>\n<p><div class="code-header"> <h4>Example</h4></div><pre class=" language-javascript"><code class="language-javascript">app.all(&#39;/api*&#39;, keystone.middleware.api);\napp.get(&#39;/api/v2/posts&#39;, function( req, res ){\n    // send back json data with included middleware\n    ... // get data\n    res.apiResponse(data); \n});\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/middleware/api.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"middleware",header:".middleware helper",menuHeader:"keystone.middleware",name:"cors",html:'<h4 id="-middleware-cors">.middleware.cors</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class="code-header"> <h4>Adds CORS headers to the response.</h4></div><pre class=" language-javascript"><code class="language-javascript"> app.all(&#39;/api*&#39;, keystone.middleware.cors);\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/middleware/cors.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Helpers/Middleware.md",header:".middleware helper",menuHeader:"keystone.middleware"},security:{list:[{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",main:"security",html:'<h4 id="keystone-security-csrf">Keystone.security.csrf</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Helper to uilize csrf   </p>\n<p><span class="subMethod"> .security.csrf.TOKEN_KEY </span>= <code>&#39;_csrf&#39;</code><br><span class="subMethod"> .security.csrf.LOCAL_KEY</span>  = <code>&#39;csrf_token_key&#39;</code><br><span class="subMethod"> .security.csrf.LOCAL_VALUE </span>= <code>&#39;csrf_token_value&#39;</code><br><span class="subMethod"> .security.csrf.SECRET_KEY </span>= <code>.TOKEN_KEY + &#39;_secret&#39;</code><br><span class="subMethod"> .security.csrf.SECRET_LENGTH </span>= <code>10</code><br><span class="subMethod"> .security.csrf.CSRF_HEADER_KEY</span>  = <code>&#39;x-csrf-token&#39;</code><br><span class="subMethod"> .security.csrf.XSRF_HEADER_KEY </span>= <code>&#39;x-xsrf-token&#39;</code><br><span class="subMethod"> .security.csrf.XSRF_COOKIE_KEY </span> = <code>&#39;XSRF-TOKEN&#39;</code>  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript  hideCode api"></pre> </p>\n'},{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",name:"createSecret",html:'<h4 id="-security-csrf-createsecret-">.security.csrf.createSecret(  )</h4>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L26-L28"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",name:"getSecret",html:'<h4 id="-security-csrf-getsecret-req-">.security.csrf.getSecret( req )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L22-L24"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",name:"getToken",html:'<h4 id="-security-csrf-gettoken-req-res-">.security.csrf.getToken( req, res )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L30-L34"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",name:"middleware",html:'<h4 id="-security-csrf-middleware-init-req-res-next-">.security.csrf.middleware.init( req, res, next )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@param</em> <strong>next</strong> <em>{Object}</em>  - callback<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L61-L65"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n<h4 id="-security-csrf-middleware-validate-req-res-next-">.security.csrf.middleware.validate( req, res, next )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@param</em> <strong>next</strong> <em>{Object}</em>  - callback<br><em>@api</em> <strong>public</strong></p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L67-L82"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",name:"requestToken",html:'<h4 id="-security-csrf-requesttoken-req-">.security.csrf.requestToken( req )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L36-L47"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",name:"tokenize",html:'<h4 id="-security-csrf-tokenize-salt-secret-">.security.csrf.tokenize( salt, secret )</h4>\n<blockquote>\n<p><em>@param</em> <strong>salt</strong> <em>{String}</em><br><em>@param</em> <strong>secret</strong> <em>{String}</em><br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L14-L16"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"security",header:".security.csrf helper",menuHeader:"keystone.security.csrf",name:"validate",html:'<h4 id="-security-csrf-validate-req-token-">.security.csrf.validate( req, token )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>token</strong> <em>{String}</em>  - token<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p><div class="code-header addGitHubLink" data-file="lib/security/csrf.js#L49-L57"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre>  </p>\n'}],main:"markdown/class/Helpers/Security.md",header:".security.csrf helper",menuHeader:"keystone.security.csrf"},session:{list:[{keys:"session",header:".session helper",menuHeader:"keystone.session",main:"session",html:'<h4 id="keystone-session">Keystone.session</h4>\n<p>Helper to uilize sessions  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/session.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"session",header:".session helper",menuHeader:"keystone.session",name:"keystoneAuth",html:'<h4 id="-session-keystoneauth-req-res-next-">.session.keystoneAuth( req, res, next )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@param</em> <strong>next</strong> <em>{Object}</em>  - callback  </p>\n</blockquote>\n<p>Middleware to enable access to Keystone.</p>\n<p>Bounces the user to the signin screen if they are not signed in or do not have permission.  </p>\n<p><code>req.user</code> is the user returned by the database. It&#39;s type is Keystone.List.<br><code>req.user.canAccessKeystone</code> denotes whether the user has access to the admin panel.</p>\n<p class="note">If you&#39;re having issues double check your user model. Setting <code>canAccessKeystone</code> to true in the database will not be reflected here if it is virtual. <br/> See <a href="http://mongoosejs.com/docs/guide.html#virtuals">http://mongoosejs.com/docs/guide.html#virtuals</a></p>\n\n\n<p><div class="code-header addGitHubLink" data-file="lib/session.js#L190-L215"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"session",header:".session helper",menuHeader:"keystone.session",name:"persist",html:'<h4 id="-session-persist-req-res-next-">.session.persist( req, res, next )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@param</em> <strong>next</strong> <em>{Object}</em>  - callback  </p>\n</blockquote>\n<p>Middleware to ensure session persistence across server restarts.  </p>\n<p>Looks for a userId cookie, and if present, and there is no user signed in, automatically signs the user in.</p>\n<p><div class="code-header addGitHubLink" data-file="lib/session.js#L156-L188"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"session",header:".session helper",menuHeader:"keystone.session",name:"signin",html:'<h4 id="-session-signin-user-req-res-onsuccess-onfail-">.session.signin( user, req, res, onSuccess, onFail )</h4>\n<blockquote>\n<p><em>@param</em> <strong>user</strong> <em>{Object}</em>  - user object<br><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@param</em> <strong>onSuccess</strong> <em>{Object}</em>  - onSuccess callback, is passed the User instance<br><em>@param</em> <strong>onFail</strong> <em>{Object}</em>  - onFail callback  </p>\n</blockquote>\n<p>Signs in a user user matching the lookup filters </p>\n<p><div class="code-header"> <h4>Example</h4>From <a href="http://www.sydjs.com" target="_blank">sydjs.com</a> <a href="https://github.com/JedWatson/sydjs-site/blob/master/routes/views/session/signin.js" target="_blank">(code)</a></div><pre class=" language-javascript"><code class="language-javascript">\nfunction(req, res) {</p>\n<pre><code>if (req.user) {\n    return res.redirect(req.cookies.target || &#39;/me&#39;);\n}\n\nvar view = new keystone.View(req, res),\n    locals = res.locals;\n\nlocals.section = &#39;session&#39;;\nlocals.form = req.body;\n\nview.on(&#39;post&#39;, { action: &#39;signin&#39; }, function(next) {\n\n    if (!req.body.email || !req.body.password) {\n        req.flash(&#39;error&#39;, &#39;Please enter your username and password.&#39;);\n        return next();\n    }\n\n    var onSuccess = function() {\n        if (req.body.target &amp;&amp; !/join|signin/.test(req.body.target)) {\n            console.log(&#39;[signin] - Set target as [&#39; + req.body.target + &#39;].&#39;);\n            res.redirect(req.body.target);\n        } else {\n            res.redirect(&#39;/me&#39;);\n        }\n    }\n\n    var onFail = function() {\n        req.flash(&#39;error&#39;, &#39;Your username or password were incorrect, please try again.&#39;);\n        return next();\n    }\n\n    keystone.session.signin({ email: req.body.email, password: req.body.password }, req, res, onSuccess, onFail);\n\n});\n\nview.render(&#39;session/signin&#39;);\n</code></pre><p>}\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/session.js#L71-L116"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"session",header:".session helper",menuHeader:"keystone.session",name:"signinWithUser",html:'<h4 id="-session-signinwithuser-user-req-res-onsuccess-">.session.signinWithUser( user, req, res, onSuccess )</h4>\n<blockquote>\n<p><em>@param</em> <strong>user</strong> <em>{Object}</em>  - user object<br><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@param</em> <strong>onSuccess</strong> <em>{Object}</em>  - onSuccess callback, is passed the User instance  </p>\n</blockquote>\n<p>Creates a user session by supplying a user object </p>\n<p><div class="code-header"> <h4>Example</h4></div><pre class=" language-javascript"><code class="language-javascript"></p>\n<p>// express route\nkeystone.app.post(&#39;/signin&#39;, function(req, res) {</p>\n<pre><code>    var passwordCheck = req.body.password;\n    var onSuccess = function(user) {\n        // successful session generation\n    }\n    User.model.find({email: req.body.email}).exec(function(err, user) {\n        if (user &amp;&amp; (!passwordCheck || scmp(passwordCheck, hash(user.password)))) {\n            keystone.session.signinWithUser(user, req, res, onSuccess);\n        } else {\n            // handle error\n        }\n    });\n</code></pre><p>}\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/session.js#L23-L58"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"session",header:".session helper",menuHeader:"keystone.session",name:"signout",html:'<h4 id="-session-signout-req-res-next-">.session.signout( req, res, next )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - express request object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - express response object<br><em>@param</em> <strong>next</strong> <em>{Object}</em>  - callback  </p>\n</blockquote>\n<p>Signs the current user out and resets the session</p>\n<p><div class="code-header"> <h4>Example</h4>From <a href="http://www.sydjs.com" target="_blank">sydjs.com</a> <a href="https://github.com/JedWatson/sydjs-site/blob/master/routes/views/session/signout.js" target="_blank">(code)</a></div><pre class=" language-javascript"><code class="language-javascript">\nfunction(req, res) {</p>\n<pre><code>    var view = new keystone.View(req, res),\n        locals = res.locals;\n\n    locals.section = &#39;session&#39;;\n\n    keystone.session.signout(req, res, function() {\n        res.redirect(&#39;/&#39;);\n    });\n</code></pre><p>};\n</code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/session.js#L127-L154"> &nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Helpers/Session.md",header:".session helper",menuHeader:"keystone.session"},view:{list:[{keys:"view",header:".View Class",menuHeader:"keystone.view",main:"view",html:'<h4 id="new-keystone-view-req-res-">new Keystone.View( req, res )</h4>\n<blockquote>\n<p><em>@param</em> <strong>req</strong> <em>{Object}</em>  - valid Express req object<br><em>@param</em> <strong>res</strong> <em>{Object}</em>  - valid Express res object<br><em>@return</em> <strong>Instance</strong>   </p>\n</blockquote>\n<p>Helper to simplify view logic in a Keystone application  </p>\n<pre><code class="lang-javascript">    var view = new keystone.View(req, res);\n\n    view.render(&#39;index&#39;);\n</code></pre>\n<p><div class="code-header addGitHubLink" data-file="lib/view.js"> <a href="#" class="loadCode"> code</a></div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"view",header:".View Class",menuHeader:"keystone.view",name:"on",html:'<h4 id="view-on-on-callback-">View.on( on [, callback ] )</h4>\n<blockquote>\n<p><em>@param</em> <strong>on</strong> <em>{Function|Object|String}</em>  - Method to be executed<br><em>@param</em> <strong>callback</strong> <em>{Function}</em>  - Function to run in parallel on <code>on</code>.<br><em>@return</em> <strong>this</strong>  </p>\n</blockquote>\n<p>Adds a method (or array of methods) to be executed in parallel to the <code>init</code>, <code>action</code> or <code>render</code> queue.</p>\n<h5 id="argument-on-options">argument <code>on</code> options</h5>\n<ul>\n<li><strong>init</strong> - Init events are always fired in series, before any other actions<pre><code class="lang-javascript">view.on(&#39;init&#39;, function (next) {\n  // do something before any actions or queries have run\n});\n</code></pre>\n</li>\n<li><strong><code>Function</code></strong> - If the first argument is a <strong>Function</strong> that returns truthy then the second argument is added to the queue.</li>\n<li><strong>Dynamic</strong> - Do certain actions depending on information in the response object.  <pre><code class="lang-javascript">view.on({ &#39;user.name.first&#39;: &#39;Admin&#39; }, function(next) {\n    console.log(&#39;Hello Admin!&#39;);\n    next();\n});\n</code></pre>\n</li>\n<li><strong>get</strong> - HTTP verb  </li>\n<li><strong>post</strong> - HTTP verb  </li>\n<li><strong>put</strong> - HTTP verb  </li>\n<li><strong>delete</strong> - HTTP verb  </li>\n<li><strong>render</strong> - Render events are always fired last in parallel, after any other actions  <pre><code class="lang-javascript">view.on(&#39;render&#39;, function (next) {\n  // do something after init, action and query middleware has run\n});\n</code></pre>\n</li>\n</ul>\n<p><div class="code-header"><h4>example</h4></div><pre class=" language-javascript"><code class="language-javascript">view.on(function() {</p>\n<pre><code>    var thing = true;\n    return thing;\n\n}, function(next) {\n\n    console.log(&#39;thing is true!&#39;);\n    next();\n\n});\n</code></pre><p></code></pre>  </p>\n<p><div class="code-header"> </p>\n<p><h4>grab posts</h4><br></div><pre class=" language-javascript"><code class="language-javascript">    // Load posts\n    view.on(&#39;init&#39;, function(next) {</p>\n<pre><code>        var q = keystone.list(&#39;Post&#39;).paginate({\n                page: req.query.page || 1,\n                perPage: 10,\n                maxPages: 10\n            })\n            .where(&#39;state&#39;, &#39;published&#39;)\n            .sort(&#39;-publishedDate&#39;)\n            .populate(&#39;author categories&#39;);\n\n        if (locals.data.category) {\n            q.where(&#39;categories&#39;).in([locals.data.category]);\n        }\n\n        q.exec(function(err, results) {\n            locals.data.posts = results;\n            next(err);\n        });\n\n    });\n</code></pre><p></code></pre>  </p>\n<p><div class="code-header addGitHubLink"  data-file="lib/view.js#L42-L193">&nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"view",header:".View Class",menuHeader:"keystone.view",name:"query",html:'<h4 id="view-query-key-query-options-">View.query( key, query, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{Array}</em>  - Keys can be nested paths, containing objects will be created as required.<br><em>@param</em> <strong>query</strong> <em>{Object}</em>  - Mongoose query<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - Options<br><em>@return</em> <strong>chain</strong> - QueryCallbacks  </p>\n</blockquote>\n<p>Queues a mongoose query for execution before the view is rendered.<br>The results of the query are set in <code>locals[key]</code>.<br>Keys can be nested paths, containing objects will be created as required.<br>The third argument <code>then</code> can be a method to call after the query is completed such as <code class="default-value"> function(err, results, callback)</code>, or a <code>populateRelated</code> definition (string or array).</p>\n<p><div class="code-header"> <h4>Examples</h4></div><pre class=" language-javascript"><code class="language-javascript"> </p>\n<pre><code>/* an array of books from the database will be added to locals.books.*/\nview.query(&#39;books&#39;, keystone.list(&#39;Book&#39;).model.find());\n\n/*  You can also nest properties on the locals variable. */\nview.query(\n    &#39;admin.books&#39;,\n    keystone.list(&#39;Book&#39;).model.find().where(&#39;user&#39;, &#39;Admin&#39;)\n);\n/* locals.admin.books will be the result of the query */\n\n\n/* views.query().then is always called if it is available */\nview.query(&#39;books&#39;, keystone.list(&#39;Book&#39;).model.find())\n    .then(function (err, results, next) {\n        if (err) return next(err);\n        console.log(results);\n        next();\n    });\n</code></pre><p></code></pre></p>\n<p><div class="code-header addGitHubLink" data-file="lib/view.js#L214-L310">&nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'},{keys:"view",header:".View Class",menuHeader:"keystone.view",name:"render",html:'<h4 id="view-render-renderfn-locals-callback-">View.render( renderFn, locals, callback )</h4>\n<blockquote>\n<p><em>@param</em> <strong>renderFn</strong> <em>{Function|String}</em>  - Render function<br><em>@param</em> <strong>locals</strong> <em>{Object}</em>  - Locals<br><em>@param</em> <strong>callback</strong> <em>{Function}</em>  - Render callback  </p>\n</blockquote>\n<p>Executes the current queue of init and action methods in series, and then executes the render function.<br>If renderFn is a string, it is provided to <code>res.render</code>.<br>It is expected that <em>most</em> init stacks require processing in series, but it is safe to execute actions in parallel.<br>If there are several <code>init</code> methods that should be run in parallel, queue them as an array, e.g. <code>view.on(&#39;init&#39;, [first, second])</code>.  </p>\n<p><div class="code-header addGitHubLink" data-file="lib/view.js#L312-L375">&nbsp;</div><pre class=" language-javascript hideCode api"></pre> </p>\n'}],main:"markdown/class/Classes/View.md",header:".View Class",menuHeader:"keystone.view"},endpoints:{list:[]}}}},a("default",b)}}}),System.registerDynamic("github:jspm/nodelibs-fs@0.1.2/index",[],!0,function(a,b,c){var d=this,e=d.define;return d.define=void 0,System._nodeRequire?c.exports=System._nodeRequire("fs"):b.readFileSync=function(a){var b,c=new XMLHttpRequest;return c.open("GET",a,!1),c.onreadystatechange=function(d){if(4==c.readyState){var e=c.status;if(e>399&&600>e||400==e)throw"File read error on "+a;b=c.responseText}},c.send(null),b},d.define=e,c.exports}),System.registerDynamic("github:jspm/nodelibs-fs@0.1.2",["github:jspm/nodelibs-fs@0.1.2/index"],!0,function(a,b,c){var d=this,e=d.define;return d.define=void 0,c.exports=a("github:jspm/nodelibs-fs@0.1.2/index"),d.define=e,c.exports}),System.registerDynamic("npm:@lukekarrys/jade-runtime@1.11.1/index",["github:jspm/nodelibs-fs@0.1.2"],!0,function(a,b,c){function d(a){return null!=a&&""!==a}function e(a){return(Array.isArray(a)?a.map(e):a&&"object"==typeof a?Object.keys(a).filter(function(b){return a[b]}):[a]).filter(d).join(" ")}function f(a){return j[a]||a}function g(a){var b=String(a).replace(k,f);return b===""+a?a:b}var h=this,i=h.define;h.define=void 0,b.merge=function l(a,b){if(1===arguments.length){for(var c=a[0],e=1;e<a.length;e++)c=l(c,a[e]);return c}var f=a["class"],g=b["class"];(f||g)&&(f=f||[],g=g||[],Array.isArray(f)||(f=[f]),Array.isArray(g)||(g=[g]),a["class"]=f.concat(g).filter(d));for(var h in b)"class"!=h&&(a[h]=b[h]);return a},b.joinClasses=e,b.cls=function(a,c){for(var d=[],f=0;f<a.length;f++)c&&c[f]?d.push(b.escape(e([a[f]]))):d.push(e(a[f]));var g=e(d);return g.length?' class="'+g+'"':""},b.style=function(a){return a&&"object"==typeof a?Object.keys(a).map(function(b){return b+":"+a[b]}).join(";"):a},b.attr=function(a,c,d,e){return"style"===a&&(c=b.style(c)),"boolean"==typeof c||null==c?c?" "+(e?a:a+'="'+a+'"'):"":0==a.indexOf("data")&&"string"!=typeof c?(-1!==JSON.stringify(c).indexOf("&")&&console.warn("Since Jade 2.0.0, ampersands (`&`) in data attributes will be escaped to `&amp;`"),c&&"function"==typeof c.toISOString&&console.warn("Jade will eliminate the double quotes around dates in ISO form after 2.0.0")," "+a+"='"+JSON.stringify(c).replace(/'/g,"&apos;")+"'"):d?(c&&"function"==typeof c.toISOString&&console.warn("Jade will stringify dates in ISO form after 2.0.0")," "+a+'="'+b.escape(c)+'"'):(c&&"function"==typeof c.toISOString&&console.warn("Jade will stringify dates in ISO form after 2.0.0")," "+a+'="'+c+'"')},b.attrs=function(a,c){var d=[],f=Object.keys(a);if(f.length)for(var g=0;g<f.length;++g){var h=f[g],i=a[h];"class"==h?(i=e(i))&&d.push(" "+h+'="'+i+'"'):d.push(b.attr(h,i,!1,c))}return d.join("")};var j={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;"},k=/[&<>"]/g;return b.escape=g,b.rethrow=function m(b,c,d,e){if(!(b instanceof Error))throw b;if(!("undefined"==typeof window&&c||e))throw b.message+=" on line "+d,b;try{e=e||a("github:jspm/nodelibs-fs@0.1.2").readFileSync(c,"utf8")}catch(f){m(b,null,d)}var g=3,h=e.split("\n"),i=Math.max(d-g,0),j=Math.min(h.length,d+g),g=h.slice(i,j).map(function(a,b){var c=b+i+1;return(c==d?"  > ":"    ")+c+"| "+a}).join("\n");throw b.path=c,b.message=(c||"Jade")+":"+d+"\n"+g+"\n\n"+b.message,b},b.DebugItem=function(a,b){this.lineno=a,this.filename=b},h.define=i,c.exports}),System.registerDynamic("npm:@lukekarrys/jade-runtime@1.11.1",["npm:@lukekarrys/jade-runtime@1.11.1/index"],!0,function(a,b,c){var d=this,e=d.define;return d.define=void 0,c.exports=a("npm:@lukekarrys/jade-runtime@1.11.1/index"),d.define=e,c.exports}),System.register("app/html/templates",["npm:@lukekarrys/jade-runtime@1.11.1"],function(a){"use strict";var b,c;return{setters:[function(a){b=a["default"]}],execute:function(){c={404:function(a){var b=[];return b.push('<div class="page-header page-header"><div class="container"><h1>404</h1><p class="lead">Oh snap! That page doesn\'t exist.</p></div></div><div class="container"><div class="row"><div class="col-sm-3"><div class="docs-sidebar-info"><p>You\'re on this page because the page you requested has been moved or deleted.</p><p>Check out the links on the right to find your way.</p></div></div><div class="col-sm-9"><div class="docs-content"><div class="row"><div class="col-sm-6"><h3>On this site</h3><ul class="list-unstyled lead"><li><a href="/getting-started" title="KeystoneJS Getting Started">Getting Started</a></li><li><a href="/docs/configuration" title="KeystoneJS Configuration">KeystoneJS Configuration</a></li><li><a href="/docs/database" title="KeystoneJS Database">Database Setup</a></li><li><a href="/examples" title="KeystoneJS Application">Examples Applications</a></li></ul></div><div class="col-sm-6"><h3>Other resources</h3><ul class="list-unstyled lead"><li><a href="https://github.com/keystonejs/keystone" target="_blank" title="Github Project">Github Project</a></li><li><a href="http://demo.keystonejs.com" target="_blank" title="Demo Website">Demo Website</a></li><li><a href="https://groups.google.com/forum/#!forum/keystonejs" target="_blank" title="Demo Website">Google Group</a></li></ul></div></div></div></div></div></div>'),b.join("")},"common/templates/layout/base":function(a){var b=[];return b.push(""),b.join("")},"common/templates/layout/dev_base":function(a){var c,d=[],e=a||{};return function(a,e){d.push("<!DOCTYPE html><html"+b.attr("lang",a,!0,!0)+'><head><script>var _sf_startpt=(new Date()).getTime()</script><meta charset="utf-8"><meta name="viewport" content="initial-scale=1.0,user-scalable=no,maximum-scale=1,width=device-width"><title>KeystoneJS'),e&&d.push(" &middot; "+b.escape(null==(c=e)?"":c)),d.push('</title><meta name="keywords" content="node.js,nodejs,cms,publishing,platform,web,development,framework,express,mongo,mongodb,bootstrap,react,jquery"><meta name="description" content="Get a head-start on the features you need. KeystoneJS is the easiest way to build dynamic websites, applications and APIs with Node.js and MongoDB."><meta property="og:locale" content="en-us"><meta property="og:title" content="KeystoneJS"><meta property="og:description" content="KeystoneJS is an open source Node.js CMS and web application platform built on Express and MongoDB."><meta property="og:url" content="https://keystonejs.com^current_url^"><meta property="og:site_name" content="KeystoneJS"><meta property="og:type" content="article"><link href="http://fonts.googleapis.com/css?family=Roboto:100,300,300italic,400,500,700" rel="stylesheet"><link href="/styles/site.min.css" rel="stylesheet"><link rel="shortcut icon" href="/favicon.ico" type="image/x-icon"></head><body><div id="keystonejs-spa"><div class="home-header back-key"><div class="container"><img src="/images/logo-inverted.svg" alt="KeystoneJS" width="80" height="81"><h2>The open source framework for developing database-driven websites, applications and APIs in Node.js. Built on Express and MongoDB.</h2><h1>preparing to get it on...</h1></div></div></div><script src="/systemjs/jspm_packages/system.js"></script><script src="/systemjs/config.js"></script><script src="/systemjs/client.js"></script></body></html>');
}.call(this,"language"in e?e.language:"undefined"!=typeof language?language:void 0,"title"in e?e.title:"undefined"!=typeof title?title:void 0),d.join("")},"common/templates/layout/footer":function(a){var c=[],d=a||{};return function(a){c.push('<div class="docs-footer"><div class="container"><p>Created by <a href="http://twitter.com/jedwatson" target="_blank">@jedwatson</a>, <a href="http://twitter.com/bladey" target="_blank">@bladey</a> and <a href="http://twitter.com/jossmackison" target="_blank">@jossmackison</a> at <a href="http://www.thinkmill.com.au" target="_blank">Thinkmill</a>, and other <a href="https://github.com/keystonejs/keystone/contributors" target="_blank">contributors</a> under the <a href="http://opensource.org/licenses/MIT" target="_blank">MIT License</a></p><ul class="list-inline"><li><a'+b.attr("href",a+"getting-started",!0,!1)+' title="KeystoneJS Getting Started">Getting Started</a></li><li><a'+b.attr("href",a+"docs",!0,!1)+' title="KeystoneJS Documentation">Documentation</a></li><li><a href="https://groups.google.com/forum/#!forum/keystonejs" target="_blank" title="KeystoneJS Google Group">Google Group</a></li><li><a href="https://github.com/keystonejs/keystone" target="_blank" title="Github Project (new window)">Github Project</a></li><li><a href="http://demo.keystonejs.com" target="_blank" title="Demo Website (new window)">Demo Website</a></li><li><a'+b.attr("href",a+"examples",!0,!1)+' title="KeystoneJS Database">Examples</a></li></ul></div></div><div class="docs-footer-floor"><div class="container"><div class="social-buttons"><div class="social-button social-button__twitter"><a href="https://twitter.com/keystonejs" data-show-count="true" class="twitter-follow-button">Follow @keystonejs</a></div><div class="social-button social-button__github"><iframe src="http://ghbtns.com/github-btn.html?user=keystonejs&amp;repo=keystone&amp;type=watch&amp;count=true" allowtransparency="true" frameborder="0" scrolling="0" width="86" height="20"></iframe></div></div></div></div>')}.call(this,"prefix"in d?d.prefix:"undefined"!=typeof prefix?prefix:void 0),c.join("")},"common/templates/layout/header":function(a){var c,d=[],e={},f=a||{};return function(a,f,g,h,i,j,k,l,m){e.breadcrumbs=c=function(a,e){this&&this.block,this&&this.attributes||{};d.push('<div class="page-header page-breadcrumbs"><div class="container"><h1><a'+b.attr("href",a.path,!0,!1)+' class="page-breadcrumbs__section">'+b.escape(null==(c=a.label)?"":c)+'</a><span class="page-breadcrumbs__subsection">'+b.escape(null==(c=e.label)?"":c)+"</span></h1></div></div>")},d.push('<div class="language-switcher"><div class="container"><a'+b.attr("href",i.zh.links[l],!0,!1)+b.cls(["zh"===h?"active":"","language-switcher-option"],[!0,null])+">\u4e2d\u6587 (Chinese)</a><a"+b.attr("href",i.en.links[l],!0,!1)+b.cls(["en"===h?"active":"","language-switcher-option"],[!0,null])+">English</a></div></div>"),"home"!==l&&(d.push('<header role="banner" class="docs-header"><div class="container"><button type="button" data-toggle="collapse" data-target=".docs-nav__collapse" class="navbar-toggle navbar-toggle-menu"><span class="sr-only">'+b.escape(null==(c=a.toggle_navigation)?"":c)+"</span>"+(null==(c='<span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span>')?"":c)+"</button><a"+b.attr("href",j,!0,!1)+' title="KeystoneJS" class="keystone-logo"><img src="/images/logo.svg" alt="KeystoneJS" width="207" height="70"/></a><nav class="docs-nav"><div class="docs-nav__collapse collapse"><ul class="docs-nav__nav">'),function(){var a=k;if("number"==typeof a.length)for(var e=0,f=a.length;f>e;e++){var g=a[e];d.push("<li"+b.cls([l==g.section?"active":null],[!0])+"><a"+b.attr("href",g.path,!0,!1)+">"+b.escape(null==(c=g.label)?"":c)+"</a></li>")}else{var f=0;for(var e in a){f++;var g=a[e];d.push("<li"+b.cls([l==g.section?"active":null],[!0])+"><a"+b.attr("href",g.path,!0,!1)+">"+b.escape(null==(c=g.label)?"":c)+"</a></li>")}}}.call(this),d.push("</ul></div></nav></div></header>")),"docs"===l&&g?e.breadcrumbs(f,g):d.push("")}.call(this,"content"in f?f.content:"undefined"!=typeof content?content:void 0,"docssection"in f?f.docssection:"undefined"!=typeof docssection?docssection:void 0,"docssubsection"in f?f.docssubsection:"undefined"!=typeof docssubsection?docssubsection:void 0,"language"in f?f.language:"undefined"!=typeof language?language:void 0,"languages"in f?f.languages:"undefined"!=typeof languages?languages:void 0,"prefix"in f?f.prefix:"undefined"!=typeof prefix?prefix:void 0,"primarynav"in f?f.primarynav:"undefined"!=typeof primarynav?primarynav:void 0,"section"in f?f.section:"undefined"!=typeof section?section:void 0,"undefined"in f?f.undefined:void 0),d.join("")},"common/templates/layout/spa_base":function(a){var c,d=[],e=a||{};return function(a,e){d.push("<!DOCTYPE html><html"+b.attr("lang",a,!0,!0)+'><head><script>var _sf_startpt=(new Date()).getTime()</script><meta charset="utf-8"><meta name="viewport" content="initial-scale=1.0,user-scalable=no,maximum-scale=1,width=device-width"><title>KeystoneJS'),e&&d.push(" &middot; "+b.escape(null==(c=e)?"":c)),d.push('</title><meta name="keywords" content="node.js,nodejs,cms,publishing,platform,web,development,framework,express,mongo,mongodb,bootstrap,react,jquery"><meta name="description" content="Get a head-start on the features you need. KeystoneJS is the easiest way to build dynamic websites, applications and APIs with Node.js and MongoDB."><meta property="og:locale" content="en-us"><meta property="og:title" content="KeystoneJS"><meta property="og:description" content="KeystoneJS is an open source Node.js CMS and web application platform built on Express and MongoDB."><meta property="og:url" content="https://keystonejs.com^current_url^"><meta property="og:site_name" content="KeystoneJS"><meta property="og:type" content="article"><link href="http://fonts.googleapis.com/css?family=Roboto:100,300,300italic,400,500,700" rel="stylesheet"><link href="/styles/site.min.css" rel="stylesheet"><link rel="shortcut icon" href="/favicon.ico" type="image/x-icon"></head><body><div id="keystonejs-spa"><div class="home-header back-key"><div class="container"><img src="/images/logo-inverted.svg" alt="KeystoneJS" width="80" height="81"><h2>The open source framework for developing database-driven websites, applications and APIs in Node.js. Built on Express and MongoDB.</h2><h1>preparing to get it on...</h1></div></div></div><script src="/inclusive-bundle.js"></script></body></html>')}.call(this,"language"in e?e.language:"undefined"!=typeof language?language:void 0,"title"in e?e.title:"undefined"!=typeof title?title:void 0),d.join("")},"common/templates/mixins/breadcrumbs":function(a){var b=[];return b.join("")},"en/pages/404":function(a){var b=[];return b.push('<div class="page-header page-header"><div class="container"><h1>404</h1><p class="lead">Oh snap! That page doesn\'t exist.</p></div></div><div class="container"><div class="row"><div class="col-sm-3"><div class="docs-sidebar-info"><p>You\'re on this page because the page you requested has been moved or deleted.</p><p>Check out the links on the right to find your way.</p></div></div><div class="col-sm-9"><div class="docs-content"><div class="row"><div class="col-sm-6"><h3>On this site</h3><ul class="list-unstyled lead"><li><a href="/quick-start" title="KeystoneJS Getting Started">Getting Started</a></li><li><a href="/docs/configuration" title="KeystoneJS Configuration">KeystoneJS Configuration</a></li><li><a href="/docs/database" title="KeystoneJS Database">Database Setup</a></li><li><a href="/examples" title="KeystoneJS Application">Examples Applications</a></li></ul></div><div class="col-sm-6"><h3>Other resources</h3><ul class="list-unstyled lead"><li><a href="https://github.com/keystonejs/keystone" target="_blank" title="Github Project">Github Project</a></li><li><a href="http://demo.keystonejs.com" target="_blank" title="Demo Website">Demo Website</a></li><li><a href="https://groups.google.com/forum/#!forum/keystonejs" target="_blank" title="Demo Website">Google Group</a></li></ul></div></div></div></div></div></div>'),b.join("")},"en/pages/docs/api/0.2.x/class":function(a){var c,d=[],e={},f=a||{};return function(a,f,g,h,i,j,k){e.docsnav=c=function(a){this&&this.block,this&&this.attributes||{};d.push('<div class="visible-xs"><ul class="nav-toggle"><li><a href="/docs" class="nav-heading">Docs</a></li>'),"classapi"==a.value&&(d.push("<li"+b.cls(["0.3.x"==a.version?"active":null],[!0])+'><a href="/docs/api/current/class" class="nav-heading">Current</a></li><li'+b.cls(["0.4.x"==a.version?"active":null],[!0])+'><a href="/docs/api/incoming/class" class="nav-heading">Incoming</a></li><li'+b.cls(["0.2.x"==a.version?"active":null],[!0])+'><a href="/docs/api/0.2.x/class" class="nav-heading">0.2.x	</a></li>'),"0.4.x"==a.version&&d.push('<li><a href="/docs/api/current/endpoint" class="nav-heading">Api</a></li>')),"endpointapi"==a.value&&d.push("<li"+b.cls(["0.4.x"==a.version?"active":null],[!0])+'><a href="/docs/api/current/endpoint" class="nav-heading">0.4.x</a></li><li><a href="/docs/api/current/class" class="nav-heading">Reference</a></li>'),d.push('</ul></div><nav class="docs-sidebar hidden-xs stickyMenu"><ul class="sidebar-nav"><li><a href="/docs" class="nav-heading">Docs Home</a></li>'),"classapi"==a.value&&(d.push("<li"+b.cls(["0.3.x"==a.version?"active":null],[!0])+'><a href="/docs/api/current/class" class="nav-heading">Current</a></li><li'+b.cls(["0.4.x"==a.version?"active":null],[!0])+'><a href="/docs/api/incoming/class" class="nav-heading">Incoming</a></li><li'+b.cls(["0.2.x"==a.version?"active":null],[!0])+'><a href="/docs/api/0.2.x/class" class="nav-heading">0.2.x</a></li>'),"0.4.x"==a.version&&d.push('<li><a href="/docs/api/current/endpoint" class="nav-heading">Endpoint Api</a></li>')),"endpointapi"==a.value&&d.push("<li"+b.cls(["0.4.x"==a.version?"active":null],[!0])+'><a href="/docs/api/current/endpoint" class="nav-heading">0.4.x</a></li><li><a href="/docs/api/current/class" class="nav-heading">Class Reference</a></li>'),d.push('</ul><hr/><ul class="sidebar-nav">'),"0.4.x"==a.version&&d.push('<li class="nav-label"><a href="#changelog">0.3.x to 0.4.x Changes</a></li>'),"0.3.x"==a.version&&d.push('<li class="nav-label"><a href="#changelog">0.2.x to 0.3.x Changes</a></li>'),function(){var a=g;if("number"==typeof a.length)for(var e=0,f=a.length;f>e;e++){var h=a[e];(function(){var a=h.list;if("number"==typeof a.length)for(var e=0,f=a.length;f>e;e++){var g=a[e];g.name||d.push('<li class="nav-label"><a'+b.attr("href","#main-"+g.keys,!0,!1)+">"+(null==(c=g.menuHeader)?"":c)+"</a></li>"),g.main||d.push("<li><a"+b.attr("href","#"+g.keys+"-"+g.name,!0,!1)+">."+(null==(c=g.name)?"":c)+"</a></li>")}else{var f=0;for(var e in a){f++;var g=a[e];g.name||d.push('<li class="nav-label"><a'+b.attr("href","#main-"+g.keys,!0,!1)+">"+(null==(c=g.menuHeader)?"":c)+"</a></li>"),g.main||d.push("<li><a"+b.attr("href","#"+g.keys+"-"+g.name,!0,!1)+">."+(null==(c=g.name)?"":c)+"</a></li>")}}}).call(this)}else{var f=0;for(var e in a){f++;var h=a[e];(function(){var a=h.list;if("number"==typeof a.length)for(var e=0,f=a.length;f>e;e++){var g=a[e];g.name||d.push('<li class="nav-label"><a'+b.attr("href","#main-"+g.keys,!0,!1)+">"+(null==(c=g.menuHeader)?"":c)+"</a></li>"),g.main||d.push("<li><a"+b.attr("href","#"+g.keys+"-"+g.name,!0,!1)+">."+(null==(c=g.name)?"":c)+"</a></li>")}else{var f=0;for(var e in a){f++;var g=a[e];g.name||d.push('<li class="nav-label"><a'+b.attr("href","#main-"+g.keys,!0,!1)+">"+(null==(c=g.menuHeader)?"":c)+"</a></li>"),g.main||d.push("<li><a"+b.attr("href","#"+g.keys+"-"+g.name,!0,!1)+">."+(null==(c=g.name)?"":c)+"</a></li>")}}}).call(this)}}}.call(this),d.push("</ul></nav>")},d.push('<div class="page-header"><div class="container"><h1>Class Reference</h1><p class="lead">legacy ('+b.escape(null==(c=h)?"":c)+')</p></div></div><div class="container"><div class="row"><div class="col-sm-3">'),e.docsnav(i),d.push('</div><div class="col-sm-9"><div class="docs-content"><h2><a name="methods"></a>'+b.escape(null==(c=f)?"":c)+" complete reference</h2>"),function(){var a=g;if("number"==typeof a.length)for(var e=0,f=a.length;f>e;e++){var h=a[e];(function(){var a=h.list;if("number"==typeof a.length)for(var e=0,f=a.length;f>e;e++){var g=a[e];g.name||d.push("<a"+b.attr("name","main-"+g.keys,!0,!1)+"></a><h3>"+(null==(c=g.header)?"":c)+"</h3>"+(null==(c=g.html)?"":c)+"<hr/>"),g.main||d.push("<a"+b.attr("name",""+g.keys+"-"+g.name,!0,!1)+"></a>"+(null==(c=g.html)?"":c)+"<hr/>")}else{var f=0;for(var e in a){f++;var g=a[e];g.name||d.push("<a"+b.attr("name","main-"+g.keys,!0,!1)+"></a><h3>"+(null==(c=g.header)?"":c)+"</h3>"+(null==(c=g.html)?"":c)+"<hr/>"),g.main||d.push("<a"+b.attr("name",""+g.keys+"-"+g.name,!0,!1)+"></a>"+(null==(c=g.html)?"":c)+"<hr/>")}}}).call(this)}else{var f=0;for(var e in a){f++;var h=a[e];(function(){var a=h.list;if("number"==typeof a.length)for(var e=0,f=a.length;f>e;e++){var g=a[e];g.name||d.push("<a"+b.attr("name","main-"+g.keys,!0,!1)+"></a><h3>"+(null==(c=g.header)?"":c)+"</h3>"+(null==(c=g.html)?"":c)+"<hr/>"),g.main||d.push("<a"+b.attr("name",""+g.keys+"-"+g.name,!0,!1)+"></a>"+(null==(c=g.html)?"":c)+"<hr/>")}else{var f=0;for(var e in a){f++;var g=a[e];g.name||d.push("<a"+b.attr("name","main-"+g.keys,!0,!1)+"></a><h3>"+(null==(c=g.header)?"":c)+"</h3>"+(null==(c=g.html)?"":c)+"<hr/>"),g.main||d.push("<a"+b.attr("name",""+g.keys+"-"+g.name,!0,!1)+"></a>"+(null==(c=g.html)?"":c)+"<hr/>")}}}).call(this)}}}.call(this),d.push('<input type="hidden" id="_version"'+b.attr("value",""+a,!0,!1)+'/><input type="hidden" id="_path"'+b.attr("value",""+j,!0,!1)+'/><input type="hidden" id="_api"'+b.attr("value",""+f,!0,!1)+'/><input type="hidden" id="_branch"'+b.attr("value",""+h,!0,!1)+"/></div></div></div></div>")}.call(this,"_version"in f?f._version:"undefined"!=typeof _version?_version:void 0,"api"in f?f.api:"undefined"!=typeof api?api:void 0,"apidocs"in f?f.apidocs:"undefined"!=typeof apidocs?apidocs:void 0,"branch"in f?f.branch:"undefined"!=typeof branch?branch:void 0,"docssection"in f?f.docssection:"undefined"!=typeof docssection?docssection:void 0,"path"in f?f.path:"undefined"!=typeof path?path:void 0,"undefined"in f?f.undefined:void 0),d.join("")},"en/pages/docs/api/0.3.x/class":function(a){var c,d=[],e={},f=a||{};return function(a,f,g,h,i,j,k,l){e.docsnav=c=function(a){this&&this.block,this&&this.attributes||{};d.push('<div class="visible-xs"><ul class="nav-toggle"><li><a href="/docs" class="nav-heading">Docs</a></li>'),"classapi"==a.value&&(d.push("<li"+b.cls(["0.3.x"==a.version?"active":null],[!0])+'><a href="/docs/api/current/class" class="nav-heading">Current</a></li><li'+b.cls(["0.4.x"==a.version?"active":null],[!0])+'><a href="/docs/api/incoming/class" class="nav-heading">Incoming</a></li><li'+b.cls(["0.2.x"==a.version?"active":null],[!0])+'><a href="/docs/api/0.2.x/class" class="nav-heading">0.2.x	</a></li>'),"0.4.x"==a.version&&d.push('<li><a href="/docs/api/current/endpoint" class="nav-heading">Api</a></li>')),"endpointapi"==a.value&&d.push("<li"+b.cls(["0.4.x"==a.version?"active":null],[!0])+'><a href="/docs/api/current/endpoint" class="nav-heading">0.4.x</a></li><li><a href="/docs/api/current/class" class="nav-heading">Reference</a></li>'),d.push('</ul></div><nav class="docs-sidebar hidden-xs stickyMenu"><ul class="sidebar-nav"><li><a href="/docs" class="nav-heading">Docs Home</a></li>'),"classapi"==a.value&&(d.push("<li"+b.cls(["0.3.x"==a.version?"active":null],[!0])+'><a href="/docs/api/current/class" class="nav-heading">Current</a></li><li'+b.cls(["0.4.x"==a.version?"active":null],[!0])+'><a href="/docs/api/incoming/class" class="nav-heading">Incoming</a></li><li'+b.cls(["0.2.x"==a.version?"active":null],[!0])+'><a href="/docs/api/0.2.x/class" class="nav-heading">0.2.x</a></li>'),"0.4.x"==a.version&&d.push('<li><a href="/docs/api/current/endpoint" class="nav-heading">Endpoint Api</a></li>')),"endpointapi"==a.value&&d.push("<li"+b.cls(["0.4.x"==a.version?"active":null],[!0])+'><a href="/docs/api/current/endpoint" class="nav-heading">0.4.x</a></li><li><a href="/docs/api/current/class" class="nav-heading">Class Reference</a></li>'),d.push('</ul><hr/><ul class="sidebar-nav">'),"0.4.x"==a.version&&d.push('<li class="nav-label"><a href="#changelog">0.3.x to 0.4.x Changes</a></li>'),"0.3.x"==a.version&&d.push('<li class="nav-label"><a href="#changelog">0.2.x to 0.3.x Changes</a></li>'),function(){var a=g;if("number"==typeof a.length)for(var e=0,f=a.length;f>e;e++){var h=a[e];(function(){var a=h.list;if("number"==typeof a.length)for(var e=0,f=a.length;f>e;e++){var g=a[e];g.name||d.push('<li class="nav-label"><a'+b.attr("href","#main-"+g.keys,!0,!1)+">"+(null==(c=g.menuHeader)?"":c)+"</a></li>"),g.main||d.push("<li><a"+b.attr("href","#"+g.keys+"-"+g.name,!0,!1)+">."+(null==(c=g.name)?"":c)+"</a></li>")}else{var f=0;for(var e in a){f++;var g=a[e];g.name||d.push('<li class="nav-label"><a'+b.attr("href","#main-"+g.keys,!0,!1)+">"+(null==(c=g.menuHeader)?"":c)+"</a></li>"),g.main||d.push("<li><a"+b.attr("href","#"+g.keys+"-"+g.name,!0,!1)+">."+(null==(c=g.name)?"":c)+"</a></li>")}}}).call(this)}else{var f=0;for(var e in a){f++;var h=a[e];(function(){var a=h.list;if("number"==typeof a.length)for(var e=0,f=a.length;f>e;e++){var g=a[e];g.name||d.push('<li class="nav-label"><a'+b.attr("href","#main-"+g.keys,!0,!1)+">"+(null==(c=g.menuHeader)?"":c)+"</a></li>"),g.main||d.push("<li><a"+b.attr("href","#"+g.keys+"-"+g.name,!0,!1)+">."+(null==(c=g.name)?"":c)+"</a></li>")}else{var f=0;for(var e in a){f++;var g=a[e];g.name||d.push('<li class="nav-label"><a'+b.attr("href","#main-"+g.keys,!0,!1)+">"+(null==(c=g.menuHeader)?"":c)+"</a></li>"),g.main||d.push("<li><a"+b.attr("href","#"+g.keys+"-"+g.name,!0,!1)+">."+(null==(c=g.name)?"":c)+"</a></li>")}}}).call(this)}}}.call(this),d.push("</ul></nav>")},d.push('<div class="page-header"><div class="container"><h1>Class Reference</h1><p class="lead">Current ('+b.escape(null==(c=h)?"":c)+')</p></div></div><div class="container"><div class="row"><div class="col-sm-3">'),e.docsnav(i),d.push('</div><div class="col-sm-9"><div class="docs-content"><h2><a name="methods"></a>'+b.escape(null==(c=l)?"":c)+' complete reference</h2><a name="changelog"></a><h3> 0.2.x to 0.3.x Changes</h3><h4 id="core">Core</h4>\n<ul>\n<li>Bundled middleware has been nested under <code>keystone.middleware</code> instead of being included on the <code>keystone</code> object.</li>\n<li><code>keystone.initAPI</code> =&gt; <code>keystone.middleware.api</code></li>\n<li><code>keystone.cors</code> =&gt; <code>keystone.middleware.cors</code></li>\n<li><code>List.addPattern(&quot;standard meta&quot;)</code> (deprecated since v0.2.26) has been removed. Use the <a href="http://keystonejs.com/docs/database/#lists-options">list tracking feature</a> to automatically add created / modified metadata to lists.</li>\n<li>Deprecation of <code>keystone.connect</code>.  <strong>Express</strong> and <strong> Mongoose</strong> instances are now set during <code>keystone.init</code> where you can pass custom Express/Mongoose instances.<pre><code class="lang-javascript">  keystone.init({\n      mongoose: mongoose,\n      app: app\n  });\n</code></pre>\n</li>\n</ul>\n<h4 id="express-4">Express 4</h4>\n<p>Express 3 has been upgraded to Express 4. Please review the <a href="http://expressjs.com/guide/migrating-4.html" target="_blank" >Moving to Express 4 Guide</a> for more information.</p>\n<h4 id="react-admin-ui">React Admin UI</h4>\n<p>The first part of the port of the Admin UI to React has been completed, meaning forms are now rendered client-side by React instead of server-side from Jade templates.</p>\n<p>The Admin UI should, by and large, work as before - this is just groundwork for more improvements to come.</p>\n<h4 id="fields">Fields</h4>\n<p><code>field.width</code> has been deprecated in favor of <code>field.size</code>. Fields (some, not all) can be set to <code>small</code>, <code>medium</code>, <code>large</code> or <code>full</code> (see <a href="/docs/database#fieldtypes" >field docs</a> for support). The CSS and HTML structure has been significantly cleaned up over the 0.2.x version, and should result in a cleaner, more consistent UI.</p>\n<p>The default field size has changed from <code>full</code> to <code>large</code> because most fields don&#39;t need to stretch all the way across the screen.</p>\n<h4 id="code">Code</h4>\n<p><code>options.lang</code> became <code>options.language</code></p>\n<hr/>'),function(){var a=g;if("number"==typeof a.length)for(var e=0,f=a.length;f>e;e++){var h=a[e];(function(){var a=h.list;if("number"==typeof a.length)for(var e=0,f=a.length;f>e;e++){var g=a[e];g.name||d.push("<a"+b.attr("name","main-"+g.keys,!0,!1)+"></a><h3>"+(null==(c=g.header)?"":c)+"</h3>"+(null==(c=g.html)?"":c)+"<hr/>"),g.main||d.push("<a"+b.attr("name",""+g.keys+"-"+g.name,!0,!1)+"></a>"+(null==(c=g.html)?"":c)+"<hr/>")}else{var f=0;for(var e in a){f++;var g=a[e];g.name||d.push("<a"+b.attr("name","main-"+g.keys,!0,!1)+"></a><h3>"+(null==(c=g.header)?"":c)+"</h3>"+(null==(c=g.html)?"":c)+"<hr/>"),g.main||d.push("<a"+b.attr("name",""+g.keys+"-"+g.name,!0,!1)+"></a>"+(null==(c=g.html)?"":c)+"<hr/>")}}}).call(this)}else{var f=0;for(var e in a){f++;var h=a[e];(function(){var a=h.list;if("number"==typeof a.length)for(var e=0,f=a.length;f>e;e++){var g=a[e];g.name||d.push("<a"+b.attr("name","main-"+g.keys,!0,!1)+"></a><h3>"+(null==(c=g.header)?"":c)+"</h3>"+(null==(c=g.html)?"":c)+"<hr/>"),g.main||d.push("<a"+b.attr("name",""+g.keys+"-"+g.name,!0,!1)+"></a>"+(null==(c=g.html)?"":c)+"<hr/>")}else{var f=0;for(var e in a){f++;var g=a[e];g.name||d.push("<a"+b.attr("name","main-"+g.keys,!0,!1)+"></a><h3>"+(null==(c=g.header)?"":c)+"</h3>"+(null==(c=g.html)?"":c)+"<hr/>"),g.main||d.push("<a"+b.attr("name",""+g.keys+"-"+g.name,!0,!1)+"></a>"+(null==(c=g.html)?"":c)+"<hr/>")}}}).call(this)}}}.call(this),d.push('<input type="hidden" id="_version"'+b.attr("value",""+a,!0,!1)+'/><input type="hidden" id="_path"'+b.attr("value",""+j,!0,!1)+'/><input type="hidden" id="_api"'+b.attr("value",""+f,!0,!1)+'/><input type="hidden" id="_branch"'+b.attr("value",""+h,!0,!1)+"/></div></div></div></div>")}.call(this,"_version"in f?f._version:"undefined"!=typeof _version?_version:void 0,"api"in f?f.api:"undefined"!=typeof api?api:void 0,"apidocs"in f?f.apidocs:"undefined"!=typeof apidocs?apidocs:void 0,"branch"in f?f.branch:"undefined"!=typeof branch?branch:void 0,"docssection"in f?f.docssection:"undefined"!=typeof docssection?docssection:void 0,"path"in f?f.path:"undefined"!=typeof path?path:void 0,"undefined"in f?f.undefined:void 0,"version"in f?f.version:"undefined"!=typeof version?version:void 0),d.join("")},"en/pages/docs/api/0.4.x/class":function(a){var c,d=[],e={},f=a||{};return function(a,f,g,h,i,j,k){e.docsnav=c=function(a){this&&this.block,this&&this.attributes||{};d.push('<div class="visible-xs"><ul class="nav-toggle"><li><a href="/docs" class="nav-heading">Docs</a></li>'),"classapi"==a.value&&(d.push("<li"+b.cls(["0.3.x"==a.version?"active":null],[!0])+'><a href="/docs/api/current/class" class="nav-heading">Current</a></li><li'+b.cls(["0.4.x"==a.version?"active":null],[!0])+'><a href="/docs/api/incoming/class" class="nav-heading">Incoming</a></li><li'+b.cls(["0.2.x"==a.version?"active":null],[!0])+'><a href="/docs/api/0.2.x/class" class="nav-heading">0.2.x	</a></li>'),"0.4.x"==a.version&&d.push('<li><a href="/docs/api/current/endpoint" class="nav-heading">Api</a></li>')),"endpointapi"==a.value&&d.push("<li"+b.cls(["0.4.x"==a.version?"active":null],[!0])+'><a href="/docs/api/current/endpoint" class="nav-heading">0.4.x</a></li><li><a href="/docs/api/current/class" class="nav-heading">Reference</a></li>'),d.push('</ul></div><nav class="docs-sidebar hidden-xs stickyMenu"><ul class="sidebar-nav"><li><a href="/docs" class="nav-heading">Docs Home</a></li>'),"classapi"==a.value&&(d.push("<li"+b.cls(["0.3.x"==a.version?"active":null],[!0])+'><a href="/docs/api/current/class" class="nav-heading">Current</a></li><li'+b.cls(["0.4.x"==a.version?"active":null],[!0])+'><a href="/docs/api/incoming/class" class="nav-heading">Incoming</a></li><li'+b.cls(["0.2.x"==a.version?"active":null],[!0])+'><a href="/docs/api/0.2.x/class" class="nav-heading">0.2.x</a></li>'),"0.4.x"==a.version&&d.push('<li><a href="/docs/api/current/endpoint" class="nav-heading">Endpoint Api</a></li>')),"endpointapi"==a.value&&d.push("<li"+b.cls(["0.4.x"==a.version?"active":null],[!0])+'><a href="/docs/api/current/endpoint" class="nav-heading">0.4.x</a></li><li><a href="/docs/api/current/class" class="nav-heading">Class Reference</a></li>'),d.push('</ul><hr/><ul class="sidebar-nav">'),"0.4.x"==a.version&&d.push('<li class="nav-label"><a href="#changelog">0.3.x to 0.4.x Changes</a></li>'),"0.3.x"==a.version&&d.push('<li class="nav-label"><a href="#changelog">0.2.x to 0.3.x Changes</a></li>'),function(){var a=g;if("number"==typeof a.length)for(var e=0,f=a.length;f>e;e++){var h=a[e];(function(){var a=h.list;if("number"==typeof a.length)for(var e=0,f=a.length;f>e;e++){var g=a[e];g.name||d.push('<li class="nav-label"><a'+b.attr("href","#main-"+g.keys,!0,!1)+">"+(null==(c=g.menuHeader)?"":c)+"</a></li>"),g.main||d.push("<li><a"+b.attr("href","#"+g.keys+"-"+g.name,!0,!1)+">."+(null==(c=g.name)?"":c)+"</a></li>")}else{var f=0;for(var e in a){f++;var g=a[e];g.name||d.push('<li class="nav-label"><a'+b.attr("href","#main-"+g.keys,!0,!1)+">"+(null==(c=g.menuHeader)?"":c)+"</a></li>"),g.main||d.push("<li><a"+b.attr("href","#"+g.keys+"-"+g.name,!0,!1)+">."+(null==(c=g.name)?"":c)+"</a></li>")}}}).call(this)}else{var f=0;for(var e in a){f++;var h=a[e];(function(){var a=h.list;if("number"==typeof a.length)for(var e=0,f=a.length;f>e;e++){var g=a[e];g.name||d.push('<li class="nav-label"><a'+b.attr("href","#main-"+g.keys,!0,!1)+">"+(null==(c=g.menuHeader)?"":c)+"</a></li>"),g.main||d.push("<li><a"+b.attr("href","#"+g.keys+"-"+g.name,!0,!1)+">."+(null==(c=g.name)?"":c)+"</a></li>")}else{var f=0;for(var e in a){f++;var g=a[e];g.name||d.push('<li class="nav-label"><a'+b.attr("href","#main-"+g.keys,!0,!1)+">"+(null==(c=g.menuHeader)?"":c)+"</a></li>"),g.main||d.push("<li><a"+b.attr("href","#"+g.keys+"-"+g.name,!0,!1)+">."+(null==(c=g.name)?"":c)+"</a></li>")}}}).call(this)}}}.call(this),d.push("</ul></nav>")},d.push('<div class="page-header"><div class="container"><h1>Class Reference </h1><p class="lead">incoming ('+b.escape(null==(c=h)?"":c)+')</p></div></div><div class="container"><div class="row"><div class="col-sm-3">'),e.docsnav(i),d.push('</div><div class="col-sm-9"><div class="docs-content"><h2><a name="methods"></a>'+b.escape(null==(c=f)?"":c)+'  reference</h2><a name="changelog"></a><h3> 0.3.x to 0.4.x Changes</h3><h4 id="core">Core</h4>\n<ul>\n<li>Removal of <code>keystone.connect</code>.  <strong>Express</strong> and <strong> Mongoose</strong> instances are now set during <code>keystone.init</code> where you can pass custom Express/Mongoose instances.  </li>\n</ul>\n<h4 id="list-class">List Class</h4>\n<ul>\n<li>Removal of <code>List.processFilters</code>.</li>\n<li>Removal of <code>List.getSearchFilters</code>.</li>\n</ul>\n<h4 id="react-admin-ui">React Admin UI</h4>\n<h4 id="fields">Fields</h4>\n<h4 id="code">Code</h4>\n<h4 id="endpoint-api">Endpoint Api</h4>\n'),function(){var a=g;if("number"==typeof a.length)for(var e=0,f=a.length;f>e;e++){var h=a[e];(function(){var a=h.list;if("number"==typeof a.length)for(var e=0,f=a.length;f>e;e++){var g=a[e];g.name||d.push("<a"+b.attr("name","main-"+g.keys,!0,!1)+"></a><h3>"+(null==(c=g.header)?"":c)+"</h3>"+(null==(c=g.html)?"":c)+"<hr/>"),g.main||d.push("<a"+b.attr("name",""+g.keys+"-"+g.name,!0,!1)+"></a>"+(null==(c=g.html)?"":c)+"<hr/>")}else{var f=0;for(var e in a){f++;var g=a[e];g.name||d.push("<a"+b.attr("name","main-"+g.keys,!0,!1)+"></a><h3>"+(null==(c=g.header)?"":c)+"</h3>"+(null==(c=g.html)?"":c)+"<hr/>"),g.main||d.push("<a"+b.attr("name",""+g.keys+"-"+g.name,!0,!1)+"></a>"+(null==(c=g.html)?"":c)+"<hr/>")}}}).call(this)}else{var f=0;for(var e in a){f++;var h=a[e];(function(){var a=h.list;if("number"==typeof a.length)for(var e=0,f=a.length;f>e;e++){var g=a[e];g.name||d.push("<a"+b.attr("name","main-"+g.keys,!0,!1)+"></a><h3>"+(null==(c=g.header)?"":c)+"</h3>"+(null==(c=g.html)?"":c)+"<hr/>"),g.main||d.push("<a"+b.attr("name",""+g.keys+"-"+g.name,!0,!1)+"></a>"+(null==(c=g.html)?"":c)+"<hr/>")}else{var f=0;for(var e in a){f++;var g=a[e];g.name||d.push("<a"+b.attr("name","main-"+g.keys,!0,!1)+"></a><h3>"+(null==(c=g.header)?"":c)+"</h3>"+(null==(c=g.html)?"":c)+"<hr/>"),g.main||d.push("<a"+b.attr("name",""+g.keys+"-"+g.name,!0,!1)+"></a>"+(null==(c=g.html)?"":c)+"<hr/>")}}}).call(this)}}}.call(this),d.push('<input type="hidden" id="_version"'+b.attr("value",""+a,!0,!1)+'/><input type="hidden" id="_path"'+b.attr("value",""+j,!0,!1)+'/><input type="hidden" id="_api"'+b.attr("value",""+f,!0,!1)+'/><input type="hidden" id="_branch"'+b.attr("value",""+h,!0,!1)+"/></div></div></div></div>")}.call(this,"_version"in f?f._version:"undefined"!=typeof _version?_version:void 0,"api"in f?f.api:"undefined"!=typeof api?api:void 0,"apidocs"in f?f.apidocs:"undefined"!=typeof apidocs?apidocs:void 0,"branch"in f?f.branch:"undefined"!=typeof branch?branch:void 0,"docssection"in f?f.docssection:"undefined"!=typeof docssection?docssection:void 0,"path"in f?f.path:"undefined"!=typeof path?path:void 0,"undefined"in f?f.undefined:void 0),d.join("")},"en/pages/docs/api/0.4.x/endpoint":function(a){var c,d=[],e={},f=a||{};return function(a,f){e.docsnav=c=function(e){this&&this.block,this&&this.attributes||{};d.push('<div class="visible-xs"><ul class="nav-toggle"><li><a href="/docs" class="nav-heading">Docs</a></li>'),"classapi"==e.value&&(d.push("<li"+b.cls(["0.3.x"==e.version?"active":null],[!0])+'><a href="/docs/api/current/class" class="nav-heading">Current</a></li><li'+b.cls(["0.4.x"==e.version?"active":null],[!0])+'><a href="/docs/api/incoming/class" class="nav-heading">Incoming</a></li><li'+b.cls(["0.2.x"==e.version?"active":null],[!0])+'><a href="/docs/api/0.2.x/class" class="nav-heading">0.2.x	</a></li>'),"0.4.x"==e.version&&d.push('<li><a href="/docs/api/current/endpoint" class="nav-heading">Api</a></li>')),"endpointapi"==e.value&&d.push("<li"+b.cls(["0.4.x"==e.version?"active":null],[!0])+'><a href="/docs/api/current/endpoint" class="nav-heading">0.4.x</a></li><li><a href="/docs/api/current/class" class="nav-heading">Reference</a></li>'),d.push('</ul></div><nav class="docs-sidebar hidden-xs stickyMenu"><ul class="sidebar-nav"><li><a href="/docs" class="nav-heading">Docs Home</a></li>'),"classapi"==e.value&&(d.push("<li"+b.cls(["0.3.x"==e.version?"active":null],[!0])+'><a href="/docs/api/current/class" class="nav-heading">Current</a></li><li'+b.cls(["0.4.x"==e.version?"active":null],[!0])+'><a href="/docs/api/incoming/class" class="nav-heading">Incoming</a></li><li'+b.cls(["0.2.x"==e.version?"active":null],[!0])+'><a href="/docs/api/0.2.x/class" class="nav-heading">0.2.x</a></li>'),"0.4.x"==e.version&&d.push('<li><a href="/docs/api/current/endpoint" class="nav-heading">Endpoint Api</a></li>')),"endpointapi"==e.value&&d.push("<li"+b.cls(["0.4.x"==e.version?"active":null],[!0])+'><a href="/docs/api/current/endpoint" class="nav-heading">0.4.x</a></li><li><a href="/docs/api/current/class" class="nav-heading">Class Reference</a></li>'),d.push('</ul><hr/><ul class="sidebar-nav">'),"0.4.x"==e.version&&d.push('<li class="nav-label"><a href="#changelog">0.3.x to 0.4.x Changes</a></li>'),"0.3.x"==e.version&&d.push('<li class="nav-label"><a href="#changelog">0.2.x to 0.3.x Changes</a></li>'),function(){var e=a;if("number"==typeof e.length)for(var f=0,g=e.length;g>f;f++){var h=e[f];(function(){var a=h.list;if("number"==typeof a.length)for(var e=0,f=a.length;f>e;e++){var g=a[e];g.name||d.push('<li class="nav-label"><a'+b.attr("href","#main-"+g.keys,!0,!1)+">"+(null==(c=g.menuHeader)?"":c)+"</a></li>"),
g.main||d.push("<li><a"+b.attr("href","#"+g.keys+"-"+g.name,!0,!1)+">."+(null==(c=g.name)?"":c)+"</a></li>")}else{var f=0;for(var e in a){f++;var g=a[e];g.name||d.push('<li class="nav-label"><a'+b.attr("href","#main-"+g.keys,!0,!1)+">"+(null==(c=g.menuHeader)?"":c)+"</a></li>"),g.main||d.push("<li><a"+b.attr("href","#"+g.keys+"-"+g.name,!0,!1)+">."+(null==(c=g.name)?"":c)+"</a></li>")}}}).call(this)}else{var g=0;for(var f in e){g++;var h=e[f];(function(){var a=h.list;if("number"==typeof a.length)for(var e=0,f=a.length;f>e;e++){var g=a[e];g.name||d.push('<li class="nav-label"><a'+b.attr("href","#main-"+g.keys,!0,!1)+">"+(null==(c=g.menuHeader)?"":c)+"</a></li>"),g.main||d.push("<li><a"+b.attr("href","#"+g.keys+"-"+g.name,!0,!1)+">."+(null==(c=g.name)?"":c)+"</a></li>")}else{var f=0;for(var e in a){f++;var g=a[e];g.name||d.push('<li class="nav-label"><a'+b.attr("href","#main-"+g.keys,!0,!1)+">"+(null==(c=g.menuHeader)?"":c)+"</a></li>"),g.main||d.push("<li><a"+b.attr("href","#"+g.keys+"-"+g.name,!0,!1)+">."+(null==(c=g.name)?"":c)+"</a></li>")}}}).call(this)}}}.call(this),d.push("</ul></nav>")},d.push('<div class="page-header"><div class="container"><h1>Endpoint Api</h1><p class="lead">incoming (version 0.4.x)</p></div></div><div class="container"><div class="row"><div class="col-sm-3">'),e.docsnav(f),d.push('</div><div class="col-sm-9"><div class="docs-content"><h2><a name="methods"></a>in development</h2></div></div></div></div>')}.call(this,"apidocs"in f?f.apidocs:"undefined"!=typeof apidocs?apidocs:void 0,"docssection"in f?f.docssection:"undefined"!=typeof docssection?docssection:void 0),d.join("")},"en/pages/docs/api":function(a){var c,d=[],e={},f=a||{};return function(a,f){e.docsnav=c=function(e){this&&this.block,this&&this.attributes||{};d.push('<div class="visible-xs"><ul class="nav-toggle">'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}}}.call(this),d.push('</ul></div><nav class="docs-sidebar hidden-xs"><ul class="sidebar-nav"><li'+b.cls(["introduction"==e.value?"active":null],[!0])+'><a href="/docs" class="nav-heading">Welcome</a></li>'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}}}.call(this),d.push("</ul><hr/>"),"introduction"!=e.value&&(d.push('<ul class="sidebar-nav">'),function(){var b=a;if("number"==typeof b.length)for(var c=0,f=b.length;f>c;c++){var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}else{var f=0;for(var c in b){f++;var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}}}.call(this),d.push("</ul>")),d.push("</nav>")},d.push('<div class="page-header"><div class="container"><h1>Keystone Api</h1><p class="lead">Class and Endpoint Api</p></div></div><div class="container"><div class="row"><div class="col-sm-3">'),e.docsnav(f),d.push('</div><div class="col-sm-9"><div class="docs-content"><h2><a href="/docs/api/current/class">Class Api</a></h2></div></div></div></div>')}.call(this,"docsnav"in f?f.docsnav:"undefined"!=typeof docsnav?docsnav:void 0,"docssection"in f?f.docssection:"undefined"!=typeof docssection?docssection:void 0),d.join("")},"en/pages/docs/configuration":function(a){var c,d=[],e={},f=a||{};return function(a,f){e.docsnav=c=function(e){this&&this.block,this&&this.attributes||{};d.push('<div class="visible-xs"><ul class="nav-toggle">'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}}}.call(this),d.push('</ul></div><nav class="docs-sidebar hidden-xs"><ul class="sidebar-nav"><li'+b.cls(["introduction"==e.value?"active":null],[!0])+'><a href="/docs" class="nav-heading">Welcome</a></li>'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}}}.call(this),d.push("</ul><hr/>"),"introduction"!=e.value&&(d.push('<ul class="sidebar-nav">'),function(){var b=a;if("number"==typeof b.length)for(var c=0,f=b.length;f>c;c++){var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}else{var f=0;for(var c in b){f++;var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}}}.call(this),d.push("</ul>")),d.push("</nav>")},d.push('<div class="page-header"><div class="container"><h1>Configuration</h1><p class="lead">How to roll KeystoneJS the way you want it.</p></div></div><div class="container"><div class="row"><div class="col-sm-3">'),e.docsnav(f),d.push('</div><div class="col-sm-9"><div class="docs-content"><h2>Keystone Options</h2><a name="options-concepts"></a><h3>Setting Options</h3><p>The options for KeystoneJS cover a range of behaviours, from how the express app is configured to enabling features and authentication options for integrated services.</p><p>There are three ways to set options:</p><ul class="options"><li>Passing a <code>{ key: \'value\' }</code> configuration <code class="data-type">Object</code> to the <code>keystone.init(options)</code> method</li><li>Calling <code>keystone.set(\'key\', \'value\')</code></li><li>Setting environment variables in <code>process.env</code>. Only some options support this (noted below).</li></ul><p>If you want to keep secret keys and configuration out of your codebase (especially important for open source projects, or projects where not all developers should have access to production config settings) the <a href="https://npmjs.org/package/dotenv" target="_blank">dotenv</a> module makes this very easy to manage.</p><a name="options-project"></a><h3>Project Options</h3><p>The following options control the branding, navigation and default export settings of the KeystoneJS application in the Admin UI:</p><table class="table"><col width="210"/><col/><tr><td><code>name</code> <code class="data-type">String</code></td><td> <p>The name of the KeystoneJS application</p><p class="note">If no <code>mongo</code> option is provided, Keystone will use <code>name</code> as the database name.</p></td></tr><tr><td><code>brand</code> <code class="data-type">String</code></td><td>Displayed in the top left hand corner of the Admin UI</td></tr><tr><td><code>module root</code> <code class="data-type">String</code></td><td><p>This setting tells Keystone the root path of your app. By default, <code>module root</code> points to the path of the first script that required Keystone within your app. This default may be undesireable at times.</p><p>Setting <code>module root</code> allows you to specify a custom root path for your app. Overriding the default <code>module root</code> may be useful, for example, when unit testing your app.</p><p><code>module root</code> is used by Keystone\'s <code>.getPath()</code> method to resolve/expand the paths of the <code>views</code>, <code>favicon</code>, <code>extensions</code>, <code>ssl cert</code>, <code>ssl key</code>, <code>ssl ca</code>, <code>emails</code>, and <code>updates</code> settings.</p><p>When setting a custom <code>module root</code> you may use either an absolute or a relative path.</p><p class="note">If a relative path is used, it will be considered relative to the location of the script from which the setting was made.</p></td></tr><tr><td><code>frame guard</code> <code class="data-type">String/Boolean</code></td><td><p>This settings tells Keystone how to handle <code>iframe</code> tags. It does this by setting the response <code>X-Frame-Options</code> header. This header is used to protect against "ClickJacking" attacks.</p><p>The default setting is <code>sameorigin</code>.</p><p>Valid options are:</p><ul><li><code class="default-value">"sameorigin"</code> allows requests from <code>iframe</code> tags that originate from the same server</li><li><code class="default-value">"deny"</code> denies requests form all <code>iframe</code> tags, regardless of origin</li><li><code class="default-value">true</code> (same as <code class="default-value">"deny"</code> )</li><li><code class="default-value">false</code> disables <code>frame guard</code></li></ul></td></tr><tr><td><code>nav</code> <code class="data-type">Object</code></td><td><p>An object that specifies the navigation structure for the Admin UI. Create a key for each section that should be visible in the primary navigation. Each key\'s value can be a single list path (as is seen in the URL when you view a list) or an array of list paths. When an array is used, secondary navigation is rendered in the Admin UI.</p><p>The nav is also used to generate the links on the Admin UI home page; any lists that are registered but not included in the <code>nav</code> will be grouped at the bottom of the screen under the \'Other\' heading.</p></td></tr><tr><td><code>csv field delimiter</code> <code class="data-type">String</code></td><td>Allow you to choose a custom field delimiter to be used for CSV export instead of the default comma.</td></tr><tr><td><code>app</code> <code class="data-type">Object</code></td><td>Instance of Express to be used instead of the default instance.</td></tr><tr><td><code>mongoose</code> <code class="data-type">Object</code></td><td>Instance of Mongoose to be used instead of the default instance.</td></tr></table><p class="note">The <code>app</code> and <code>mongoose</code> options replace the functionality of the <code>keystone.connect()</code> method which is now deprecated.  Due to changes in Express 4, `keystone.connect()` no longer works as expected.</p><div class="code-header"><h4>Custom Navigation Example</h4><p>If you had <code>User</code>, <code>Post</code> and <code>PostCategory</code> models, you could group the posts and post categories into a <strong>Content</strong> navigation item like this:</p></div><pre><code class="language-javascript">keystone.set(\'nav\', {\n    \'users\': \'users\',\n    \'content\': [\'posts\', \'post-categories\']\n});</code></pre><a name="options-server"></a><h3>Web Server Options</h3><p>The following options control the configuration of your web server and the express app:</p><table class="table"><col width="210"/><col/><tr><td><code>env</code> <code class="data-type">String</code></td><td><p>The environment setting to use. The keys <strong>development</strong> and <strong>production</strong> are supported, and this will have an impact on things like caching compiled templates. Defaults to <code class="default-value">process.env.NODE_ENV || "development"</code>.</p><p>You should really <strong>set this to <code class="default-value">production</code> for your production servers</strong> using the <code>NODE_ENV</code> environment variable. Several other modules expect this convention also.</p></td></tr><tr><td><code>port</code> <code class="data-type">Number</code></td><td><p>The port to listen for request on. Defaults to <code class="default-value">process.env.PORT || 3000</code></p></td></tr><tr><td><code>host</code> <code class="data-type">String</code></td><td><p>The ip address to listen for request on. Defaults to <code class="default-value">process.env.IP || \'127.0.0.1\'</code></p><p><code>port</code> must be set (either by option or env variable) or the <code>host</code> option will be ignored.</p></td></tr><tr><td><code>views</code> <code class="data-type">String</code></td><td><p>The path to your application\'s <strong>view templates</strong>. This is required for using the <code>keystone.View</code> Class, and will also be set on the express app.</p><p>If you\'re following the <a href="/guide#start_structure">recommended project structure</a>, this should be set to <code class="default-value">"/templates/views"</code>.</p></td></tr><tr><td><code>view engine</code> <code class="data-type">String</code></td><td><p>The template engine to use by default. Any engine with express support should work. <strong>Jade</strong> is included with Keystone, but you will have to add any alternate engine to your project\'s dependencies in your <code>package.json</code>.</p><p>This option is set on the express app (<a href="http://expressjs.com/api.html#app.engine" target="_blank">see docs here</a>).</p></td></tr><tr><td><code>custom engine</code> <code class="data-type">Function</code></td><td><p>If you want to use a custom template engine, set this option to the function that should be used to process your templates.</p><p>See below for an example of how to use the <a href="http://paularmstrong.github.io/swig/" target="_blank">Swig</a> template engine.</p></td></tr><tr><td><code>view cache</code> <code class="data-type">Boolean</code></td><td><p>This option is passed through to Express, and controls whether compiled view templates are cached between requests.</p><p>It defaults to <code class="default-value">true</code> in production, or <code class="default-value">false</code> otherwise so there is rarely any reason to set it explicitly.</p></td></tr><tr><td><code>locals</code> <code class="data-type">Object</code></td><td><p>The default local variables to pass to your view templates.</p><p>Routes can extend or change local variables by modifying <code>res.locals</code>.</p></td></tr><tr><td><code>static</code> <code class="data-type">String</code> or <code class="data-type">Array</code></td><td><p>One or more paths to your application\'s static files. Setting this will include the <code>serve-static</code> middleware.</p><p>If you\'re following the <a href="/guide#start_structure">recommended project structure</a>, this should be set to <code class="default-value">\'public\'</code>.</p></td></tr><tr><td><code>static options</code> <code class="data-type">Object</code></td><td><p>Optional config options that will be passed to the <code>serve-static</code> middleware (<a href="https://github.com/expressjs/serve-static" target="_blank">see docs here</a>).</p></td></tr><tr><td><code>less</code> <code class="data-type">String</code> or <code class="data-type">Array</code></td><td><p>If you want Keystone to automatically compile <strong>.less</strong> files into <strong>.css</strong> files, set this value to the same path as the <code>static</code> option.</p><p>When this option is set, any requests to a <strong>.css</strong> or <strong>.min.css</strong> file will first check for a <strong>.less</strong> file with the same name, and if one is found, the css file will be generated.</p></td></tr><tr><td><code>less options</code> <code class="data-type">Object</code></td><td><p>Optional config options that will be passed to the <code>less</code> middleware; see <a href="https://github.com/emberfeather/less.js-middleware" target="_blank">github.com/emberfeather/less.js-middleware</a> for more information.</p></td></tr><tr><td><code>sass</code> <code class="data-type">String</code> or <code class="data-type">Array</code></td><td><p>If you want Keystone to automatically compile <strong>.scss</strong> files into <strong>.css</strong> files, set this value to the same path as the <code>static</code> option.</p><p>When this option is set, any requests to a <strong>.css</strong> or <strong>.min.css</strong> file will first check for a <strong>.scss</strong> file with the same name, and if one is found, the css file will be generated.</p><p class="note">Note that enabling this option requires you to have specified the <a href="https://github.com/sass/node-sass" target="_blank"><code>node-sass</code></a> package as a dependency in your project\'s <code>package.json</code> file; it is not automatically included with Keystone.</p></td></tr><tr><td><code>sass options</code> <code class="data-type">Object</code></td><td><p>Optional config options that will be passed to the <code>sass</code> middleware; see <a href="https://github.com/sass/node-sass#options" target="_blank">github.com/sass/node-sass</a> for more information.</p><p class="note">To enable complation of <strong>.sass</strong> files pass <code>{ indentedSyntax: true }</code></p></td></tr><tr><td><code>favicon</code> <code class="data-type">String</code></td><td><p>The path to your application\'s <strong>favicon</strong>. Setting this will include the <code>serve-favicon</code> middleware. Should be relative to your project\'s root.</p><p>If you\'re following the <a href="/guide#start_structure">recommended project structure</a>, this should be set to <code class="default-value">"/public/favicon.ico"</code>.</p></td></tr><tr><td><code>compress</code> <code class="data-type">Boolean</code></td><td>Set this to <code class="default-value">true</code> to enable HTTP compression. This will include the <code>compression</code> middleware (<a href="https://github.com/expressjs/compression" target="_blank">see docs here</a>).</td></tr><tr><td><code>logger</code> <code class="data-type">String</code></td><td>Set this to include the <code>morgan</code> middleware. The value will be passed to the middleware initialisation (<a href="https://github.com/expressjs/morgan" target="_blank">see docs here</a>). Set this to <code class="default-value">false</code> to disable logging altogether. Defaults to <code class="default-value">:method :url :status :response-time ms</code>.</td></tr><tr><td><code>logger options</code> <code class="data-type">Object</code></td><td><p>Optional config options that will be passed to the <code>morgan</code> middleware; see <a href="https://github.com/expressjs/morgan" target="_blank">github.com/expressjs/morgan</a> for more information.</p></td></tr><tr><td><code>trust proxy</code> <code class="data-type">Boolean</code></td><td>Set this to enable processing of the HTTP request <code>X-Forwarded-For</code> header. Extracted IP addresses will be available as the array <code>req.ips</code> (<a href="http://expressjs.com/api.html#req.ips">see docs here</a>).</td></tr></table><div class="code-header"><h4>Alternate View Engines</h4><p>By default, Keystone uses the <strong>Jade</strong> template engine for your views. Here\'s how you would set up a different engine, e.g. <strong>Swig</strong>.</p></div><pre><code class="language-javascript">var swig = require(\'swig\');\nkeystone.set(\'view engine\', \'swig\');\nkeystone.set(\'custom engine\', swig.renderFile);</code></pre><div class="code-header"><h4>Exposes <code >onHttpServerCreated</code> event</h4></div><pre><code class="language-javascript">keystone.start({\n    onHttpServerCreated: function() {\n      var server = keystone.httpServer;\n    }\n});</code></pre><a name="options-ssl"></a><h3>HTTPS Web Server Options</h3><p>There are two ways to implement HTTPS for your KeystoneJS application: either use a web server (e.g. <a href="http://nginx.com" target="_blank">NGINX</a>) or PAAS (e.g. <a href="https://www.heroku.com" target="_blank">Heroku</a>) that handles it for you, or set the following options to use the <a href="http://nodejs.org/api/https.html" target="_blank">https server provided by node.js</a>.</p><table class="table"><col width="210"/><col/><tr><td><code>ssl</code> <code class="data-type">Boolean</code> or <code class="data-type">String</code></td><td><p>Whether to start the SSL Server. Defaults to <code class="default-value">false</code>.</p><p>When set to <code class="default-value">true</code>, both http and https servers will be started. If <code>ssl key</code> or <code>ssl cert</code> are invalid, just the http server will be started.</p><p>When set to <code class="default-value">"only"</code>, only the https server will be started. If <code>ssl key</code> or <code>ssl cert</code> are invalid, KeystoneJS will not start.</p></td></tr><tr><td><code>ssl key</code> <code class="data-type">Path</code></td><td><p>The path to your SSL Key. Should be either absolute or relative to <code class="default-value">process.cwd()</code> (which is usually your project root).</p></td></tr><tr><td><code>ssl cert</code> <code class="data-type">Path</code></td><td><p>The path to your SSL Certificate. Should be either absolute or relative to <code class="default-value">process.cwd()</code> (which is usually your project root).</p></td></tr><tr><td><code>ssl ca</code> <code class="data-type">Path</code></td><td><p>The path to your SSL CA Bundle. Should be either absolute or relative to <code class="default-value">process.cwd()</code> (which is usually your project root).</p></td></tr><tr><td><code>ssl port</code> <code class="data-type">Number</code></td><td><p>The port to start the SSL Server on. Defaults to <code class="default-value">3001</code>.</p></td></tr><tr><td><code>ssl host</code> <code class="data-type">String</code></td><td><p>The ip address to listen for request on. Defaults to <code class="default-value">process.env.SSL_IP</code> or the value of the <code>host</code> option.</p></td></tr><tr><td colspan="2"><p>Exposes <code class="">onHttpsServerCreated</code> event during <code class="language-javascript">keystone.start()</code></p></td></tr></table><p class="note"><strong>WARNING:</strong> If you intend to enable SSL on your KeystoneJS app, make sure you\'re using Node.js <code class="default-value">0.10.33</code> or newer. Node versions prior to <code class="default-value">0.10.33</code> are susceptible to the POODLE (Padding Oracle On Downgraded Legacy Encryption) vulnerability, a man-in-the-middle attack that targets <code class="default-value">SSLv3</code> (see <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566">CVE-2014-3566</a>). As of Node version <code class="default-value">0.10.33</code>, the <code class="default-value">SSLv2</code>and <code class="default-value">SSLv3</code> protocols are disabled by default. For more information see the release notes for <a href="http://blog.nodejs.org/2014/10/23/node-v0-10-33-stable/">Node v0.10.33 (Stable)</a>.</p><a name="options-unix-socket"></a><h3>Unix Socket Web Server Option</h3><p>Express will listen to a unix socket for connections.   </p><table class="table"><col width="210"/><col/><tr><td><code>unix socket</code> <code class="data-type">String</code></td><td><p>Path to a writable unix socket. Should be either absolute or relative to <code class="default-value">process.cwd()</code> (which is usually your project root). File will be removed first if present.</p><p>When set http and https servers are ignored.</p></td></tr><tr><td colspan="2"><p>Exposes <code class="">onSocketServerCreated</code> event during <code class="language-javascript">keystone.start()</code>	</p></td></tr></table><a name="options-database"></a><h3>Database and User Auth Options</h3><p>The following options control your database configuration and user models / authentication:</p><table class="table"><col width="210"/><col/><tr><td><code>mongo</code> <code class="data-type">String</code></td><td><p>The url for your MongoDB connection.</p><p>You should typically set this to <code class="default-value">process.env.MONGO_URI || "mongodb://localhost/your-db"</code></p><p class="note">If the <code>mongo</code> option is not provided, Keystone will use the <code>name</code> option as the database name. <code class="default-value">mongodb://localhost/keystone</code></p></td></tr><tr><td><code>model prefix</code> <code class="data-type">String</code></td><td><p>A prefix to apply to all the mongodb collections used by the models.</p></td></tr><tr><td><code>auth</code> <code class="data-type">Mixed</code></td><td><p>Whether to enable built-in auth for Keystone\'s Admin UI, or a custom function to use to authenticate users.</p><p>When this is set to <code class="default-value">false</code> (or not defined), Keystone\'s Admin UI will be open to the public (so set it!)</p><p>If using a custom function, it should follow the standard for express middleware of <code>function(req, res, next)</code>. If a user is not logged in or should not access Keystone\'s Admin UI, use <code>res.redirect()</code> to redirect them - otherwise call the <code>next</code> callback to enable access.</p></td></tr><tr><td><code>user model</code> <code class="data-type">String</code></td><td><p>The key of the Keystone List for users, <strong>required</strong> if <code>auth</code> is set to <code class="default-value">true</code></p><p>Typically this would be set to <code class="default-value">User</code>.</p></td></tr><tr><td><code>cookie secret</code> <code class="data-type">String</code></td><td><p>The encryption key to use for your cookies. Passed to Express\'s cookie parser.</p><p>It\'s a really good idea to set this to a long, random string.</p></td></tr><tr><td><code>session store</code> <code class="data-type">String</code> or <code class="data-type">Function</code></td><td><p>Set this to <code class="default-value">mongo</code> to use your MongoDB database to persist session data.</p><p>By default, Keystone will use the in-memory session store provided by Express, which should only be used in development because it does not scale past a single process, and leaks memory over time.</p><p>Valid options are:</p><ul><li><code class="default-value">mongo</code> (or <code class="default-value">connect-mongo</code>)</li><li><code class="default-value">connect-mongostore</code> (supports replica sets, but requires explicit configuration - see below)</li><li><code class="default-value">connect-redis</code></li><li><code class="default-value">function(expressSession){ ... }</code>.  You may specify a custom express-session store implementation by setting the <code>session store</code> property to a function that returns an express-session store implementation (see example below).</li></ul><p class="note">Session store packages are not bundled with Keystone, so make sure you explicitly add the selected session store to your project\'s <code>package.json</code>.</p><p class="note">The session configuration passed to Express is available via <code class="language-javascript">keystone.get(\'express session\')</code></p><div class="code-header"><h4>Example using custom express-session store</h4></div><pre><code class="language-javascript">var keystone = require(\'keystone\'),\n    ConnectMemcached = require(\'connect-memcached\')\n \nkeystone.init({\n  //...\n  \'session store\': function(session){\n    return new (ConnectMemcached(session))({\n      hosts: [\n        \'localhost:11211\'\n      ]\n    });\n  }\n});</code></pre></td></tr><tr><td><code>session store options</code> <code class="data-type">Object</code></td><td><p>This option allows you to override the default session store configuration, and is passed to the session store package.</p><p>It is required when using the <code class="default-value">connect-mongostore</code> store.</p><div class="code-header"><h4>Example for connect-mongostore</h4></div><pre><code class="language-javascript">"sessionStore": {\n  "db": {\n    "name": "myDb",\n    "servers": [\n      { "host": "192.168.1.100", "port": 28001 },\n      { "host": "192.168.1.100", "port": 28002 },\n      { "host": "192.168.1.101", "port": 27017 }\n    ]\n  }\n}</code></pre><div class="code-header"><h4>Example for connect-redis</h4></div><pre><code class="language-javascript">"sessionStore": {\n  "host": "", // Redis server hostname\n  "port": "", // Redis server port\n  "ttl": "", // Redis session TTL in seconds\n  "db": "", // Database index to use\n  "pass": "", // Password for Redis authentication\n  "prefix": "", // Key prefix defaulting to "sess:"\n  "url": "", // e.g. redis://user:pass@host:port/db\n}</code></pre><p class="note">The session options are made available via <code class="language-javascript">keystone.get(\'session options\')</code></p></td></tr><tr><td><code>back url</code> <code class="data-type">String</code></td><td><p><code>href</code> to use for the \'back to (site name)\' link in the header of the Admin UI</p><p>Defaults to <code class="default-value">/</code></p></td></tr><tr><td><code>signin url</code> <code class="data-type">String</code></td><td><p><code>href</code> to bounce visitors to when they fail the default auth check (e.g. not signed in)</p><p>Defaults to <code class="default-value">/keystone/signin</code>, only used when <code>auth</code> is set to <code class="default-value">true</code></p></td></tr><tr><td><code>signin redirect</code> <code class="data-type">String</code></td><td><p><code>href</code> to bounce visitors to after they successfully sign in via the built-in signin route</p><p>Defaults to <code class="default-value">/keystone</code></p></td></tr><tr><td><code>signout url</code> <code class="data-type">String</code></td><td><p><code>href</code> for the signout link in the top right of the UI</p><p>Defaults to <code class="default-value">/keystone/signout</code> if <code>auth</code> is set to <code class="default-value">true</code></p></td></tr><tr><td><code>signout redirect</code> <code class="data-type">String</code></td><td><p><code>href</code> to bounce visitors to after they successfully sign out via the built-in sign out route</p><p>Defaults to <code class="default-value">/keystone</code></p></td></tr></table><p>For more information about setting up and using database models with Keystone, see the <a href="/docs/database">database guide</a>.</p><a name="options-email"></a><h3>Email Settings</h3><p>Options available for use with Keystone.Email   </p><table class="table"><col width="210"/><col/><tr><td><code>emails</code> <code class="data-type">String</code></td><td><p>Path to email template folder</p></td></tr><tr><td><code>email locals</code> <code class="data-type">Object</code></td><td><p>Setup common locals for your emails. Required by Keystone\'s default email templates. Ignore if using your own.</p></td></tr><tr><td><code>email rules</code> <code class="data-type">Object</code></td><td><p>Setup replacement rules for emails, to automate the handling of differences between development and production.</p></td></tr><tr><td><code>mandrill api key</code> <code class="data-type">String</code></td><td><p>Mandrill API key</p></td></tr><tr><td><code>mandrill username</code> <code class="data-type">String</code></td><td><p>Mandrill username</p></td></tr></table><a name="options-ui"></a><h3>Admin UI Options</h3><p>The following options control some ui options for the Admin backend:</p><table class="table"><col width="210"/><col/><tr><td><code>wysiwyg images</code> <code class="data-type">Boolean</code></td><td><p>Adds an image button which enables including images from other URLS in your WYSIWYG Editor.</p></td></tr><tr><td><code>wysiwyg cloudinary images</code> <code class="data-type">Boolean</code></td><td><p>Adds an image upload button and enables cloudinary image uploads directly in your WYSIWYG Editor.</p></td></tr><tr><td><code>wysiwyg additional buttons</code> <code class="data-type">String</code></td><td><p>Allows to add additional extra functionality buttons such as <code>blockquote</code>.</p><p>A complete list of available buttons can be found at: <a href="http://www.tinymce.com/wiki.php/Controls">http://www.tinymce.com/wiki.php/Controls</a></p></td></tr><tr><td><code>wysiwyg additional plugins</code> <code class="data-type">String</code></td><td><p>Allows for additional plugins to be activated which can be found at: <a href="http://www.tinymce.com/wiki.php/Plugins">http://www.tinymce.com/wiki.php/Plugins</a></p></td></tr><tr><td><code>wysiwyg additional options</code> <code class="data-type">Object</code></td><td><p>Allows for additional TinyMCE options, such as <code>{ menubar: true }</code> to be modified.</p></td></tr><tr><td><code>wysiwyg override toolbar</code> <code class="data-type">Boolean</code></td><td><p>This will remove the default set of buttons for wysiwyg mode. Use this with <code>wysiwyg additional buttons</code> and <code>wysiwyg additional plugins</code>. Defaults to <code class="data-type">false</code>.</p></td></tr><tr><td><code>wysiwyg menubar</code> <code class="data-type">Boolean</code></td><td><p>Show the menubar for wysiwyg editor. Defaults to <code class="data-type">false</code>.</p><p>See <a href="http://www.tinymce.com/wiki.php/Configuration:menubar">http://www.tinymce.com/wiki.php/Configuration:menubar</a> for more details.</p></td></tr><tr><td><code>wysiwyg importcss</code> <code class="data-type">String</code></td><td><p>Sets the <code class="data-type">content_css</code> and configures the <code class="data-type">importcss</code> plugin for TinyMCE.</p><p>See <a href="http://www.tinymce.com/wiki.php/Configuration:content_css">http://www.tinymce.com/wiki.php/Configuration:content_css</a> for more details.</p></td></tr><tr><td><code>wysiwyg skin</code> <code class="data-type">String</code></td><td><p>Allow you to change the TinyMCE skin. Defaults to <code class="data-type">keystone</code>.</p><p>See <a href="http://www.tinymce.com/wiki.php/Configuration:skin">http://www.tinymce.com/wiki.php/Configuration:skin</a> for more details.<div class="code-header"><h4>Example using wysiwyg options</h4></div><pre><code class="language-javascript">keystone.init({\n\'wysiwyg override toolbar\': false,\n\'wysiwyg menubar\': true,\n\'wysiwyg skin\': \'lightgray\',\n\'wysiwyg additional buttons\': \'searchreplace visualchars,\'\n + \' charmap ltr rtl pagebreak paste, forecolor backcolor,\'\n +\' emoticons media, preview print \',\n\'wysiwyg additional plugins\': \'example, table, advlist, anchor,\'\n + \' autolink, autosave, bbcode, charmap, contextmenu, \'\n + \' directionality, emoticons, fullpage, hr, media, pagebreak,\'\n + \' paste, preview, print, searchreplace, textcolor,\'\n + \' visualblocks, visualchars, wordcount\',\n});</code></pre></p></td></tr></table><a name="services"></a><h2>Services</h2><a name="services-google-analytics"></a><h3>Google Analytics</h3><p>Keystone has support for Google Analytics tracking in the Admin UI. To enable tracking, set the following configuration options:</p><table class="table"><col width="270"/><col/><tr><td><code>ga property</code> <code class="data-type">String</code></td><td><p>Your Google Analytics Property</p><p>Will default to <code class="default-value">process.env.GA_PROPERTY</code></p></td></tr><tr><td><code>ga domain</code> <code class="data-type">String</code></td><td><p>Your Google Analytics Domain</p><p>Will default to <code class="default-value">process.env.GA_DOMAIN</code></p></td></tr></table><p class="note">Note if you only want to include Google Analytics tracking in the front-end of your project, you should use different variable names from those above.</p><a name="services-google-maps"></a><h3>Google Maps</h3><p>Keystone\'s <a href="/docs/database#field_location">Location field type</a> supports integration with the <a href="http://www.morethanamap.com" target="_blank">Google Maps API</a> to auto-improve values (including discovering latitude and longitude) via the <a href="https://developers.google.com/places/documentation/autocomplete" target="_blank"> Places Autocomplete API</a>.</p><p>To enable these features, <a href="https://code.google.com/apis/console/" target"_blank">obtain an API Key from Google</a> and enable the Google Maps v3 and Google Places APIs for it, then set the following options:</p><table class="table"><col width="270"/><col/><tr><td><code>google api key</code> <code class="data-type">String</code></td><td><p>Your Google API browser key, used to authenticate the Javascript Maps API in the Admin UI.</p><p>Will default to <code class="default-value">process.env.GOOGLE_BROWSER_KEY</code></p></td></tr><tr><td><code>google server api key</code> <code class="data-type">String</code></td><td><p>Your Google API server key, used to authenticate requests to the Maps API from the server.</p><p>Will default to <code class="default-value">process.env.GOOGLE_SERVER_KEY</code></p></td></tr><tr><td><code>default region</code> <code class="data-type">String</code></td><td><p><strong>Optional</strong> setting to limit autocomplete results to a specific region.</p><p>This option takes a region code, specified as a <a href="http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry" target="_blank">IANA language region</a> subtag.</p><p>Can be specified on a per-field basis by setting the <code>region</code> option on any <code>Location</code> field.</p></td></tr></table><pre><code class="language-javascript">keystone.set(\'google api key\', \'your-browser-key\');\nkeystone.set(\'google server api key\', \'your-server-key\');\nkeystone.set(\'default region\', \'au\'); // optional, will limit autocomplete results to Australia</code></pre><p class="note">Note that the use of the Places Geocoding API is subject to a query limit of 2,500 geolocation requests per day, except with an enterprise license.</p><p class="note">The Places Geocoding API may only be used in conjunction with a Google map; geocoding results without displaying them on a map is prohibited. Please make sure your Keystone app complies with the Google Maps API License.</p><a name="services-amazons3"></a><h3>Amazon S3</h3><p>KeystoneJS supports <a href="http://aws.amazon.com/s3/" target="_blank">Amazon S3</a> for file upload and hosting, with the <a href="/docs/database#field_s3file">S3File</a> field type.</p><p>To use the S3File field in your app, <a href="https://portal.aws.amazon.com/gp/aws/developer/subscription/index.html?productCode=AmazonS3" target="_blank">sign up for an account</a>, create an <strong>S3 bucket</strong>, and get your <strong>key</strong> and <strong>secret</strong>.</p><p>Then set the <code>s3 config</code> option to an object containing your configuration (see example below).</p><p>Alternatively, set the <code class="default-value">S3_BUCKET</code>, <code class="default-value">S3_KEY</code> and <code class="default-value">S3_SECRET</code> environment variables.</p><pre><code class="language-javascript">keystone.set(\'s3 config\', { bucket: \'my-bucket\', key: \'my-key\', secret: \'my-secret\' });</code></pre><p>The config object can also contain a \'default headers\' property. This property should be either an <code class="data-type">Object</code> or an <code class="data-type">Array</code>.</p><pre><code class="language-javascript">keystone.set(\'s3 config\', { \n	bucket: \'my-bucket\', \n	key: \'my-key\', \n	secret: \'my-secret\',\n	\'default headers\':  {\n    \'x-amz-meta-X-Default-Header\': \'Custom Default Value\'\n  }\n});\n\n</code></pre><a name="services-azure"></a><h3>Windows Azure Storage</h3><p>KeystoneJS supports <a href="http://www.windowsazure.com/" target="_blank">Windows Azure Storage</a> for file upload and hosting, with the <a href="/docs/database#field_azurefile">AzureFile</a> field type.</p><p>To use the AzureFile field in your app, <a href="http://www.windowsazure.com/pricing/free-trial/" target="_blank">sign up for an account</a>, enter into <a href="https://manage.windowsazure.com/">Azure Management Portal</a>. Create a storage account with new(button), data services, storage. In storage account page get the access (account name, key (valid primary or secondary key)) with the button "manage access key".</p><p>Then set the <code>azurefile config</code> option to an object containing your configuration (see example below).</p><p>Alternatively, set the <code class="default-value">AZURE_STORAGE_ACCOUNT</code> and <code class="default-value">AZURE_STORAGE_ACCESS_KEY</code> environment variables.</p><p>Note that the <strong>account</strong> property should be set to your <strong>storage account</strong>, <em>not your user account</em>.</p><pre><code class="language-javascript">keystone.set(\'azurefile config\', { account: \'my storage account\', key: \'secret api key\' });</code></pre><a name="services-cloudinary"></a><h3>Cloudinary</h3><p><a href="http://cloudinary.com" target="_blank">Cloudinary</a> is an image upload / resizing / hosting service that makes it easy to implement image management in your KeystoneJS app using the <a href="/docs/database#field_cloudinaryimage">CloudinaryImage</a> and <a href="/docs/database#field_cloudinaryimages">CloudinaryImages</a> field types.</p><p>To use the Cloudinary Image fields in your app, <a href="https://cloudinary.com/users/register/free" target="_blank">sign up for an account</a> (Cloudinary offers a free tier with up to 500MB storage, 50,000 images and 1GB data transfer) and get your <strong>cloud name</strong>, <strong>api key</strong> and <strong>api secret</strong>.</p><p>Then set the <code>cloudinary config</code> option to<ul><li>an object containing your configuration (see example below), or</li><li>the environment variable string Cloudinary gives you (e.g. <code class="default-value">cloudinary://api_key:api_secret@cloud_name</code>)</li></ul></p><p>This option will default to the <code class="default-value">CLOUDINARY_URL</code> environment variable if it is set.</p><p>When images are uploaded to Cloudinary via the Admin UI or field methods, they will have some tags automatically set on them. To prefix these tags with a custom string, set the <code>cloudinary prefix</code> option.</p><p>The built-in tags that are automatically set include:<ul><li><code class="default-value">{list.path}_{field.path}</code></li><li><code class="default-value">{list.path}_{field.path}_{item.id}</code></li><li><code class="default-value">{prefix}</code> (if set)</li><li><code class="default-value">dev</code> (if the <code>env</code> option is not set to <code class="default-value">production</code>)</li></ul></p><p>You may optionally enabled the Cloudinary upload folder option by setting the Keystone <code>cloudinary folders</code> option to <code class="default-value">true</code>. The default Cloudinary folder will be set based on the following rules:<ul><li><code class="default-value">{list.path}/{field.path}/</code> (when <code>cloudinary prefix</code> is not set)</li><li><code class="default-value">{prefix}/{list.path}/{field.path}/</code> (when <code>cloudinary prefix</code> is set)</li></ul></p><p class="note"> \nYou may override the default Cloudinary folder by setting the <code class="default-value">folder</code> option directly on a <code>CloudinaryImage</code> field (see <a href="/docs/database#fieldtypes-cloudinaryimage">CloudinaryImage</a> options) or a <code>CloudinaryImages</code> field (see <a href="/docs/database#fieldtypes-cloudinaryimages">CloudinaryImages</a> options).<br/><br/>If you want Cloudinary to automatically create folders when the <code>cloudinary folders</code> option is set to <code class="default-value">true</code>, make sure you enable "Auto-create folders" in your Cloudinary account "Upload Settings".</p><p>If you are serving over HTTPS and want to ensure that cloudinary images are also serverd over HTTPS, set the <code>cloudinary secure</code> option to <code class="default-value">true</code>.</p><pre><code class="language-javascript">keystone.set(\'cloudinary config\', { cloud_name: \'my-cloud\', api_key: \'abc\', api_secret: \'123\' });\n// or\nkeystone.set(\'cloudinary config\', \'cloudinary://api_key:api_secret@cloud_name\' );\n \n// optional, will prefix all built-in tags with \'keystone_\'\nkeystone.set(\'cloudinary prefix\', \'keystone\');\n \n// optional, will prefix each image public_id with [{prefix}]/{list.path}/{field.path}/\nkeystone.set(\'cloudinary folders\', true);\n \n// optional, will force cloudinary to serve images over https\nkeystone.set(\'cloudinary secure\', true);</code></pre><a name="services-embedly"></a><h3>Embed.ly</h3><p><a href="http://embed.ly" target="_blank">Embed.ly</a> is a service that will parse a url (e.g. Youtube embed link) and return a whole lot of useful information, like the provider name, summary metadata, width and height of videos, as well as a clean link to use for embedding media in your views. They offer a free plan for up to 5,000 urls per month.</p><p>The <a href="/docs/database#field_embedly">Embedly field type</a> is an easy way to integrate their API with your KeystoneJS app.</p><p>To configure KeystoneJS to support the Embed.ly API, simply <a href="https://app.embed.ly/signup">sign up for an account</a>, get your api key, and set the <code>embedly api key</code> option.</p><p>This option will default to the <code class="default-value">EMBEDLY_API_KEY</code> environment variable if it is set.</p><pre><code class="language-javascript">keystone.set(\'embedly api key\', \'your-key\');</code></pre><a name="services-mandrill"></a><h3>Mandrill</h3><p><a href="http://mandrill.com" target="_blank">Mandrill</a> is a scalable and affordable email infrastructure service that allows you to send emails easily. They offer a free plan for up to 12,000 emails per month.</p><p>To configure KeystoneJS to support the Mandrill API, simply <a href="https://mandrill.com/signup/">sign up for an account</a>, get your api key, and set both the <code>mandrill api key</code> and <code>mandrill username</code> options.</p><p>These options will default to the <code class="default-value">MANDRILL_API_KEY &amp; MANDRILL_USERNAME</code> environment variable\'s if set.</p><pre><code class="language-javascript">keystone.set(\'mandrill api key\', \'your-key\');\nkeystone.set(\'mandrill username\', \'your-username\');</code></pre><a name="updates"></a><h2>Application Updates</h2><p>Keystone includes an updates framework, which you can enable by setting the <code>auto update</code> option to <code class="default-value">true</code>.</p><p>Updates provide an easy way to seed your database, transition data when your models change, or run transformation scripts against your database.</p><p>Update files should be named using a semantic version followed by an optional key, like <code>0.0.1-init.js</code>. The version numbers are used to order the update scripts correctly, while the keys are a nice way to identify what each update does.</p><p>Each update file should export a single function, which should accept a single argument - the <code>next(err)</code> callback, to be called when the update is complete.</p><p>All the update files will be executed (each one waits for the previous update to complete) before the web server is started.</p><p>If the <code>next</code> callback is receives an error it will be reported to the console, and application initialisation will halt.</p><p>You can temporarily disable updates from running in development by setting a <code>__defer__</code> property on the exported function to <code>true</code>. Any subsequent updates will be skipped, but the application will be started.</p><p>Updates are only run once, and each completed update is logged in an <code>app_updates</code> collection in your database.</p><div class="code-header"><h4>Update Script Example</h4><p>Creates a new admin User</p></div><pre><code class="language-javascript">var keystone = require(\'keystone\'),\n    User = keystone.list(\'User\');\n \nexports = module.exports = function(done) {\n    new User.model({\n        name: { first: \'Admin\', last: \'User\' },\n        password: \'admin\',\n        isAdmin: true\n    }).save(done);\n};</code></pre><a name="headless"></a><h2>Disabling the Admin UI</h2><p>You can disable the Admin UI by setting the <code>headless</code> option to <code class="default-value">true</code>.</p><p>This will allow you to use <code>keystone.start()</code> or <code>keystone.routes(app)</code> without Keystone creating route bindings for the Admin UI routes under <code class="default-value">/keystone</code>.</p></div></div></div></div>');
}.call(this,"docsnav"in f?f.docsnav:"undefined"!=typeof docsnav?docsnav:void 0,"docssection"in f?f.docssection:"undefined"!=typeof docssection?docssection:void 0),d.join("")},"en/pages/docs/database":function(a){var c,d=[],e={},f=a||{};return function(a,f){e.docsnav=c=function(e){this&&this.block,this&&this.attributes||{};d.push('<div class="visible-xs"><ul class="nav-toggle">'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}}}.call(this),d.push('</ul></div><nav class="docs-sidebar hidden-xs"><ul class="sidebar-nav"><li'+b.cls(["introduction"==e.value?"active":null],[!0])+'><a href="/docs" class="nav-heading">Welcome</a></li>'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}}}.call(this),d.push("</ul><hr/>"),"introduction"!=e.value&&(d.push('<ul class="sidebar-nav">'),function(){var b=a;if("number"==typeof b.length)for(var c=0,f=b.length;f>c;c++){var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}else{var f=0;for(var c in b){f++;var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}}}.call(this),d.push("</ul>")),d.push("</nav>")},d.push('<div class="page-header"><div class="container"><h1>Database</h1><p class="lead">Setting up and using Data Models</p></div></div><div class="container"><div class="row"><div class="col-sm-3">'),e.docsnav(f),d.push('</div><div class="col-sm-9"><div class="docs-content"><h2><a name="concepts"></a>Concepts</h2><div class="alert alert-warning"><p>KeystoneJS requires MongoDB v2.4 or greater.</p></div><p>In KeystoneJS, your data schema and models are controlled by <strong>Lists</strong>, and documents in your database are often called <strong>Items</strong>.</p><p>To define a data model, you create a <code>new keystone.List</code>, and pass it <a href="#lists-options">list options</a>. </p><p>You then <code>add</code> fields to the list. Behind the scenes, a Keystone List will create a <a href="http://mongoosejs.com/docs/guide.html" target="_blank">mongoose schema</a>, and add the appropriate paths to it for the fields you define.</p><p>The <code>schema</code> is accessible, allowing you to plug in other mongoose functionality like virtuals, methods and pre / post hooks.</p><p>When you have finished setting up your List, call <code>list.register()</code> to initialise it and register it with Keystone.</p><p>To query your data, you use the <code>list.model</code> (which is a <a href="http://mongoosejs.com/docs/models.html" target="_blank">mongoose model</a>).</p><p>List Items are <a href="http://mongoosejs.com/docs/documents.html" target"_blank">mongoose documents</a>. To create new items, use <code>new list.model()</code> and when you\'re ready to save it (or to save changes to an existing Item), call <code>item.save()</code>.</p><a name="lists"></a><h2>Lists</h2><a name="lists-usage"></a><h3>Usage</h3><h4><code>new keystone.List(key[, options]);</code></h4><p>The syntax for creating a <strong>Keystone List</strong> is very similar to the syntax for creating a Mongoose Schema, with the exception of the constructor, which is <code class=\'default-value\'>var MyList = new keystone.List(key, options)</code>.</p><p>Once you have created a new List, add fields to it using <code>MyList.add(fields)</code>, where fields is an object of keys (for field paths) and values (for field types, or options).</p><p>Fields are defined by an object with a <code>type</code> property, which must be a valid Field Type or basic data type. Using the object syntax you can specify additional options for the field. Common field options and field-type-specific options are detailed in the fields documentation.</p><p>When all the fields and options have been set on the list, call <code>MyList.register()</code> to register the list with Keystone and finalise its configuration.</p><a name="lists-example"></a><h3>Example</h3><p>A simple Post model for a blog might look like this:</p><div class="code-header"><h4>Post.js</h4></div><pre><code class="language-javascript">var keystone = require(\'keystone\'),\n    Types = keystone.Field.Types;\n \nvar Post = new keystone.List(\'Post\', {\n    autokey: { path: \'slug\', from: \'title\', unique: true },\n    map: { name: \'title\' },\n    defaultSort: \'-createdAt\'\n});\n \nPost.add({\n    title: { type: String, required: true },\n    state: { type: Types.Select, options: \'draft, published, archived\', default: \'draft\' },\n    author: { type: Types.Relationship, ref: \'User\' },\n    createdAt: { type: Date, default: Date.now },\n    publishedAt: Date,\n    image: { type: Types.CloudinaryImage },\n    content: {\n        brief: { type: Types.Html, wysiwyg: true, height: 150 },\n        extended: { type: Types.Html, wysiwyg: true, height: 400 }\n    }\n});\n \nPost.defaultColumns = \'title, state|20%, author, publishedAt|15%\'\nPost.register();</code></pre><div class="contextual-note"><h4>Explanation</h4><p>This example implements the optional <code>map</code>, <code>autokey</code> and <code>defaultSort</code> options, described below.</p><p>The Admin UI will look for <code>map: { name: \'FieldFromDoc\'}</code> first, then a document field <code>name</code>, and if those are not available use <code>doc._id</code> as the default column when viewing lists.</p><p>Our example also specifies <code>title</code>, <code>state</code>, <code>author</code> and <code>publishedAt</code> as the default columns to display in the Admin UI, with state and publishedAt being given column widths. </p><p>The <code>author</code> field is a relationship with the <code>User</code> model, as described in the <a href="#relationships">Relationships</a> section.  </p></div><a name="lists-options"></a><h3>Options</h3><p>Lists support the following options:</p><table class="table"><col width="210"/><col/><tr><td><code>autokey</code> <code class="data-type">Object</code></td><td>Adds a plugin to the list that automatically generates a key for each document when it is saved, based on the value of another field or path. The value of the option should be an object with the following keys:<ul class="options"><li><code>from</code> <code class="data-type">String</code> - the field or path to generate the key from, can be a space-delimited list of fields</li><li><code>path</code> <code class="data-type">String</code> - the path to store the key at</li><li><code>unique</code> <code class="data-type">Boolean</code> - whether the key should be unique or not</li><li><code>fixed</code> <code class="data-type">Boolean</code> - the key should be kept if it exists and it\'s non-empty. Defaults to <code class="data-type">false</code>.</li></ul><em>Autokey paths are automatically indexed; you may also want to include them in compound indexes.</em></td></tr><tr><td><code>defaultColumns</code> <code class="data-type">String</code></td><td>A comma-delimited list of default columns to display in the Admin UI List View.\n You can specify width in either pixels or percent after a <code>|</code> pipe character.</td></tr><tr><td><code>defaultSort</code> <code class="data-type">String</code></td><td>The default column or path to sort on in the Admin UI</td></tr><tr><td><code>drilldown</code> <code class="data-type">String</code></td><td>A space-delimited list of relationships to display as drilldown in the Admin UI</td></tr><tr><td><code>hidden</code> <code class="data-type">Boolean</code></td><td>Hides the list in the Keystone Admin UI</td></tr><tr><td><code>inherits</code> <code class="data-type">List</code></td><td>A list object that you would like to inherit fields from.</td></tr><tr><td><code>label</code> <code class="data-type">String</code></td><td>The label used for the list in the Admin UI. Defaults to a friendly form of <code class="default-value">key</code></td></tr><tr><td><code>map</code> <code class="data-type">Object</code></td><td>An object that maps fields to special <strong>list</strong> paths. Each path defaults to its key if a field with that key is added. Mappable paths include<ul class="options"><li><code>name</code> - the field that contains the name of the item, for display in the Admin UI</li></ul></td></tr><tr><td><code>nocreate</code> <code class="data-type">Boolean</code></td><td>Prevents creation of new items in the list through the Keystone Admin UI</td></tr><tr><td><code>nodelete</code> <code class="data-type">Boolean</code></td><td>Prevents deletion of items from the list through the Keystone Admin UI</td></tr><tr><td><code>noedit</code> <code class="data-type">Boolean</code></td><td>Prevents editing of items in the list through the Keystone Admin UI</td></tr><tr><td><code>path</code> <code class="data-type">String</code></td><td>The path used for the list in the Admin UI. Defaults to a slugified form of <code class="default-value">key</code>.</td></tr><tr><td><code>perPage</code> <code class="data-type">Number</code></td><td>The number of List items to display per page. Defaults to 50.</td></tr><tr><td><code>plural</code> <code class="data-type">String</code></td><td>The plural label for the items in the list. Used in the Admin UI, defaults to a plural form of <code class="default-value">singular</code></td></tr><tr><td><code>schema</code> <code class="data-type">String</code></td><td><p>Options for the Mongoose Schema for the List. Among other things, this option lets you specify a custom name for the <strong>collection</strong>. See the <a href="http://mongoosejs.com/docs/guide.html#options" target="_blank">mongoose schema docs</a> for a list of available options.</p><p><em>Warning: do not modify the <code>id</code> or <code>_id</code> schema options; the default behaviour is required by Keystone</em></p></td></tr><tr><td><code>searchFields</code> <code class="data-type">String</code></td><td>A comma-delimited list of paths to use for searching in Admin UI</td></tr><tr><td><code>singular</code> <code class="data-type">String</code></td><td>The singular label for the items in the list. Used in the Admin UI, defaults to a singular form of <code class="default-value">label</code></td></tr><tr><td><code>sortContext</code> <code class="data-type">String</code></td><td>A <code>List:relationship</code> pair to control when drag and drop sorting is available in the Admin UI</td></tr><tr><td><code>sortable</code> <code class="data-type">Boolean</code></td><td>Adds a hidden field <code>sortOrder</code> to the schema, and enables drag and drop sorting in the Admin UI</td></tr><tr><td><code>track</code> <code class="data-type">Boolean or Object</code></td><td><p>Adds a plugin to the list that automatically keeps track of when and who (i.e. which Keystone user) created and last updated an item.</p><p>When set to <code class="data-type">true</code> all tracking fields are enabled using their default names.</p><p>You may also selectively enable each field and optionally specify a custom field name by setting <code>track</code> to an <code class="data-type">object</code> with any or all the following fields:</p><ul class="options"><li><code>createdAt</code> <code class="data-type">Boolean/String</code> - when set to <code class="data-type">true</code>, enables tracking when the item was created (using the default field name <em>createdAt</em>). To use a custom field name set to a <code class="data-type">String</code> with the desired name. Defaults to <code class="data-type">false</code>.</li><li><code>createdBy</code> <code class="data-type">Boolean/String</code> - when set to <code class="data-type">true</code>, enables tracking which user created the item (using the default field name <em>createdBy</em>). To use a custom field name set to a <code class="data-type">String</code> with the desired name. Defaults to <code class="data-type">false</code>.</li><li><code>updatedAt</code> <code class="data-type">Boolean/String</code> - when set to <code class="data-type">true</code>, enables tracking when the item was last updated (using the default field name <em>updatedAt</em>). To use a custom field name set to a <code class="data-type">String</code> with the desired name. Defaults to <code class="data-type">false</code>.</li><li><code>updatedBy</code> <code class="data-type">Boolean/String</code> - when set to <code class="data-type">true</code>, enables tracking which user last updated the item (using the default field name <em>updatedBy</em>). To use a custom field name set to a <code class="data-type">String</code> with the desired name. Defaults to <code class="data-type">false</code>.</li></ul><p class="note">The <code>createdBy</code> and <code>updatedBy</code> fields are only automatically updated when adding/modifying items via the Keystone Admin UI. However, if you intend to add/modify items from within your own app, you must manually set the <code>._req_user</code> property of the item to the currently logged on user (<code>req.user</code>) prior to saving the item, as shown in the example below.</p><pre><code class="language-javascript">var item = new List.model();\nitem.set({ field1: \'value1\', field2: \'value2\' });\nitem._req_user = req.user;\nitem.save();</code></pre></td></tr></table><p class="note">If you\'re wondering how to control which navigation area Lists are categorised under in the Admin UI, check out the <code>nav</code> option in the <a href="http://keystonejs.com/docs/configuration/#options-project">KeystoneJS Configuration</a> docs.</p><h4>Drilldown example</h4><p>The drilldown option is a nice way to improve the usability of the Admin UI by providing context to the item a user is currently editing.</p><p>By default, the drilldown will just show the list that the item belongs to.</p><p>You can, however, set it to a <code>Relationship</code> field in the schema, and it will display the item currently stored in that relationship field.</p><p>If there would be several relationships that may be  to display in the drilldown list, you can separate their paths with spaces.</p><div class="code-header"><h4>Example: Including the author in the drilldown for Posts</h4></div><pre><code class="language-javascript">var Post = new keystone.List(\'Post\', {\n    autokey: { path: \'slug\', from: \'title\', unique: true },\n    map: { name: \'title\' },\n    defaultSort: \'-createdAt\',\n    drilldown: \'author\' // author is defined as a Relationship field in the example above\n});</code></pre><h4>Inheritance example</h4><p>The inheritance option can be used to allow a list to inherit its fields from another list using Mongoose <a href="http://mongoosejs.com/docs/3.7.x/docs/api.html#model_Model.discriminator">model discriminators</a></p><p>Parent lists may not themselves inherit from other lists.</p><div class="code-header"><h4>Example: Inheriting List fields from other lists</h4></div><pre><code class="language-javascript">var keystone = require(\'keystone\');\n \nvar BasePage = new keystone.List(\'BasePage\', {\n   map: { name: \'title\' },\n	    autokey: { path: \'slug\', from: \'title\', unique: true },\n	});\nBasePage.add(\n	{\n		title: { type: String, required: true },\n		slug: { type: String, readonly: true },\n	}\n);\nBasePage.register();\n \nvar ChildPage = new keystone.List(\'ChildPage\', { inherits: BasePage });\nChildPage.add({ child_content: { type: String, readonly: true } });\nChildPage.register();</code></pre><a name="lists-plugins"></a><h3>Schema Plugins</h3><p>You can specify <a href="http://mongoosejs.com/docs/guide.html" target="_blank"><strong>virtuals</strong>, <strong>methods</strong>, <strong>statics</strong></a> as well as <a href="http://mongoosejs.com/docs/middleware.html" target="_blank"><strong>pre</strong> and <strong>post</strong> hooks</a> for your <strong>Lists</strong> using the <code>schema</code>. You can also use <a href="http://mongoosejs.com/docs/plugins.html" target="_blank">mongoose plugins</a> from the <a href="http://plugins.mongoosejs.com" target="_blank">plugins website</a>.</p><p>For example, in our <strong>Post</strong> list above, we might want to automatically set the <code>publishedAt</code> value when the <code>state</code> is changed to <code>published</code> (but only if it hasn\'t already been set).</p><p>We might also want to add a method to check whether the post is published, rather than checking the <code>state</code> field value directly.</p><p>Before calling <code>Post.register()</code>, we would add the following code:</p><pre><code class="language-javascript">Post.schema.methods.isPublished = function() {\n    return this.state == \'published\';\n}\n \nPost.schema.pre(\'save\', function(next) {\n    if (this.isModified(\'state\') &amp;&amp; this.isPublished() &amp;&amp; !this.publishedAt) {\n        this.publishedAt = new Date();\n    }\n    next();\n});</code></pre><a name="lists-querying"></a><h3>Querying Data</h3><p>To query data, you can use any of the <a href="http://mongoosejs.com/docs/queries.html" target="_blank">mongoose query</a> methods on the <code>list.model</code>.</p><p><strong>For example:</strong> to load the last 5 <code>posts</code> with the state <code>published</code>, populating the linked <code>author</code>, sorted by reverse published date:</p><div class="code-header"><h4>Loading Posts</h4></div><pre><code class="language-javascript">var keystone = require(\'keystone\'),\n    Post = keystone.list(\'Post\');\n \nPost.model.find()\n    .where(\'state\', \'published\')\n    .populate(\'author\')\n    .sort(\'-publishedAt\')\n    .limit(5)\n    .exec(function(err, posts) {\n        // do something with posts\n    });</code></pre><p><strong>Promises</strong></p><p>There exists another way to work with events in Javascript that is included in mongoose query methods. Instead of passing a <a href="http://javascriptissexy.com/understand-javascript-callback-functions-and-use-them/" target="_blank">callback</a> to the  <a href="http://mongoosejs.com/docs/api.html#query_Query-exec" target="_blank">exec</a> method, we can use what it returns: a <a href="http://www.html5rocks.com/en/tutorials/es6/promises/" target="_blank">Promise</a>. Promises are very useful for clean chaining of events with propagation of error.</p><p><strong>For example:</strong> load 100 <code>posts</code>, then do something asynchronous, then do something with result:</p><div class="code-header"><h4>Loading Posts, doing something asynchronous, doing something</h4></div><pre><code class="language-javascript">var keystone = require(\'keystone\'),\n    Post = keystone.list(\'Post\');\n \nPost.model.find()\n    .limit(100)\n    .exec()\n    .then(function (posts) { //first promise fulfilled\n        //return another async promise\n    }, function (err) { //first promise rejected\n        throw err;\n    }).then(function (result) { //second promise fulfilled\n        //do something with final results\n    }, function (err) { //something happened\n        //catch the error, it can be thrown by any promise in the chain\n        console.log(err);\n    });</code></pre><a name="lists-paginate"></a><h3>Pagination Querying</h3><p>To query data with pagination, you can use <code>List.paginate()</code>,it returns a query object, just as <code>List.model.find()</code> would. It supports the options</p><ul><li><code>page</code> - page to start at</li><li><code>perPage</code> - number of results to return per page</li><li><code>maxPages</code> - optional, causes the page calculation to omit pages from the beginning/middle/end(useful if you have lots of pages, and do not want them to wrap over several lines).</li></ul><p><strong>For example:</strong> to load the <code>posts</code> with the <code>maxPages</code> 10 and <code>perPage</code> 10,which state is <code>published</code>, populating the linked <code>author</code> and <code>categories</code>, sorted by reverse published date:</p><div class="code-header"><h4>Loading Posts with paginate</h4></div><pre><code class="language-javascript">var keystone = require(\'keystone\'),\n    Post = keystone.list(\'Post\');\n \n Post.paginate({\n		page: req.query.page || 1,\n		perPage: 10,\n		maxPages: 10\n	})\n	.where(\'state\', \'published\')\n	.sort(\'-publishedDate\')\n	.populate(\'author categories\')\n	.exec(function(err, results) {\n		locals.data.posts = results;\n		next(err);\n	});</code></pre><p>When you call <code>exec</code> on a paginated query, it will return a lot of metadata along with the results:</p><ul><li><code>total</code>: all matching results (not just on this page)</li><li><code>results</code>: array of results for this page</li><li><code>currentPage</code>: the index of the current page</li><li><code>totalPages</code>: the total number of pages</li><li><code>pages</code>: array of pages to display</li><li><code>previous</code>: index of the previous page, false if at the first page</li><li><code>next</code>: index of the next page, false if at the last page</li><li><code>first</code>: the index of the first result included</li><li><code>last</code>: index of the last result included</li></ul><a name="lists-creating"></a><h3>Creating Items</h3><p>To create new items, again use the <a href="http://mongoosejs.com/docs/models.html" target"_blank">mongoose model</a>:</p><div class="code-header"><h4>Creating Posts</h4></div><pre><code class="language-javascript">var keystone = require(\'keystone\'),\n    Post = keystone.list(\'Post\');\n \nvar newPost = new Post.model({\n    title: \'New Post\'\n});\n \nif (shouldBePublished) {\n    newPost.state = \'published\';\n}\n \nnewPost.save(function(err) {\n    // post has been saved	\n});</code></pre><div class="contextual-note"><h4>Automatic keys</h4><p>Because we set the <code>autokey</code> option on our <code>Post</code> list, it will have generated a unique key based on the <code>title</code> before it was saved to the database.</p><pre>newPost.slug == \'new-post\';</pre></div><a name="lists-deleting"></a><h3>Deleting Items</h3><p>To delete items, first load the data, then use the <code>remove</code> method:</p><div class="code-header"><h4>Deleting a Post</h4></div><pre><code class="language-javascript">var keystone = require(\'keystone\'),\n    Post = keystone.list(\'Post\');\n \nPost.model.findById(postId)\n    .remove(function(err) {\n        // post has been deleted\n    });</code></pre><!-- TODO: Documentation for Schema features (virtuals, methods, statics and hooks)--><!-- TODO: Documentation for Update Handler--><a name="headings"></a><h2>Headings</h2><p>Define headings to display within the flow of your documents.  Headings can be defined as a <code>String</code> or <code>Object</code> and can <a href="#dependsOn">depend on</a> another field value for display.</p><pre><code class="language-javascript">Person.add(\n	\'User\', \n	{ name: { type: Types.Name, required: true, index: true, initial: true } }, \n	\'Permissions\', \n	{ isAdmin: { type: Boolean, label: \'Can access Keystone\', index: true } },\n	// header object\n	{ heading: \'Activities\' }, \n	{ place: { type: Types.Select, options: [\'GT\', \'UGA\'] } },\n	// header with dependsOn\n	{ heading: "GT Activities", dependsOn: { place: \'GT\' } },\n	{ type: { type: Types.Select, options: [\'ZC\', \'MP\'], dependsOn: { place: \'GT\'} }\n);</code></pre><div class="options"><h5>Options</h5><p><code>heading</code> <code class="data-type">String</code> - the text to display</p><p><code>dependsOn</code> <code class="data-type">Object</code> - heading will only be displayed when the paths specified in the object match the current data for the item. <a href="#dependsOn">dependsOn</a></p></div><a name="fields"></a><h2>Fields</h2><p>When adding <strong>fields</strong> to <strong>Lists</strong>, you can either specify basic data types or Keystone Field Types.</p><a name="fields-overview"></a><h3>Overview</h3><p><strong>Keystone Fields</strong> allow you to easily add rich, functional fields to your application\'s models. They are designed to describe not just the <em>structure</em> of your data, but also the <em>intention</em> of your data. They provide:</p><ul><li>Rich controls in Keystone\'s Admin UI</li><li>Complex data types; e.g. the <code>location</code> field stores several strings and an GeoJSON lng/lat point</li><li>Formatting and validation methods</li><li>Additional virtual properties; e.g. the <code>name</code> field provides a <code>name.full</code> virtual which concatenates the stored <code>name.first</code> and <code>name.last</code></li><li>Underscore methods; e.g. the <code>password</code> field provides a <code>password.compare</code> method for testing against the encrypted hash</li><li>Metadata about how fields relate to each other; e.g. which fields depend on certain values in other fields</li></ul><p>Basic data types are mapped to their corresponding Keystone field types:</p><table style="width:200px" class="table"><col/><col/><thead><th>Data type</th><th>Field type</th></thead><tr><td><code class="data-type">String</code></td><td><code class="data-type">Text</code></td></tr><tr><td><code class="data-type">Number</code></td><td><code class="data-type">Number</code></td></tr><tr><td><code class="data-type">Date</code></td><td><code class="data-type">DateTime</code></td></tr><tr><td><code class="data-type">Boolean</code></td><td><code class="data-type">Boolean</code></td></tr></table><a name="fields-options"></a><h3>Field Options</h3><p>All field types support several common options, which can specify database settings (such as <code>index</code> and <code>default</code>), or can provide information for Keystone\'s Admin UI (such as <code>label</code>).</p><p class="note">Fields can be nested inside objects, as in mongoose schemas.</p><p class="note">All <a href="http://mongoosejs.com/docs/schematypes.html" target="_blank">mongoose schema type options</a> are passed to the <a href="http://mongoosejs.com/docs/guide.html" target="_blank">mongoose schema</a>, so you can also use any options mongoose supports.</p><p>Common field options include:</p><table class="table"><col width="210"/><col/><tr><td><code>label</code> <code class="data-type">String</code></td><td>The label of each field is generated from the field path; set this option to override the default.</td></tr><tr><td><code>required</code> <code class="data-type">Boolean</code></td><td>Validates that the field has a value before an item can be saved (<em>also passed to mongoose and enforced using a database index</em>).</td></tr><tr><td><code>initial</code> <code class="data-type">Boolean</code></td><td>Causes the field to be displayed in the <strong>Create Item</strong> form, in the Admin UI.</td></tr><tr><td><code>noedit</code> <code class="data-type">Boolean</code></td><td>Renders the field as read-only in the admin UI.</td></tr><tr><td><code>note</code> <code class="data-type">String</code></td><td>Is displayed with the field in the admin UI.</td></tr><tr><td><code>hidden</code> <code class="data-type">Boolean</code></td><td>The field will always be hidden in the Admin UI if this is set to <code class="default-value">true</code></td></tr></table><a name="fields-conditional"></a><h3>Conditional Fields</h3><p>To improve the usability of the Admin UI, it is possible to hide fields when no value is set, or depending on the value of other fields.</p><table class="table"><col width="210"/><col/><tr><td><code>collapse</code> <code class="data-type">Boolean</code></td><td>Displays an <strong>+ <u>add</u></strong> link in the admin UI when the field has no value. Will completely hide field UI when <code>noedit</code> is also set to true, when the field has no value</td></tr><tr><td><a name="dependsOn"><code>dependsOn</code> <code class="data-type">Object</code></a></td><td><p>The field or header will only be displayed when the paths specified in the object match the current data for the item.<p>You can target multiple values per path using an Array.</p><div class="code-header"><h4>Example</h4></div><pre><code class="language-javascript">first: { type: String },\n// Will show if first === "value1", "1" or "2"\nsecond: { type: String, dependsOn: { first: [\'value1\', \'1\', 2] } },\n// Will show if first == "value1"\nthird: { type: String, dependsOn: { first: \'value1\' } }</code></pre></p></td></tr></table><a name="fields-watching"></a><h3>Generated values and watching fields</h3><p>Keystone\'s fields support a simple syntax for configuring dynamically updated fields. You can set a field to update its value whenever:</p><ul><li>The item is saved</li><li>The value of any other field (or fields) changes</li><li>The value of any other field (or fields) changes to a specific value</li></ul><p>To use the watching functionaliy, set the following two options:</p><table class="table"><col width="210"/><col/><tr><td><code>watch</code> <code class="data-type">Boolean</code> or <code class="data-type">String</code> or <code class="data-type">Object</code> or <code class="data-type">Function</code></td><td><p>When <code class="default-value">true</code>, the field value will be recalculated every time an item is saved. <br></p><p>Provide a space-delimited list of paths to recalculate the field value whenever one of those paths changes. <br><strong>For example:</strong> <code class="default-value">\'author title state\'</code></p><p>Provide an object of key / value pairs to recalculate the field value whenever one of those paths changes to the value specified. <br><strong>For example:</strong> <code class="default-value">{\'state\': \'published\', \'mainPost\': true}</code></p><p>Provide a function that returns true/false whenever you want. <br><strong>For example:</strong> <code class="default-value">function() { return this.author === this.editor; }</code></p></td></tr><tr><td><code>value</code> <code class="data-type">Function</code></td><td><p>The function to generate the field value when a watched path is changed. Must return the new value, or accept a node-style <code>callback</code> argument, which can be called to set the field value asynchronously.</p><p>The <code>this</code> context of the function will be the item being saved.</p><div class="code-header"><h4>Example (synchronous)</h4></div><pre><code class="language-javascript">function () {\n    return this.total<=this.totalreceived ? true:false;\n}</code></pre><div class="code-header"><h4>Example (asynchronous)</h4></div><pre><code class="language-javascript">function (callback) { // BEWARE: MUST be called "callback" to allow asynchronous execution\n	list.model.findById(this.createdBy).exec(function(err, user){\n		callback(err, user.name + "-" + Date.now());\n	});\n}</code></pre></td></tr></table><a name="fields-underscoremethods"></a><h3>Underscore Methods</h3><p>Some field types include helpful <strong>underscore methods</strong>, which are available on the item at the field\'s path preceded by an underscore.</p><p><strong>For example</strong>: use the <code>format</code> underscore method of the <code>createdAt</code> <code class="data-type">DateTime</code> field of the Posts List (above) like this</p><pre><code class="language-javascript">var keystone = require(\'keystone\'),\n    Post = keystone.list(\'Post\');\n \nPost.model.findById(postId).exec(function(err, post) {\n   console.log(post._.createdAt.format(\'Do MMMM YYYY\')); // 25th August 2013\n});</code></pre><a name="relationships"></a><h2>Relationships</h2><p>Keystone enhances MongoDB\'s ability to store the ObjectIDs of related documents in a field (or many related ObjectIDs in an Array) with support for Relationship fields and Definitions in Models.</p><a name="relationship-fields"></a><h3>Relationship Fields</h3><h4><code class="data-type">ObjectId</code> or <code class="data-type">Array</code> &mdash; Displayed as an auto-suggest field in the Admin UI</h4><p>Stores references to ObjectIDs from another Model in an ObjectID field or array to create one-many or many-many relationships.</p><p>Specify the related Model using the <code>ref</code> option. For a many-many relationship, set the <code>many</code> option to <code class="default-value">true</code>.</p><p>For example, if you wanted to link a <strong>Post</strong> model to a single <strong>Author</strong> and many <strong>PostCategories</strong>, you would do it like this:</p><pre><code class="language-javascript">Post.add({\n    author: { type: Types.Relationship, ref: \'User\' },\n    categories: { type: Types.Relationship, ref: \'PostCategory\', many: true }\n});</code></pre><h5>Relationship Filters</h5><p>You can filter a relationship field using the <code>filters</code> option.</p><p>The <code>filters</code> option is an object of key/value pairs, in which the keys correspond to the fields of the related model to be filtered, and the values will either be literals or field names in the current model, the value of which will be used to filter the relationship.</p><p>In the example below, the <code>author</code> field will only allow selection of a <code>User</code> whose <code>group</code> field is equal to \'admin\'.</p><pre><code class="language-javascript">Post.add({\n    title: { type: String, required: true },\n    category: { type: Types.Select, options: \'user, editor, admin\', default: \'user\' },\n    author: { type: Types.Relationship, ref: \'User\', filters: { group: \'admin\' } }\n});</code></pre><p>You can also filter by the value of another field on the model. You do this setting the value of the filter to the name of the field, prefixed by a colon (:). </p><p>In the example below, the <code>author</code> field will only allow selection of a <code>User</code> whose <code>group</code> field is equal to the value of the <code>category</code> field of the <code>Post</code> model.</p><pre><code class="language-javascript">Post.add({\n    title: { type: String, required: true },\n    category: { type: Types.Select, options: \'user, editor, admin\', default: \'user\' },\n    author: { type: Types.Relationship, ref: \'User\', filters: { group: \':category\' } }\n});</code></pre><p>Finally, you can also filter by the current model\'s <code>_id</code> field.</p><p>In the example below, the <code>bestPost</code> field will only allow selection of a <code>Post</code> whose <code>author</code> field is equal to the <code>_id</code> of the current document.</p><pre><code class="language-javascript">User.add({\n    name: { type: String, required: true },\n    group: { type: Types.Select, options: \'user, editor, admin\', default: \'user\' },\n    bestPost: { type: Types.Relationship, ref: \'Post\', filters: { author: \':_id\' } }\n});</code></pre><p class="note">You can only set filters on one-many relationships (i.e. when the <code>many</code> option is NOT set to <code class="default-value">true</code>).</p><h5>Populating related data in queries</h5><p>You can populate related data for relationship fields thanks to <a href="http://mongoosejs.com/docs/populate.html" target="_blank">Mongoose\'s populate functionality</a>. To populate the author and category documents when loading a Post from the example above, you would do this:</p><pre><code class="language-javascript">Post.model.findOne().populate(\'author categories\').exec(function(err, post) {\n    // the author is a fully populated User document\n    console.log(post.author.name);\n});</code></pre><p class="note">Note that if no ObjectId is stored, or an invalid ObjectId is stored (e.g. a document has been deleted), <code>author</code> will be <code class="data-type">undefined</code> in the example above.</p><a name="relationship-definitions"></a><h3>Relationship Definitions</h3><p>What if, in the example above, you wanted to see a list of the Posts by each Author? Because the relationship field is on the Post, you need to tell the Author (and the PostCategory) Model that it is being referred to. Doing so allows the Admin UI to represent the relationship from both sides.</p><p>You do this by calling the <code>relationship</code> method on the <code>Model</code> like this:</p><pre><code class="language-javascript">User.relationship({ path: \'posts\', ref: \'Post\', refPath: \'author\' });</code></pre><div class="options"><h5>Options</h5><p><code>path</code> <code class="data-type">String</code> - the path of the relationship reference on the Model</p><p><code>ref</code> <code class="data-type">String</code> - the key of the referred Model (the one that has the relationship field)</p><p><code>refPath</code> <code class="data-type">String</code> - the path of the relationship being referred to in the referred Model</p></div><p>As you can see, the options provided to the <code>relationship</code> method mirror those of the relationship field it refers to.</p><p class="note">Relationship definitions are optional; if you leave them out, the relationships simply won\'t be displayed in the Admin UI from the other side of the relationship. The relationship field will still work as expected.</p><a name="relationship-queries"></a><h3>Loading related items</h3><p>Filtering one-to-many related items is easy; simply specify the ID of the item you wish to filter on like any other value:</p><pre><code class="language-javascript">Post.model.find().where(\'author\', author.id).exec(function(err, posts) {\n    // ...\n});</code></pre><p>To filter many-to-many related items, use an <code>in</code> condition and specify one (or more) ids as an array:</p><pre><code class="language-javascript">Post.model.find().where(\'categories\').in([category.id]).exec(function(err, posts) {\n    // ...\n});</code></pre><a name="fieldtypes"></a><h2>Field Types</h2><a name="fieldtypes-boolean"></a><h3><code>Boolean</code></h3><h4><code class="data-type">Boolean</code> &mdash; Displayed as a checkbox in the Admin UI</h4><pre><code class="language-javascript">{ type: Types.Boolean }</code></pre><a name="fieldtypes-code"></a><h3><code>Code</code></h3><h4><code class="data-type">String</code> &mdash; Displayed with CodeMirror in the Admin UI.</h4><pre><code class="language-javascript">{ type: Types.Code, height: 180, language: json }</code></pre><div class="options"><h5>Options</h5><p><code>height</code> <code class="data-type">Number</code> - the height of the field (in pixels). Default: 180</p><p><code>language</code> <code class="data-type">String</code> - the language in the code field.</p>Supported Languages: <code>c++, objectivec, css, asp, c, vb, xml, php, html, ini, js, java, coffee, lisp, perl, python, sql, json, less, sass, sh, ruby, jsp, tpl, jade</code></div><a name="fieldtypes-color"></a><h3><code>Color</code></h3><h4><code class="data-type">Color</code> &mdash; Displayed as a text field with a color picker</h4><pre><code class="language-javascript">{ type: Types.Color }</code></pre><a name="fieldtypes-date"></a><h3><code>Date</code></h3><h4><code class="data-type">Date</code> &mdash; Displayed as a date picker in the Admin UI</h4><p class="note">Input should either be a valid <strong>Date</strong>, or a string in the format <strong>YYYY-MM-DD</strong> (can be blank unless field is required)</p><p class="note">To default Date fields to the current time, set the <code>default</code> option to <code class="default-value">Date.now</code></p><pre><code class="language-javascript">{ type: Types.Date }</code></pre><div class="options"><h5>Options</h5><p><code>format</code> <code class="data-type">string</code> - the default format pattern to use, defaults to <code class="default-value">Do MMM YYYY</code></p><p><code>yearRange</code> <code class="data-type">Array</code> <code class="default-value">minYear, maxYear</code> - the default range of years to be displayed.</p><p>See the <a href="http://momentjs.com/docs/#/displaying/format/" target="_blank">momentjs format docs</a> for information on the supported formats and options.</p><h5>Underscore methods</h5><p><code>format(string)</code> - formats the stored value using <a href="http://momentjs.com" target="_blank">momentjs</a></p><p><code>moment()</code> - returns a <a href="http://momentjs.com" target="_blank">momentjs</a> object initialised with the value of the field</p><p><code>parse(input, format, ...)</code> - parses input using <a href="http://momentjs.com" target="_blank">momentjs</a>, sets the field value and returns the moment object</p><p>See the <a href="http://momentjs.com/docs/#/parsing/" target="_blank">momentjs parse docs</a> for information on the supported formats and options for the <code>parse</code> method.</p><pre><code class="language-javascript">item.createdDate = Date.now();\nitem._.createdDate.format(); // returns today\'s date using the default format string\nitem._.createdDate.parse(\'2013-12-04\'); // returns a moment object with the parsed date\nitem._.createdDate.format(\'YYYY-MM-DD\'); // returns \'2013-12-04\'</code></pre></div><a name="fieldtypes-datetime"></a><h3><code>Datetime</code></h3><h4><code class="data-type">Datetime</code> &mdash; Displayed as a date and time picker in the Admin UI</h4><p class="note">Input should either be a valid <strong>Date</strong>, or a string in the format <code class="default-value">YYYY-MM-DD</code> (can be blank unless field is required)</p><p class="note">To default Date fields to the current time, set the <code>default</code> option to <code>Date.now</code></p><pre><code class="language-javascript">{ type: Types.Datetime, default: Date.now }</code></pre><div class="options"><h5>Options:</h5><p><code>format</code> <code class="data-type">string</code> - the default format pattern to use, defaults to <code class="default-value">Do MMM YYYY hh:mm:ss a</code></p><p>See the <a href="http://momentjs.com/docs/#/displaying/format/" target="_blank">momentjs format docs</a> for information on the supported formats and options.</p><h5>Underscore methods:</h5><p><code>format(string)</code> - formats the stored value using <a href="http://momentjs.com" target="_blank">momentjs</a></p><p><code>moment()</code> - returns a <a href="http://momentjs.com" target="_blank">momentjs</a> object initialised with the value of the field</p><p><code>parse(input, format, ...)</code> - parses input using <a href="http://momentjs.com" target="_blank">momentjs</a>, sets the field value and returns the moment object</p><p>See the <a href="http://momentjs.com/docs/#/parsing/" target="_blank">momentjs parse docs</a> for information on the supported formats and options for the <code>parse</code> method.</p></div><a name="fieldtypes-email"></a><h3><code>Email</code></h3><h4><code class="data-type">String</code> &mdash; Displayed as a text field in the Admin UI</h4><p class="note">Input must look like a valid email address (can be blank unless field is required)</p><pre><code class="language-javascript">{ type: Types.Email, displayGravatar: true }</code></pre><div class="options"><h5>Options</h5><p><code>displayGravatar</code> <code class="data-type">Boolean</code> - whether to display a gravatar image in the Admin UI</p><h5>Underscore methods:</h5><p><code>gravatarUrl(input, size, defaultImage, rating)</code> - generates a gravatar image request url</p><pre><code class="language-javascript">item.email = "demo@keystonejs.com";\nitem._.email.gravatarUrl(); // "//www.gravatar.com/avatar/74a0071e5f3a7107b570b7d4a1a7619d?s=80&d=identicon&r=g"\nitem._.email.gravatarUrl(200,\'mm\',\'r\'); // "//www.gravatar.com/avatar/74a0071e5f3a7107b570b7d4a1a7619d?s=200&d=mm&r=r"</code></pre></div><a name="fieldtypes-html"></a><h3><code>Html</code></h3><h4><code class="data-type">String</code> &mdash; Displayed as a text field or WYSIWYG Editor in the Admin UI.</h4><pre><code class="language-javascript">{ type: Types.Html, wysiwyg: true }</code></pre><div class="options"><h5>Options</h5><p><code>wysiwyg</code> <code class="data-type">Boolean</code> - whether to display a WYSIWYG editor in the Admin UI  - for customizations of the editor see the <a href="/docs/configuration/#options-ui">Admin UI Options</a>.</p><p><code>height</code> <code class="data-type">Number</code> - the height of the field (in pixels)</p></div><p>See the <a href="/docs/configuration#options-ui">Admin UI Options</a> for global configuration options that can be used to customise the WYSIWYG editor.</p><a name="fieldtypes-key"></a><h3><code>Key</code></h3><h4><code class="data-type">String</code> &mdash; Displayed as a text field in the Admin UI</h4><p>Automatically converts input to a valid key (no spaces or special characters). White space is replaced with a separator.</p><pre><code class="language-javascript">{ type: Types.Key }</code></pre><div class="options"><h5>Options</h5><p><code>separator</code> <code class="data-type">String</code> - the separator to use when replace white space in the input; defaults to <code class="default-value">-</code></p></div><a name="fieldtypes-location"></a><h3><code>Location</code></h3><h4><code class="data-type">Object</code> &mdash; Displayed as a combination of fields in the Admin UI</h4><p>Contains a standard set of strings for storing an address, and a longitude / latitude point with a <code class="data-type">2dsphere</code> index.</p><p>Also provides autocomplete functionality using Google\'s Geocoding API. This requires either a Google Maps API key to be provided (see the <a href="/docs/configuration#services-google">Google configuration documentation</a> for details), or the option "<code>geocodeGoogle</code>" to be set to <code>true</code>.</p><p>Providing an API key allows you to monitor your application\'s API usage in the Google Developers Console and enables per-key instead of per-IP-address quota limits.</p><p>The Geocoding API may only be used in accordance with the Google Maps API License. </p><pre><code class="language-javascript">{ type: Types.Location, defaults: { country: \'Australia\' } }</code></pre><p class="note">Note: the schema paths are based on Australian address formats, and should be updated to be more appropriate for other international formats. If you have feedback on how the structure should be internationalised, please open a ticket.</p><div class="options"><h5>Options</h5><p><code>defaults</code> <code class="data-type">Object</code> - default values for each path in the field schema</p><p><code>geocodeGoogle</code> <code class="data-type">Boolean</code> - activate or deactivate the Google Geocoding API, whether an API key is set or not.</p><h5>Schema</h5><p><code>name</code> <code class="data-type">String</code> - building name</p><p><code>number</code> <code class="data-type">String</code> - unit or shop number</p><p><code>street1</code> <code class="data-type">String</code> - street address</p><p><code>street2</code> <code class="data-type">String</code> - street address line 2</p><p><code>suburb</code> <code class="data-type">String</code></p><p><code>state</code> <code class="data-type">String</code></p><p><code>postcode</code> <code class="data-type">String</code></p><p><code>country</code> <code class="data-type">String</code></p><p><code>geo</code> <code class="data-type">Array</code> <code class="default-value">longitude, latitude</code></p><p class="note"><strong>Important</strong>: as per the MongoDB convention, the order for the <strong>geo</strong> array must be <code class="default-value">lng, lat</code> which is the opposite of the order used by Google\'s API.</p><h5>Underscore methods</h5><p><code>googleLookup(region, update, callback)</code> - autodetect the full address and lng, lat from the stored value.</p><ul><li><code>region</code> <code class="data-type">String</code> is passed to the Places API for regional biasing and filtering.</li><li><code>update</code> <code class="data-type">String</code> passing <code class="default-value">"overwrite"</code> will completely overwrite existing data with the result. <code class="default-value">true</code> will set blank properties on the field with the result.</li><li><code>callback(err, location, result)</code> - is passed the parsed <strong>location</strong> object, and the raw <strong>result</strong> from Google.</li></ul><p>Internal status codes mimic the Google API status codes. See <a href="https://developers.google.com/maps/documentation/geocoding/" target="_blank">https://developers.google.com/maps/documentation/geocoding/</a> for more information.</p><p>Use of the Google Geocoding API is subject to a query limit of 2,500 geolocation requests per day, except with an enterprise license.</p><p>The Geocoding API may only be used in conjunction with a Google map; geocoding results without displaying them on a map is prohibited. Please make sure your Keystone app complies with the Google Maps API License.</p></div><a name="fieldtypes-markdown"></a><h3><code>Markdown</code></h3><h4><code class="data-type">Object</code> &mdash; Displayed as a textarea field in the Admin UI</h4><pre><code class="language-javascript">{ type: Types.Markdown }</code></pre><div class="options"><h5>Options</h5><p><code>height</code> <code class="data-type">Number</code> - defines the height of the markdown editor; defaults to <code class="default-value">90</code>.</p><pre><code class="language-javascript">{ type: Types.Markdown, height: 200 }</code></pre><p><code>toolbarOptions</code> <code class="data-type">Object</code> - allow customizations of the toolbar.</p><p><code>toolbarOptions.hiddenButtons</code> <code class="data-type">String</code> - Comma separated list of buttons to hide.</p><pre><code class="language-javascript">{ type: Types.Markdown, toolbarOptions: { hiddenButtons: \'H1,H6,Code\' } }</code></pre><h5>Schema</h5><p>The markdown field will automatically convert markdown to html when the <code>md</code> property is changed, via a setter on the <code>md</code> path.</p><p><code>md</code> <code class="data-type">String</code> - source markdown text</p><p><code>html</code> <code class="data-type">String</code> - generated html code</p><pre><code class="language-javascript">Page.add({ content: Types.Markdown });\n \nvar page = new Page.model();\npage.content.md = "# Hello World";\npage.content.html == "&lt;h1&gt;Hello World&lt;/h1&gt;";\n \n// or...\n \nPage.fields.content.updateItem(page, "* list item");\npage.fields.content.format(page) == "&lt;ul&gt;&lt;li&gt;list item&lt;/ul&gt;&lt;/li&gt;";</code></pre></div><a name="fieldtypes-money"></a><h3><code>Money</code></h3><h4><code class="data-type">Number</code> &mdash; Displayed as a number field in the Admin UI</h4><p>Input should either be a valid <strong>Number</strong>, or a string that can be converted to a number (leading symbols are allowed; can be blank unless field is required).</p><pre><code class="language-javascript">{ type: Types.Money }</code></pre><div class="options"><h5>Options</h5><p><code>format</code> <code class="data-type">String</code>, formats the stored value using <a href="http://numeraljs.com" target="_blank">numeraljs</a>.</p><pre><code class="language-javascript">{ type: Types.Money, format: \'$0,0.00\' }</code></pre><p><code>currency</code> <code class="data-type">String</code>, loads a predefined object of settings for a specific language, the language must exist as a .js in numeral/languages folder.</p><pre><code class="language-javascript">{ type: Types.Money, currency: \'en-gb\' }</code></pre><h5>Underscore methods</h5><p><code>format(string)</code> - formats the stored value using <a href="http://numeraljs.com" target="_blank">numeraljs</a>. Set to <code class="default-value">false</code> to disable automatic formatting.</p><p>Format string defaults to <code class="default-value">$0,0.00</code></p></div><a name="fieldtypes-name"></a><h3><code>Name</code></h3><h4><code class="data-type">Object</code> &mdash; Displayed as <strong>firstname</strong> <strong>lastname</strong> fields in the Admin UI</h4><pre><code class="language-javascript">{ type: Types.Name }</code></pre><div class="options"><h5>Schema</h5><p>The name field adds <code>first</code> and <code>last</code> <code class="data-type">String</code> paths to the schema, as well as a <code>full</code> virtual getter and setter.</p><p><code>first</code> <code class="data-type">String</code> - first name</p><p><code>last</code> <code class="data-type">String</code> - last name</p><h5>Virtuals</h5><p><code>full</code> <code class="data-type">String</code> - first and last name, concatenated with a space (if both have a value)</p><p>The <code>name.full</code> setter splits input at the first space.</p></div><a name="fieldtypes-number"></a><h3><code>Number</code></h3><h4><code class="data-type">Number</code> &mdash; Displayed as a number field in the Admin UI</h4><p>Input should either be a valid <strong>Number</strong>, or a string that can be converted to a number (can be blank unless field is required)</p><pre><code class="language-javascript">{ type: Types.Number }</code></pre><div class="options"><h5>Underscore methods</h5><p><code>format(string)</code> - formats the stored value using <a href="http://numeraljs.com" target="_blank">numeraljs</a>. Set to <code class="default-value">false</code> to disable automatic formatting.</p><p>Format string defaults to <code class="default-value">0,0[.][000000000000]</code></p></div><a name="fieldtypes-numberarray"></a><h3><code>Numberarray</code></h3><h4><code class="data-type">Array</code> &mdash; Displayed as a series of number fields in the Admin UI</h4><pre><code class="language-javascript">{ type: Types.Numberarray }</code></pre><div class="options"><h5>Underscore methods</h5><p><code>format(string)</code> - formats the stored value using <a href="http://numeraljs.com" target="_blank">numeraljs</a>. Set to <code class="default-value">false</code> to disable automatic formatting.</p><p>Format string defaults to <code class="default-value">0,0[.][000000000000]</code></p></div><a name="fieldtypes-password"></a><h3><code>Password</code></h3><h4><code class="data-type">String</code> &mdash; Displayed as a password field in the Admin UI, with a \'change\' button.</h4><p>Passwords are automatically encrypted with bcrypt, and expose a method to compare a string to the encrypted hash.</p><p class="note">The encryption happens with a <strong>pre-save hook</strong> added to the <strong>schema</strong>, so passwords set will not be encrypted until an item has been saved to the database.</p><pre><code class="language-javascript">{ type: Types.Password }</code></pre><div class="options"><h5>Options</h5><p><code>workFactor</code> <code class="data-type">Number</code> - the bcrypt workfactor to use when generating the hash, higher numbers are slower but more secure (defaults to <code class="default-value">10</code>)</p><h5>Underscore methods</h5><p><code>compare(candidate, callback)</code> - encrypts the candidate and compares it against the encrypted hash</p><ul><li><code>candidate</code> <code class="data-type">String</code> to compare</li><li><code>callback(err, result)</code> - <strong>result</strong> is <code class="default-value">true</code> if the candidate matches the stored password, or <code class="default-value">false</code> if it doesn\'t</li></ul><h5>Special paths</h5><p><code>{path}_compare</code> - when provided to the <strong>updateHandler</strong>, it will be checked against <code>{path}</code> and validation will fail if they don\'t match.</p></div><a name="fieldtypes-select"></a><h3><code>Select</code></h3><h4><code class="data-type">String</code> or <code class="data-type">Number</code> &mdash; Displayed as a select field in the Admin UI</h4><p class="note">Similar to <code>Enum</code> in other Frameworks.</p><pre><code class="language-javascript">{ type: Types.Select, options: \'first, second, third\' }</code></pre><div class="options"><h5>Options</h5><p><code>numeric</code> <code class="data-type">Boolean</code> when <code class="default-value">true</code>, causes the value of the field to be stored as a <code class="data-type">Number</code> instead of a <code class="data-type">String</code></p><pre><code class="language-javascript">{ type: Types.Select, numeric: true, options: [{ value: 1, label: \'One\' }, { value: 2, label: \'Two\' }] }</code></pre><p><code>emptyOption</code> <code class="data-type">Boolean</code> when <code class="default-value">undefined || true</code>, includes a blank value as the first option in the <code>&lt;select&gt;</code> field.</p><pre><code class="language-javascript">{ type: Types.Select, required: true, options: \'first, second\', emptyOption: false }</code></pre><p><code>options</code> <code class="data-type">String</code> or <code class="data-type">Array</code> - the options for the select field</p><p>Option values can be provided as a comma-delimited list <code class="data-type">String</code> of values, in which the string is split into an <code class="data-type">Array</code>.</p><p>For an <code class="data-type">Array</code> of options, each option should be either a</p><ul><li><code class="data-type">String</code> representing the <code>value</code> of the option; the <code>label</code> is automatically generated</li><li><code class="data-type">Object</code> with <code>value</code> and <code>label</code> <code class="data-type">String</code> properties</li></ul><p>You can mix <code class="data-type">String</code> and <code class="data-type">Object</code> items in the <code>options</code> <code class="data-type">Array</code>:</p><pre><code class="language-javascript">{ type: Types.Select, options: [\'first\', \'second\', { value: \'third\', label: \'The third one\' }] }</code></pre><p><code class="data-type">Object</code> options can have additional properties which are accessible when the current options data, or fields options are retrieved.</p><pre><code class="language-javascript">{ type: Types.Select, options: [\n    { value: \'first\', label: \'The first option\', custom: \'value\' },\n    { value: \'second\', label: \'Second\' }\n]}</code></pre><h5>Properties</h5><p><code>ops</code> <code class="data-type">Array</code> - the field <strong>options</strong> array</p><p><code>values</code> <code class="data-type">Array</code> - all <code>option.value</code> properties</p><p><code>labels</code> <code class="data-type">Object</code> - all <code>option.label</code> properties, keyed by <code>option.value</code></p><p><code>map</code> <code class="data-type">Object</code> - map of options, keyed by <code>option.value</code></p><h5>Schema</h5><p>The value of the current option will be stored at <code>{path}</code>. In addition, these virtuals are provided:</p><p><code>pathLabel</code> <code class="data-type">String</code> - the label of the currently selected <strong>option</strong></p><p><code>pathData</code> <code class="data-type">Object</code> - the currently selected <strong>option</strong>, including any custom properties</p><p><code>pathOptions</code> <code class="data-type">Array</code> - the field <strong>options</strong> array</p><p><code>pathOptionsMap</code> <code class="data-type">Object</code> - map of options, keyed by <code>option.value</code></p><h5>Underscore methods:</h5><p><code>pluck(property, default)</code> - returns <code>property</code> value of the currently selected <strong>option</strong>, or <code>default</code>. Useful in conjunction with custom properties for options.</p><pre><code class="language-javascript">MyList.add({ state: { type: Types.Select, options: \'draft, published, archived\', default: \'draft\' });\n \nMyList.fields.state.values == \'draft,published,archived\';\nMyList.fields.state.labels == { draft: \'Draft\', published: \'Published\', archived: \'Archived\' };\nMyList.fields.state.ops == [\n    { value: \'draft\', label: \'Draft\' },\n    { value: \'published\', label: \'Published\' },\n    { value: \'archived\', label: \'Archived\' }\n];\nMyList.fields.state.map == {\n    draft: { value: \'draft\', label: \'Draft\' },\n    published: { value: \'published\', label: \'Published\' },\n    archived: { value: \'archived\', label: \'Archived\' }\n};\n \nvar item = new MyList.model();\nitem.state == \'draft\';\nitem.stateLabel == \'Draft\';\nitem.stateData == { value: \'draft\', label: \'Draft\' };\nitem.stateOptions == MyList.fields.state.ops;\nitem.stateOptionsMap == MyList.fields.state.map;</code></pre></div><a name="fieldtypes-text"></a><h3><code>Text</code></h3><h4><code class="data-type">String</code> &mdash; Displayed as a text field in the Admin UI</h4><pre><code class="language-javascript">{ type: Types.Text }</code></pre><a name="fieldtypes-textarea"></a><h3><code>Textarea</code></h3><h4><code class="data-type">String</code> &mdash; Displayed as a textarea field in the Admin UI</h4><pre><code class="language-javascript">{ type: Types.Textarea }</code></pre><div class="options"><h5>Options</h5><p><code>height</code> <code class="data-type">Number</code> - the height of the field (in pixels)</p></div><a name="fieldtypes-textarray"></a><h3><code>Textarray</code></h3><h4><code class="data-type">Array</code> &mdash; Displayed as a series of text fields in the Admin UI</h4><pre><code class="language-javascript">{ type: Types.Textarray }</code></pre><a name="fieldtypes-url"></a><h3><code>Url</code></h3><h4><code class="data-type">String</code> &mdash; Displayed as a text field in the Admin UI.</h4><pre><code class="language-javascript">{ type: Types.Url }</code></pre><div class="options"><h5>Options</h5><p><code>format</code> <code class="data-type">Function</code> - process URL before its printed in the href/text of Admin UI cell. Defaults to <code class="default-value">removeProtocolPrefix</code></p><h5>Underscore methods:</h5><p><code>format()</code> - formats the stored value by stripping the leading protocol (if any)</p><pre><code class="language-javascript">item.url = "http://keystonejs.com";\nitem._.url.format(); // "keystonejs.com"</code></pre></div><h3>Storage	</h3><a name="fieldtypes-azurefile"></a><h3><code>AzureFile</code></h3><h4><code class="data-type">Object</code> &mdash; Displayed as an file upload field in the Admin UI</h4><p>Automatically manages files stored in <a href="http://www.windowsazure.com/" target="_blank">Windows Azure Storage</a>, including uploading and deleting.</p><pre><code class="language-javascript">{ type: Types.AzureFile }</code></pre><div class="options"><h5>Options</h5><p><code>filenameFormatter</code> <code class="data-type">Callback</code> - function with arguments current model and client file name to return the new filename to upload.</p><pre><code class="language-javascript">{ type: Types.AzureFile, filenameFormatter: function(item, filename) {\n	return item._id + require(\'path\').extname(filename);\n} }</code></pre><p><code>containerFormatter</code> <code class="data-type">Callback</code> - function with arguments current model and client file name to return the new container name (container are a root folder in Azure Storage Account).</p><pre><code class="language-javascript">{ type: Types.AzureFile, containerFormatter: containerFormatter: function(item, filename) {\n	return item.modelProperty;\n} }</code></pre><h5>Schema</h5><p><code>filename</code> <code class="data-type">String</code></p><p><code>type</code> <code class="data-type">String</code></p><p><code>filesize</code> <code class="data-type">Number</code></p><p><code>url</code> <code class="data-type">String</code></p><p><code>etag</code> <code class="data-type">String</code></p><h5>Virtuals</h5><code>exists</code> <code class="data-type">Boolean</code> - whether there is a stored file<h5>Underscore methods</h5><p><code>uploadFile(file, update, callback)</code> - uploads a file to the Azure Storage Account, stores the details in the field and provides the file data to the callback.</p><ul><li><code>file</code> <code class="data-type">File</code> should be a file as provided by express when a file is uploaded, i.e. <code class="default-value">req.files.path</code></li><li><code>update</code> <code class="data-type">Boolean</code> whether to update the field with the details of the file after upload completes</li><li><code>callback(err, fileData)</code> - is passed the object that will be stored in the field (see schema above)</li></ul></div><a name="fieldtypes-cloudinaryimage"></a><h3><code>CloudinaryImage</code></h3><h4><code class="data-type">Object</code> &mdash; Displayed as an image upload field in the Admin UI</h4><p>Automatically manages images stored in <a href="http://cloudinary.com" target="_blank">Cloudinary</a>, including uploading, resizing and deleting.</p><p>See the <a href="/docs/configuration#services-cloudinary">Cloudinary configuration documentation</a> for details on how to set up Cloudinary in KeystoneJS.</p><pre><code class="language-javascript">{ type: Types.CloudinaryImage }</code></pre><div class="options"><h5>Options</h5><p><code>publicID</code> <code class="data-type">String</code> name of the field to be used as the Cloudinary image <code class="data-type">public_id</code>.</p><pre><code class="language-javascript">{ type: Types.CloudinaryImage, publicID: \'slug\' }</code></pre><p><code>folder</code> <code class="data-type">String</code> specifies a custom folder/prefix for the Cloudinary image <code class="data-type">public_id</code> when <code class="default-value">cloudinary folders</code> is set to <code class="default-value">true</code>.</p><pre><code class="language-javascript">{ type: Types.CloudinaryImage, folder: \'path/to/image\' }</code></pre><p class="note">If you want Cloudinary to automatically create folders when the <code>cloudinary folders</code> option is set to <code class="default-value">true</code>, make sure you enable "Auto-create folders" in your Cloudinary account "Upload Settings".</p><p><code>autoCleanup</code> <code class="data-type">Boolean</code> when <code class="default-value">true</code> changes Keystone\'s default behavior from <code class="default-value">remove</code> (which only removes the Cloudinary image from the database) to <code class="default-value">delete</code> (which removes the image from both the database and Cloudinary storage). Additionally, this option replaces an existing image (if one already exists) during upload.</p><pre><code class="language-javascript">{ type: Types.CloudinaryImage, autoCleanup : true }</code></pre><p><code>select</code> <code class="data-type">Boolean</code> when <code class="default-value">true</code> a select field is displayed with a list of images currently available in Cloudinary storage. Only images with IDs that begin with the <code>selectPrefix</code> will be displayed when the <code>selectPrefix</code> is specified. Otherwise, images with IDs that begin with the <code>folder</code> will be displayed. If neither <code>selectPrefix</code> nor <code>folder</code> are configured, then only images with IDs that begin with <code class="data-type">[{prefix}]/{list.path}/{field.path}/</code> will be displayed.</p><pre><code class="language-javascript">{ type: Types.CloudinaryImage, select : true }</code></pre><p><code>selectPrefix</code> <code class="data-type">String</code> specifies the the prefix of the images that will be available for selection when <code>select</code> option is <code class="default-value">true</code>.</p><pre><code class="language-javascript">{ type: Types.CloudinaryImage, select: true, selectPrefix: \'path/to/images\' }</code></pre><h5>Schema</h5><p><code>public_id</code> <code class="data-type">String</code></p><p><code>version</code> <code class="data-type">Number</code></p><p><code>signature</code> <code class="data-type">String</code></p><p><code>format</code> <code class="data-type">String</code></p><p><code>resource_type</code> <code class="data-type">String</code></p><p><code>url</code> <code class="data-type">String</code></p><p><code>width</code> <code class="data-type">Number</code></p><p><code>height</code> <code class="data-type">Number</code></p><p><code>secure_url</code> <code class="data-type">String</code></p><h5>Virtuals</h5><code>exists</code> <code class="data-type">Boolean</code> - whether there is a stored image<h5>Special paths</h5><p><code>{path}_upload</code> - when a <code class="data-type">file</code> is provided to the <strong>updateHandler</strong>, it will be uploaded to cloudinary and the details will be stored in the field.</p><h5>Underscore methods</h5><p><code>src(options)</code> <code class="data-type">String</code> - returns the url of the image, accepts all options cloudinary supports</p><p><code>tag(options)</code> <code class="data-type">String</code> - returns an <code class="default-value">&lt;img&gt;</code> tag</p><p><code>scale(width, height, options)</code> <code class="data-type">String</code> - scales the image to fit the exact width and height, retaining aspect ratio</p><p><code>fit(width, height, options)</code> <code class="data-type">String</code> - scales the image to fit within the specified width and height, retaining aspect ratio</p><p><code>lfit(width, height, options)</code> <code class="data-type">String</code> - scales the image to fit within the specified width and height, retaining aspect ratio (without exceeding the original dimensions)</p><p><code>limit(width, height, options)</code> <code class="data-type">String</code> - scales the image (down only) to fit within the specified width and height, retaining aspect ratio</p><p><code>fill(width, height, options)</code> <code class="data-type">String</code> - scales the image to fill the specified width and height</p><p><code>crop(width, height, options)</code> <code class="data-type">String</code> - crops the image to fill the specified width and height</p><p><code>pad(width, height, options)</code> <code class="data-type">String</code> - pads the image to fill the specified width and height</p><p><code>lpad(width, height, options)</code> <code class="data-type">String</code> - pads the image to fill the specified width and height (without exceeding the original dimensions)</p><p><code>thumbnail(width, height, options)</code> <code class="data-type">String</code> - crops the image to fill the specified width and height</p><p>In all methods, <code class="default-value">options</code> is an optional <code class="data-type">Object</code>. See <a href="http://cloudinary.com/documentation/image_transformations" target="_blank">Cloudinary\'s Transformation Documentation</a> for more information on the supported options and transformations.</p></div><p class="note">Remember that if you are uploading images to a <code>CloudinaryImage</code> field using an HTML form, you need to specify <code>enctype="multipart/form-data"</code> in your <code>form</code> tag.</p><a name="fieldtypes-cloudinaryimages"></a><h3><code>CloudinaryImages</code></h3><h4><code class="data-type">Array</code> &mdash; Displayed as a series of images, and an upload field in the Admin UI</h4><p>Stores multiple images in a array as a nested <code class="data-type">Schema</code>, each of which expose the same methods as the <code class="data-type">cloudinaryimage</code> field.</p><pre><code class="language-javascript">{ type: Types.CloudinaryImages }</code></pre><div class="options"><h5>Options</h5><p><code>folder</code> <code class="data-type">String</code> specifies a custom folder/prefix for the Cloudinary image <code class="data-type">public_id</code> when <code class="default-value">cloudinary folders</code> is set to <code class="default-value">true</code>.</p><pre><code class="language-javascript">{ type: Types.CloudinaryImages, folder: \'path/to/image\' }</code></pre><p class="note">If you want Cloudinary to automatically create folders when the <code>cloudinary folders</code> option is set to <code class="default-value">true</code>, make sure you enable "Auto-create folders" in your Cloudinary account "Upload Settings".</p></div><a name="fieldtypes-embedly"></a><h3><code>Embedly</code></h3><h4><code class="data-type">Object</code> &mdash; Displayed as read-only data in the Admin UI</h4><p>Automatically retrieves data from the <a href="http://embed.ly" target="_blank">Embedly</a> API about the value of another field (specified with the <code>from</code> option).</p><p>It stores the retrieved data (which includes the provider, media type, full URL, HTML embed code, width, height, thumbnail picture and more).</p><p>The api call to retrieve the data is implemented as a pre-save hook, and is only triggered if the <strong>from path</strong> value has changed.</p><p>See the <a href="/docs/configuration#services-embedly">Embed.ly configuration documentation</a> for details on how to set up Embed.ly in KeystoneJS.</p><pre><code class="language-javascript">{ type: Types.Embedly, from: \'path\' }</code></pre><div class="options"><h5>Options</h5><p><code>from</code> <code class="data-type">String</code> - the path of another field in the Schema that will be passed to the Embedly API. The other field must contain a <code class="data-type">String</code> value.</p><p><code>options</code> <code class="data-type">Object</code> (optional) - passed as arguments to the embedly API along with the <code>from</code> field value</p><p>See <a href="http://embed.ly/docs/embed/api/endpoints/1/oembed" target="_blank">Embedly\'s oEmbed API documentation</a> for more information on options and returned data.</p><h5>Schema</h5><p><code>exists</code> <code class="data-type">Boolean</code></p><p><code>type</code> <code class="data-type">String</code></p><p><code>title</code> <code class="data-type">String</code></p><p><code>url</code> <code class="data-type">String</code></p><p><code>width</code> <code class="data-type">Number</code></p><p><code>height</code> <code class="data-type">Number</code></p><p><code>version</code> <code class="data-type">String</code></p><p><code>description</code> <code class="data-type">String</code></p><p><code>html</code> <code class="data-type">String</code></p><p><code>authorName</code> <code class="data-type">String</code></p><p><code>authorUrl</code> <code class="data-type">String</code></p><p><code>providerName</code> <code class="data-type">String</code></p><p><code>providerUrl</code> <code class="data-type">String</code></p><p><code>thumbnailUrl</code> <code class="data-type">String</code></p><p><code>thumbnailWidth</code> <code class="data-type">Number</code></p><p><code>thumbnailHeight</code> <code class="data-type">Number</code></p></div><a name="fieldtypes-localfile"></a><h3><code>LocalFile</code></h3><div class="alert alert-warning">This field type is not compatible with PAAS Hosts like Heroku because it relies on the local file system</div><h4><code class="data-type">Object</code> &mdash; Displayed as a file upload field in the Admin UI</h4><p>Stores files on the local file system.</p><pre><code class="language-javascript">{ type: Types.LocalFile }</code></pre><div class="options"><h5>Options</h5><p><code>dest</code> <code class="data-type">String</code> - required, the path to store uploaded file</p><p><code>prefix</code> <code class="data-type">String</code> - the path prefix in browser, if it different with <code>dest</code></p><p><code>datePrefix</code> <code class="data-type">String</code> - if set, prefixes the file name with the current date in this format (see <a href="http://momentjs.com" target="_blank">moment.js</a> for format options)</p><p><code>allowedTypes</code> <code class="data-type">Array</code> of <code class="data-type">String</code> - optional white-list of allowed mime types for uploaded file</p><p><code>filename</code> <code class="data-type">Function</code> - function with two arguments: current model and file object to return the new filename to upload.<pre><code class="language-javascript">{\n	type: Types.LocalFile,\n	dest: \'/data/files\',\n	prefix: \'/files/\',\n	filename: function(item, file){\n		return item.id + \'.\' + file.extension\n	}\n}</code></pre></p><p><code>format</code> <code class="data-type">Function</code> - function with two arguments: current model and file object to return representation of this file in Admin UI.<pre><code class="language-javascript">{\n	type: Types.LocalFile,\n	dest: \'/data/files\',\n	prefix: \'/files/\',\n	format: function(item, file){\n		return \'&lt;img src="/files/\'+file.filename+\'" style="max-width: 300px"&gt;\'\n	}\n}\n</code></pre></p><h5>Schema</h5><p><code>filename</code> <code class="data-type">String</code></p><p><code>path</code> <code class="data-type">String</code></p><p><code>size</code> <code class="data-type">Number</code></p><p><code>filetype</code> <code class="data-type">String</code></p><h5>Virtuals</h5><code>exists</code> <code class="data-type">Boolean</code> - whether there is a file path stored<h5>Underscore methods</h5><p><code>uploadFile(file, update, callback)</code> - uploads a file to the local storage, stores the details in the field and provides the file data to the callback.</p><ul><li><code>file</code> <code class="data-type">File</code> should be a file as provided by express when a file is uploaded, i.e. <code class="default-value">req.files.path</code></li><li><code>update</code> <code class="data-type">Boolean</code> whether to update the field with the details of the file after upload completes</li><li><code>callback(err, fileData)</code> - is passed the object that will be stored in the field (see schema above)</li></ul></div><a name="fieldtypes-s3file"></a><h3><code>S3 File</code></h3><h4><code class="data-type">Object</code> &mdash; Displayed as an file upload field in the Admin UI</h4><p>Automatically manages files stored in <a href="http://aws.amazon.com/s3" target="_blank">Amazon S3</a>, including uploading and deleting.</p><pre><code class="language-javascript">{ type: Types.S3File }</code></pre><div class="options"><h5>Options</h5><p><code>s3path</code> <code class="data-type">String</code> - the path to store uploaded files under in the S3 bucket</p><p><code>datePrefix</code> <code class="data-type">String</code> - if set, prefixes the file name with the current date in this format (see <a href="http://momentjs.com" target="_blank">moment.js</a> for format options)</p><p><code>allowedTypes</code> <code class="data-type">Array</code> of <code class="data-type">String</code> - optional white-list of allowed mime types for uploaded files</p><p><code>filename</code> <code class="data-type">Function</code> - function with arguments current model and client file name to return the new filename to upload.<pre><code class="language-javascript">{\n	type: Types.S3File,\n	filename: function(item, filename){\n		// prefix file name with object id\n		return item._id + \'-\' + filename;\n	}\n}</code></pre></p><p><code>headers</code> <code class="data-type">Object</code> or <code class="data-type">Array</code> or <code class="data-type">Function</code> - headers to set on the S3 object</p><p>Headers can be provided as an <code class="data-type">Object</code>, in which the keys are used as header names and the values are used as header values.<pre><code class="language-javascript">{ \n	type: Types.S3File, \n	headers: { \n		\'x-amz-meta-Cache-Control\' : \'max-age=\' + (60 * 15),\n		\'x-amz-meta-X-Custom-Header\' : \'Object Option\'\n	} \n}</code></pre></p><p>When the option is provided as an <code class="data-type">Array</code> of headers, each header element in the array should be an <code class="data-type">Object</code> with <code>name</code> and <code>value</code> <code class="data-type">String</code> properties<pre><code class="language-javascript">{ \n	type: Types.S3File, \n	headers: [\n		{ name: \'x-amz-meta-Cache-Control\', value: \'max-age=\' + (60 * 15) },\n		{ name: \'x-amz-meta-X-Custom-Header\', value: \'Array Option\' }\n	]\n}</code></pre></p><p>When the option is provided as a <code class="data-type">Function</code>, the function will be called with arguments for the current model and client file; The function should return either an <code class="data-type">Array</code> of valid header objects or a simple <code class="data-type">Object</code>.<pre><code class="language-javascript">{ \n	type: Types.S3File, \n	headers: function (item, file) {\n		var headers = [];\n		headers.push({ name: \'x-amz-meta-Cache-Control\', value: \'max-age=\' + item.maxAge });\n		headers.push({ name: \'x-amz-meta-X-Custom-Header\', value: \'Computed Option (Array)\' });\n		return headers;\n	}\n}\n// or \n{ \n	type: Types.S3File, \n	headers: function (item, file){\n		var headers = {};\n		headers[\'x-amz-meta-Cache-Control\'] = \'max-age=\' + item.maxAge;\n		headers[\'x-amz-meta-X-Custom-Header\'] = \'Computed Option (Object)\';\n		return headers;\n	}\n}</code></pre></p><p><code>format</code> <code class="data-type">Function</code> - function with two arguments: current model and file object to return representation of this file in Admin UI.<pre><code class="language-javascript">{\n	type: Types.S3File,\n	format: function(item, file){\n		return \'&lt;pre&gt;\'+JSON.stringify(file, false, 2)+\'&lt;/pre&gt;\'+\n					\'&lt;img src="\'+file.url+\'" style="max-width: 300px"&gt;\'\n	}\n}\n</code></pre></p><h5>Schema</h5><p><code>filename</code> <code class="data-type">String</code></p><p><code>type</code> <code class="data-type">String</code></p><p><code>filesize</code> <code class="data-type">Number</code></p><p><code>url</code> <code class="data-type">String</code></p><h5>Virtuals</h5><code>exists</code> <code class="data-type">Boolean</code> - whether there is a stored file<h5>Special paths</h5><p><code>{path}_upload</code> - when a <code class="data-type">file</code> is provided to the <strong>updateHandler</strong>, it will be uploaded to s3 and the details will be stored in the field.</p><h5>Underscore methods</h5><p><code>uploadFile(file, update, callback)</code> - uploads a file to the s3 bucket, stores the details in the field and provides the file data to the callback.</p><ul><li><code>file</code> <code class="data-type">File</code> should be a file as provided by express when a file is uploaded, i.e. <code class="default-value">req.files.path</code></li><li><code>update</code> <code class="data-type">Boolean</code> whether to update the field with the details of the file after upload completes</li><li><code>callback(err, fileData)</code> - is passed the object that will be stored in the field (see schema above)</li></ul></div><h2>More examples</h2><p>See the <a href="/examples">Examples</a> page for projects that demonstrate real-world usage of the various list options and field types.</p></div></div></div></div>');
}.call(this,"docsnav"in f?f.docsnav:"undefined"!=typeof docsnav?docsnav:void 0,"docssection"in f?f.docssection:"undefined"!=typeof docssection?docssection:void 0),d.join("")},"en/pages/docs/faqs":function(a){var c,d=[],e={},f=a||{};return function(a,f){e.docsnav=c=function(e){this&&this.block,this&&this.attributes||{};d.push('<div class="visible-xs"><ul class="nav-toggle">'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}}}.call(this),d.push('</ul></div><nav class="docs-sidebar hidden-xs"><ul class="sidebar-nav"><li'+b.cls(["introduction"==e.value?"active":null],[!0])+'><a href="/docs" class="nav-heading">Welcome</a></li>'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}}}.call(this),d.push("</ul><hr/>"),"introduction"!=e.value&&(d.push('<ul class="sidebar-nav">'),function(){var b=a;if("number"==typeof b.length)for(var c=0,f=b.length;f>c;c++){var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}else{var f=0;for(var c in b){f++;var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}}}.call(this),d.push("</ul>")),d.push("</nav>")},d.push('<div class="page-header"><div class="container"><h1>FAQ\'s</h1><p class="lead">A collection of frequently asked questions\'s asked throughout community forums</p></div></div><div class="container"><div class="row"><div class="col-sm-3">'),e.docsnav(f),d.push('</div><div class="col-sm-9"><div class="docs-content"><h2><a name="faqs"></a>Deploying to Heroku</h2><h3>Description</h3><p>This section describes the steps required to deploy your KeystoneJS application to Heroku. </p><h3>Prerequisites</h3><ol class="fancy-list"><li>Sign up for a Heroku account and install the <a href="https://toolbelt.heroku.com/">Heroku Toolbelt</a></li><li>In this section, we will be using Git and Github so make sure you are appropriately set up with both</li><li>Create a Keystone application, Github repository and clone the repository locally</li></ol><h3>Steps</h3><p class="lead">Create the heroku application</p><p>Run the following command <code>heroku create</code> from your terminal and within your Keystone applications root directory. Heroku will generate an app name for you (i.e. beautiful-island-4327) and set up a git remote called Heroku to use for identification</p><p class="lead">If you wish to rename your application</p><p>Run the command <code>heroku apps:rename your-new-app-name --app current-name-of-your-app</code> in order to change your applications name</p><p class="lead">Add your new Heroku remotes.</p><p>Run the command <code>heroku git:remote --app your-new-app-name</code> in order to add the appropriate Heroku remotes</p><p class="lead">Include Heroku add-ons</p><p>Firstly, you\'ll need a database. There are a few providers you can choose from in Heroku\'s add-ons directory. For the purpose of this walk-through we\'ll be using Mongolab. Secondly, let\'s add a logging system. Again, there are a few to choose from but we\'ll be using Papertrail. This gives you a nice web UI to your application logs and lets you set up alerts for errors, etc. The basic plan for papertrail is also free. </p><ol> <li>Adding MongoLab</li><p>Run the command <code>heroku addons:add mongolab:sandbox</code></p><i class="mt-2">N.B: You can point your Keystone site at any database provider by customising the MONGO_URI environment variable (make sure to remove the mongolab addon first!)</i><li class="mt-2">Adding Papertrail</li><p>Run the command <code>heroku addons:add papertrail:choklad</code> </p></ol><p class="lead">Adding environment variables for 3rd party service providers</p><p>You can do this yourself (the dashboard gives you the ENV variable set up) or you can add it as an add-on to your Heroku account like Mongolab and Papertrail. We recommend you do this manually as you\'ll probably want to use the account in development and staging as well, rather than having it tied to as single Heroku app.</p><p class="lead">Deployment</p><p>Once you\'ve created your Keystone application and got the database configured, commit all your code to git and run the following command to make your site go live <code>git push heroku master</code></p><p class="lead">View your live site</p><p>Now that you have deployed your application you can enter the command <code>heroku open</code> or simply navigate to http://your-new-app-name.herokapp.com</p><p class="lead">Adding a custom domain</p><p>Login to your Heroku account and add a real domain for your application. Following this, point your DNS at Heroku and you\'re off. You can also set up SSL and whatever else you need. </p><i>N.B: Heroku doesn\'t keep any changes to the local file system so you can\'t keep user-uploaded files without putting them on a 3rd party service, hence the Cloudinary/Azure/S3 integration.</i><p class="mt-2">Make sure to checkout <a href="https://devcenter.heroku.com/articles/getting-started-with-nodejs">Heroku\'s getting started docs for Node.js </a> if you hit any hurdles.</p></div></div></div></div>')}.call(this,"docsnav"in f?f.docsnav:"undefined"!=typeof docsnav?docsnav:void 0,"docssection"in f?f.docssection:"undefined"!=typeof docssection?docssection:void 0),d.join("")},"en/pages/docs/getting-started":function(a){var c,d=[],e={},f=a||{};return function(a,f){e.docsnav=c=function(e){this&&this.block,this&&this.attributes||{};d.push('<div class="visible-xs"><ul class="nav-toggle">'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}}}.call(this),d.push('</ul></div><nav class="docs-sidebar hidden-xs"><ul class="sidebar-nav"><li'+b.cls(["introduction"==e.value?"active":null],[!0])+'><a href="/docs" class="nav-heading">Welcome</a></li>'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}}}.call(this),d.push("</ul><hr/>"),"introduction"!=e.value&&(d.push('<ul class="sidebar-nav">'),function(){var b=a;if("number"==typeof b.length)for(var c=0,f=b.length;f>c;c++){var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}else{var f=0;for(var c in b){f++;var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}}}.call(this),d.push("</ul>")),d.push("</nav>")},d.push('<div class="page-header"><div class="container"><h1>Getting Started Guide</h1><p class="lead">This guide steps you through how to create a KeystoneJS site. <a href="/quick-start">There\'s also a generator.</a></p></div></div><div class="container"><div class="row"><div class="col-sm-3">'),e.docsnav(f),d.push('</div><div class="col-sm-9"><div class="docs-content"><h2><a name="introduction"></a>Introduction</h2><p>KeystoneJS makes it easy to build database-driven websites, applications and APIs in node.js.</p><p>Under the hood, KeystoneJS uses the <a href="http://expressjs.com" target="_blank">express.js</a> web server framework, and a <a href="http://mongodb.com" target="_blank">MongoDB</a> database via the <a href="http://mongoosejs.com" target="_blank">mongoose</a> object modelling framework.</p><div class="contextual-note"><h4>Simple vs. Flexible</h4><p>Keystone is designed to make complicated things simple, without limiting the power or flexibility of node.js or the frameworks it is built on.</p><p>This guide will show you how to build a KeystoneJS website using the default project structure and options.</p><p>To learn more about how things work under the hood, and how you can extend or replace features, we strongly recommend reading the <a href="/docs/api/current/class" >class reference</a> or <a href="https://github.com/keystonejs/keystone" target="_blank">source code</a>. </p></div><a name="introduction-prerequisites"></a><h3>Prerequisites</h3><ol class="fancy-list"><li>Before you begin, make sure you have <a href="http://nodejs.org/download" target="_blank">Node.js</a> 0.10+ installed and <a href="http://www.mongodb.org/downloads" target="_blank">MongoDB</a> v2.4+ installed and running.</li><li>You\'ll need a reasonable working knowledge of Javascript to use KeystoneJS, as well as familiarity with basics such as database concepts, and using node / npm etc.</li><li>In the guide we\'ll also be using <a href="http://jade-lang.com" target="_blank">Jade</a> for our view templates and <a href="http://lesscss.org" target="_blank">LESS</a> for our CSS templates. In your own project you can use any template language you like; see <a href="#templates_other">using other template languages</a> (below) for more information.</li></ol><a name="introduction-productionvsdevelopment"></a><h3>Production vs. Development</h3><p>Keystone applies different settings in production and development modes. The environment will default to <code>development</code>, so you should set the <code>NODE_ENV</code> environment variable to <code>production</code> on your production servers for better performance.</p><p>Your app can detect which environment it is running in by calling <code>keystone.get(\'env\')</code>.</p><a name="gettingstarted"></a><h2>Getting Started</h2><a name="gettingstarted-usingyeoman"></a><h3>Using the Yeoman Generator</h3><p>The easiest way to get started with KeystoneJS is to use our new Yeoman Generator.</p><p>Follow the <a href="/quick-start" >KeystoneJS Yeoman Generator Guide</a> for installation instructions.</p><a name="gettingstarted-startinganewproject"></a><h3>Starting a new project</h3><p>Create a new directory for your project, then add the following two files which are responsible for setting up your project and starting your webserver.</p><div class="code-header"><h4>package.json</h4><p>This file describes our project for npm, including the fact that it depends on <code>keystone</code>.</p></div><pre><code class="language-javascript">{\n  "name": "my-project",\n  "version": "0.0.1",\n  "private": true,\n  "dependencies": {\n    "keystone": "latest",\n    "underscore": "latest"\n  },\n  "engines": {\n    "node": "0.10.x",\n    "npm": "1.3.x"\n  },\n  "scripts": {\n    "start": "web.js"\n  }\n}</code></pre><p class="note">Note we\'re also requiring the <a href="http://underscorejs.org">underscore library</a>, because we\'ll use some of its functionality later. You can use any other packages you like from <a href="https://npmjs.org">npm</a> in your Keystone application by adding them to your <code>package.json</code>.</p><div class="code-header"><h4>web.js</h4><p>This is the script that will run our keystone website.</p></div><pre><code class="language-javascript">var keystone = require(\'keystone\');\nkeystone.init({\n  \n  \'name\': \'My Project\',\n  \n  \'favicon\': \'public/favicon.ico\',\n  \'less\': \'public\',\n  \'static\': [\'public\'],\n  \n  \'views\': \'templates/views\',\n  \'view engine\': \'jade\',\n  \n  \'auto update\': true,\n  \'mongo\': \'mongodb://localhost/my-project\',\n  \n  \'session\': true,\n  \'auth\': true,\n  \'user model\': \'User\',\n  \'cookie secret\': \'(your secret here)\'\n  \n});\n \nrequire(\'./models\');\n \nkeystone.set(\'locals\', {\n  utils: keystone.utils\n});\n \nkeystone.set(\'routes\', require(\'./routes\'));\n \nkeystone.start();</code></pre><p>Now, in your console, run <code>npm install</code> from the root folder of your project (where package.json is) to install Keystone.</p><p class="note">For more information about the options Keystone supports, see the <a href="/docs/configuration">configuration guide</a>.</p><p class="note">Note: your web script won\'t run yet, because it is including models and routes that have not been set up yet. It assumes you follow the conventions in this guide.</p><div class="contextual-note"><h4>BYO Express and Mongoose</h4><p>If you want to require Express or Mongoose in your application, instead of having Keystone provide and configure them completely, you can do so.</p><p>Include them in the dependencies list for your project, then provide them to Keystone using the <code>app</code> and <code>mongoose</code> options respectively.</p><pre>var express = require(\'express\'),\n    mongoose = require(\'mongoose\'),\n    app = express(),\n    keystone = require(\'keystone\');\n \n    keystone.set(\'app\', app);\n    keystone.set(\'mongoose\', mongoose);</pre></div><p class="note">The <code>keystone.connect()</code> method, previously used to set your own Express/Mongoose instances, is now deprecated and will be removed in future versions of Keystone. Due to changes in Express 4, `keystone.connect()` no longer works as expected. Please use the Keystone <code>app</code> and <code>mongoose</code> options in its place.</p><a name="gettingstarted-projectstructure"></a><h3>Project Structure</h3><p>With your package and web scripts in place, it\'s time to scaffold out containers for the rest of your app. Create the following directory structure:</p><pre>|--lib\n|  <span>Custom libraries and other code</span>\n|--models\n|  <span>Your application\'s database models</span>\n|--public\n|  <span>Static files (css, js, images, etc.) that are publicly available</span>\n|--routes\n|  |--api\n|  |  <span>Your application\'s api controllers</span>\n|  |--views\n|  |  <span>Your application\'s view controllers</span>\n|  |--index.js\n|  |  <span>Initialises your application\'s routes and views</span>\n|  |--middleware.js\n|  |  <span>Custom middleware for your routes</span>\n|--templates\n|  |--includes\n|  |  <span>Common .jade includes go in here</span>\n|  |--layouts\n|  |  <span>Base .jade layouts go in here</span>\n|  |--mixins\n|  |  <span>Common .jade mixins go in here</span>\n|  |--views\n|  |  <span>Your application\'s view templates</span>\n|--updates\n|  <span>Data population and migration scripts</span>\n|--package.json\n|  <span>Project configuration for npm</span>\n|--web.js\n|  <span>Main script that starts your application</span></pre><p>We also recommend that your application will be simpler to build and maintain if you mirror the internal structure of your <code>routes/views</code> and <code>templates/views</code> directories as much as possible.</p><div class="contextual-note"><h4>Structure</h4><p>This guide assumes you follow the recommendations above, however Keystone doesn\'t actually enforce any structure, so you\'re free to make changes to suit your application better.</p></div><a name="models"></a><h2>Models</h2><p>Before you can start your Keystone app, you\'ll need some data models.</p><p>We\'re going to start with the <code>User</code> model, which is special - we need it so that Keystone can do authentication and session management.</p><p>Create the following two files in the <code>/models</code> folder:</p><div class="code-header"><h4>models/index.js</h4><p>This is the script that includes your models. It doesn\'t need to export anything.</p></div><pre><code class="language-javascript">require(\'./users.js\');</code></pre><div class="code-header"><h4>models/users.js</h4><p>This script initialises the <code>User</code> model. It doesn\'t need to export anything, but the model <em>must</em> be registered with Keystone.</p></div><pre><code class="language-javascript">var keystone = require(\'keystone\'),\n    Types = keystone.Field.Types;\n \nvar User = new keystone.List(\'User\');\n \nUser.add({\n    name: { type: Types.Name, required: true, index: true },\n    email: { type: Types.Email, initial: true, required: true, index: true },\n    password: { type: Types.Password, initial: true },\n    canAccessKeystone: { type: Boolean, initial: true }\n});\n \nUser.register();</code></pre><a name="models-authentication"></a><h3>Authentication and Session Management</h3><p>For Keystone to provide authentication and session management to your application, it needs to know a few things (which we\'ve now configured).</p><p>To recap:</p><ul class="list"><li>The option <code>user model</code> must be the name of the Model that Keystone should look in to find your users. If you use a different model name, be sure to set the option correctly.</li><li>If you want your application to support session management, set the <code>session</code> option to <strong>true</strong>. Loading sessions incurs a small overhead, so if your application doesn\'t need sessions you can turn this off.</li><li>Keystone has built-in views for signing in and out. To enable them, set the <code>auth</code> option to <strong>true</strong>. You can also implement custom signin and signout screens in your applications\' views.</li><li>Sessions are persisted using an encrypted cookie storing the user\'s ID. Make sure you set the <code>cookie secret</code> option to a long, random string.</li><li>The user model must have a <code>canAccessKeystone</code> property (which can be a virtual method or a stored boolean) that says whether a user can access Keystone\'s Admin UI or not. *Note* If you choose to use a virtual method setting the value in mongodb directly will not authenticate correctly. A virtual method is useful when the criteria for access is more complex. See <a href="http://mongoosejs.com/docs/guide.html#virtuals">Mongoose virtuals</a></li></ul><h4>More on Data Models</h4><p>For more information on how to set up your application\'s models, and the full documentation for lists and fields, see the <a href="/docs/database">database guide</a>.</p><a name="routesviews"></a><h2>Routes &amp; Views</h2><p>Usually, the easiest and clearest way to configure the logic for different routes (or views) in your application is to set up all the bindings single file, then put any common logic (or middleware) in another file.</p><p>Then, the controller for each route you bind goes in its own file, organised similarly to the template that renders the view.</p><p>Keystone\'s <code>importer</code> and Express\'s middleware support makes this easy to set up.</p><a name="routesviews-settingup"></a><h3>Setting up your Routes and Middleware</h3><h4>Route index controller</h4><p>First, create a <code>routes/index.js</code> file. This is where we bind your application\'s URL patterns to the controllers that load and process data, and render the appropriate template.</p><div class="code-header"><h4>routes/index.js</h4><p>This script imports your route controllers and binds them to URLs.</p></div><pre><code class="language-javascript">var keystone = require(\'keystone\'),\n    middleware = require(\'./middleware\'),\n    importRoutes = keystone.importer(__dirname);\n \n// Common Middleware\nkeystone.pre(\'routes\', middleware.initErrorHandlers);\nkeystone.pre(\'routes\', middleware.initLocals);\nkeystone.pre(\'render\', middleware.flashMessages);\n \n// Handle 404 errors\nkeystone.set(\'404\', function(req, res, next) {\n    res.notfound(\'Error (404)\', \'The requested page was not found\');\n});\n \n// Handle other errors\nkeystone.set(\'500\', function(err, req, res, next) {\n    var message;\n    if (err instanceof Error) {\n        message = err.message;\n        err = err.stack;\n    }\n    res.err(err, \'Error (500)\', message || \'The site has encountered an error\');\n});\n \n// Load Routes\nvar routes = {\n    views: importRoutes(\'./views\')\n};\n \n// Bind Routes\nexports = module.exports = function(app) {\n    \n    app.get(\'/\', routes.views.index);\n    \n}</code></pre><h4>Stepping through the route controller index</h4><ul><li>Load <code>keystone</code>, the <code>middleware.js</code> file (below), and create an <code>importer</code> for the current directory</li><li>Bind middleware (below) that<ul><li>Initialises our basic error handlers</li><li>Initialises common local variables for our view templates</li><li>Retrieves flash messages from session before the view template is rendered</li></ul></li><li>Tell Keystone how to handle <code>404</code> and <code>500</code> errors</li><li>Use the importer to load all the route controllers in the <code>/routes/views</code> directory</li><li>Export a method that binds the index route controller to <code>GET</code> requests on the root url <code>/</code><ul><li>The <code>app</code> argument to this method our express app, so anything you can do binding routes in express, you can do here.</li></ul></li></ul><p>Additional route controllers that you add to your app should be added using <code>app.get</code>, <code>app.post</code> or <code>app.all</code> under your root controller.</p><h4>Error Handling</h4><div class="code-header"><h4>routes/index.js</h4><p>Add error handling at the end of your export function</p></div><pre><code class="language-javascript">// Bind Routes\nexports = module.exports = function(app) {\n    \n    app.get(\'/\', routes.views.index);\n	  \n	  // Error Handling\n	  app.use(function(err, req, res) {\n	  	 res.status(500).send(\'ERROR MIDDLEWARE\');\n	  }); \n    \n}</code></pre><div class="code-header"><h4>onMount Event</h4><p>Add error handling with <code>keystone.start</code>.  Order matters and your error handler should be last.  </p></div><pre><code class="language-javascript"> \n// Bind Routes\nkeystone.start({\n    onMount: function() {\n	  	  // Error Handling\n	  	  keystone.app.use(function(err, req, res) {\n	  	 	  res.status(500).send(\'ERROR MIDDLEWARE\');\n	  	  });\n	  }\n});\n </code></pre><a name="routesviews-middleware"></a><h3>Common Route Middleware</h3><p>Putting your common middleware in a separate <code>routes/middleware.js</code> file keeps your route index nice and clean. If your middleware file gets too big, it\'s a good idea to restructure any significant functionality into custom modules in your projects <code>/lib</code> folder.</p><p>Now we\'ll add the basic middleware to get your app up and running with default behaviours:</p><div class="code-header"><h4>routes/middleware.js</h4><p>This script includes common middleware for your application routes</p></div><pre><code class="language-javascript">var _ = require(\'underscore\'),\n    keystone = require(\'keystone\');\n \n/**\n    Initialises the standard view locals.\n    Include anything that should be initialised before route controllers are executed.\n*/\nexports.initLocals = function(req, res, next) {\n    \n    var locals = res.locals;\n    \n    locals.user = req.user;\n    \n    // Add your own local variables here\n    \n    next();\n    \n};\n \n/**\n    Inits the error handler functions into `res`\n*/\nexports.initErrorHandlers = function(req, res, next) {\n    \n    res.err = function(err, title, message) {\n        res.status(500).render(\'errors/500\', {\n            err: err,\n            errorTitle: title,\n            errorMsg: message\n        });\n    }\n    \n    res.notfound = function(title, message) {\n        res.status(404).render(\'errors/404\', {\n            errorTitle: title,\n            errorMsg: message\n        });\n    }\n    \n    next();\n    \n};\n \n/**\n    Fetches and clears the flashMessages before a view is rendered\n*/\nexports.flashMessages = function(req, res, next) {\n    \n    var flashMessages = {\n        info: req.flash(\'info\'),\n        success: req.flash(\'success\'),\n        warning: req.flash(\'warning\'),\n        error: req.flash(\'error\')\n    };\n    \n    res.locals.messages = _.any(flashMessages, function(msgs) { return msgs.length }) ? flashMessages : false;\n    \n    next();\n    \n};</code></pre><h4>Middleware functions</h4><p>Keystone expects middleware functions to accept the following arguments:</p><ul class="options"><li><code>req</code> - an express request object</li><li><code>res</code> - an express response object</li><li><code>next</code> - the method to call when the middleware has finished running (including any internal callbacks)</li></ul><h4>Flash message support (no, not that flash)</h4><p>Keystone includes support for \'flashing\' messages to your visitors via session. The default setup above supports four categories, all of which can be styled differently:</p><ul class="options"><li><code>info</code></li><li><code>success</code></li><li><code>warning</code></li><li><code>error</code></li></ul><p>You can easily support other types of messages by updating your middleware and the .jade template that renders them (which we\'ll get to below).</p><p>To use flash messages in your route controllers, do this:</p><p><code>req.flash(\'info\', \'Some information!\');</code></p><p>Messages use session so they survive redirects, and will only be displayed to the user once, making them perfect for status messages (e.g. "Your changes have been saved") or form validation (e.g. "Please enter a valid email address").</p><p>Some Keystone features (such as the Update Handler) can automatically generate flash messages for you, and expect the categories above to be available.</p><a name="routesviews-firstview"></a><h3>Your first View</h3><p>Now we\'re going to set up your first route controller (for the index page), and the template it will render.</p><p>The importer (above) expects the directory you ask it for to include <code>.js</code> or <code>.coffee</code> files that export a single method accepting the following arguments:</p><ul class="options"><li><code>req</code> - an express request object</li><li><code>res</code> - an express response object</li></ul><p>Our first view controller is going to be very simple - just rendering a template. Create an <code>routes/views/index.js</code> file like this:</p><div class="code-header"><h4>routes/views/index.js</h4><p>The route controller for our home page view</p></div><pre><code class="language-javascript">var keystone = require(\'keystone\');\n \nexports = module.exports = function(req, res) {\n    \n    var view = new keystone.View(req, res);\n    \n    view.render(\'index\');\n    \n}</code></pre><a name="routesviews-templates"></a><h3>Templates</h3><p>Now, for the template our route will render. The <code>render</code> method looks in the <code>views</code> directory specified in our <code>web.js</code>, which we set to <code>/templates/views</code>.</p><p>In this guide, we\'re going to use <strong>Jade</strong> for our templates. To learn more about Jade, visit <a href="http://jade-lang.com" target="_blank">jade-lang.org</a>, or check out the great <a href="http://naltatis.github.io/jade-syntax-docs/" target="_blank">live syntax documentation</a> to learn by example.</p><p>First up, create <code>templates/views/index.jade</code>:</p><div class="code-header"><h4>templates/views/index.jade</h4><p>The template for our home page view</p></div><pre>extends ../layouts/base\n \nblock content\n    h1 Hello World</pre><p>If you haven\'t noted, we also need <code>templates/views/errors/404.jade</code> and <code>templates/views/errors/500.jade</code> for routes/middleware.js to render correctly when needed.</p><p>Then, create <code>templates/views/errors/404.jade</code>:</p><div class="code-header"><h4>templates/views/errors/404.jade</h4><p>The template for 404 errors</p></div><pre>extends ../layouts/base\n \nblock content\n    h1= errorTitle\n    p= errorMsg</pre><p>And also create <code>templates/views/errors/500.jade</code>:</p><div class="code-header"><h4>templates/views/errors/500.jade</h4><p>The template for 500 errors</p></div><pre>extends ../layouts/base\n \nblock content\n    h1= errorTitle\n    p= errorMsg\n    pre= err</pre><p>Jade comes with some great features to simplify templates - including using layouts that define regions. We\'re going to use a layout called <code>../common/templates/layout/base.jade</code>, which is included on the first line of the file above:</p><div class="code-header"><h4>templates/layouts/base.jade</h4><p>The base layout for our view templates</p></div><pre><code>include ../mixins/flash-messages\n \ndoctype html\nhtml\n    head\n        meta(charset="utf-8")\n        meta(name="viewport", content="initial-scale=1.0,user-scalable=no,maximum-scale=1,width=device-width")\n        \n        title= title || \'My Keystone Website\'\n        link(rel="shortcut icon", href="/favicon.ico", type="image/x-icon")\n        link(href="/styles/site.min.css", rel="stylesheet")\n        \n        block css\n        block head\n    body\n        \n        #header My Keystone Website\n        \n        #body\n            \n            block intro\n            \n            +flash-messages(messages)\n            \n            block content\n        \n        #footer Powered by &lt;a href=\'http://keystonejs.com\', target=\'_blank\'&gt;KeystoneJS&lt;/a&gt;.\n    \n    script(src=\'/js/lib/jquery/jquery-1.10.2.min.js\')\n    \n    block js</code></pre><p>We\'re also going to create a <code>templates/mixins/flash-messages.jade</code> template to include the <code>flash-messages</code> mixin. Including mixins in your layout or view templates is a great way to keep your layout and view files clean, and re-use mixins across multiple views.</p><div class="code-header"><h4>templates/mixins/flash-messages.jade</h4><p>Our flash-messages mixin</p></div><pre><code>mixin flash-messages(messages)\n    if messages\n        #flash-messages.container\n            each message in messages.info\n                +flash-message(message, \'info\')\n            each message in messages.success\n                +flash-message(message, \'success\')\n            each message in messages.warning\n                +flash-message(message, \'warning\')\n            each message in messages.error\n                +flash-message(message, \'danger\')\n                \nmixin flash-message(message, type)\n    div(class=\'alert alert-\' + type)\n        if utils.isObject(message)\n            if message.title\n                h4= message.title\n            if message.detail\n                p= message.detail\n            if message.list\n                ul\n                    each item in message.list\n                        li= item\n        else\n            = message</code></pre><a name="templates_other"></a><div class="contextual-note"><h4>Using other template languages</h4><p>KeystoneJS supports <a href=\'http://expressjs.com/api.html#app.engine\', target=\'_blank\'>any template language supported by express</a>.</p><p>Use the <code>view engine</code> option to specify the template language you want to use (it will default to <code class="data-type">jade</code>).</p><p>If you want to use a custom template engine, set the <code>custom engine</code> option as well. For instance, <a href="http://embeddedjs.com/">ejs</a> is supported by express by default, but you might want to use <a href="https://github.com/RandomEtc/ejs-locals">ejs.locals</a> as a template engine in order to benefit from get extensions.</p><pre><code class="language-javascript">// Modified web.js to use the ejs-locals custom template engine.\nvar keystone = require(\'keystone\');\nvar engine   = require(\'ejs-locals\');\nkeystone.init({\n  ...\n  \'custom engine\': engine,\n  \'view engine\': \'ejs\',\n  ...\n});</code></pre></div><a name="routesviews-publicassets"></a><h3>Public Assets</h3><p>You\'ll want to add your own css, javascript, images and other files to your project. In the examples above, we\'re including <code>/styles/site.min.css</code> and <code>/js/lib/jquery-1.10.2.min.js</code>.</p><p>Keystone will serve any static assets you place in the <code>public</code> directory. This path is specified in <code>web.js</code> by the <code>static</code> option.</p><p>It will also automatically generate <code>.css</code> or compressed <code>.min.css</code> files when a corresponding <code>.less</code> file is found in the <code>public</code> folder, as specified in <code>web.js</code> by the <code>less</code> option. For more information on LESS, see <a href="http://lesscss.org" target="_blank">lesscss.org</a>.</p><a name="runningyourapp"></a><h2>Running your app</h2><p>You\'re now (almost) ready to run your app! Before we do, though, we should add a <strong>User</strong> so you can sign in to Keystone\'s Admin UI.</p><a name="runningyourapp-writingupdates"></a><h3>Writing Updates</h3><p>To do this, we\'re going to create an update script, which Keystone will automatically run before starting the web server.</p><p>Keystone\'s automatic update functionality is enabled in <code>web.js</code> by the <code>auto update</code> option.</p><p>When the option is set to <code>true</code>, Keystone will scan the <code>updates</code> directory for <code>.js</code> files, each of which should export a method accepting a single argument:</p><ul><li><code>next</code> - the method to call when the update has finished running (including any internal callbacks)</li></ul><p>Updates are ordered using <a href="http://semver.org" target="_blank">Semantic Versioning</a>, and Keystone will only run them once (successfully executed updates are stored in your database, in a collection called <code>app_updates</code>).</p><p>Update file names should match the pattern <code>x.x.x-description.js</code> - anything after the first hyphen is ignored, so you can describe the update in the filename.</p><p>So to automatically add a new Admin User when your app first launches, create a <code>updates/0.0.1-admin.js</code> file:</p><div class="code-header"><h4>updates/0.0.1-admin.js</h4><p>Update script to add the first admin (change to your own name, email and password)</p></div><pre><code class="language-javascript">var keystone = require(\'keystone\'),\n    User = keystone.list(\'User\');\n \nexports = module.exports = function(done) {\n    \n    new User.model({\n        name: { first: \'Admin\', last: \'User\' },\n        email: \'admin@keystonejs.com\',\n        password: \'admin\',\n        canAccessKeystone: true\n    }).save(done);\n    \n};</code></pre><p class="note">You probably don\'t want to store your real password in the code, so it\'s a good idea to set the default password to something simple, then sign in and change it using Keystone\'s Admin UI after you start your app for the first time.</p><a name="runningyourapp-startingkeystone"></a><h3>Starting Keystone</h3><p>Now you\'re ready to run your application, so execute the following in your project\'s main folder:</p><p><code>node web</code></p><p>Keystone will automatically apply the update, and then start a web server on the default port, 3000.</p><p>To see your home page, point your browser at <a href="http://localhost:3000" target="_blank">localhost:3000</a>. You should see our <strong>Hello World!</strong> message.</p><p>To sign in to Keystone\'s Admin UI, go to <a href="http://localhost:3000/keystone" target="_blank">localhost:3000/keystone</a>. Use the email and password you put in the update script above to sign in, and you\'ll be redirected to Keystone\'s home page.</p><a name="runningyourapp-nextstep"></a><h3>Next Steps</h3><p>... you\'re done! Well, not really. It\'s time to start building your app now. For more information on list options and the field types Keystone supports, browse the <a href="/docs/database">database guide</a>.</p><p>You should also <a href="https://twitter.com/keystonejs" target="_blank">Follow @KeystoneJS on Twitter</a> for news and updates, <a href="https://github.com/keystonejs/keystone/" target="_blank">Star KeystoneJS on GitHub</a>, and discuss this guide (or anything KeystoneJS related) on the <a href="https://groups.google.com/d/forum/keystonejs" target="_blank">KeystoneJS Google Group</a>.</p><p>We\'ve also got more <a href="/examples">Examples and Sample Code</a> for you on the examples page.</p><p>Enjoy using KeystoneJS!</p></div></div></div></div>');
}.call(this,"docsnav"in f?f.docsnav:"undefined"!=typeof docsnav?docsnav:void 0,"docssection"in f?f.docssection:"undefined"!=typeof docssection?docssection:void 0),d.join("")},"en/pages/docs/index":function(a){var c,d=[],e={},f=a||{};return function(a,f){e.docsnav=c=function(e){this&&this.block,this&&this.attributes||{};d.push('<div class="visible-xs"><ul class="nav-toggle">'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}}}.call(this),d.push('</ul></div><nav class="docs-sidebar hidden-xs"><ul class="sidebar-nav"><li'+b.cls(["introduction"==e.value?"active":null],[!0])+'><a href="/docs" class="nav-heading">Welcome</a></li>'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}}}.call(this),d.push("</ul><hr/>"),"introduction"!=e.value&&(d.push('<ul class="sidebar-nav">'),function(){var b=a;if("number"==typeof b.length)for(var c=0,f=b.length;f>c;c++){var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}else{var f=0;for(var c in b){f++;var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}}}.call(this),d.push("</ul>")),d.push("</nav>")},d.push('<div class="page-header"><div class="container"><h1>Documentation</h1><p class="lead">Learn how to build database-driven websites, applications and APIs in Node.js.</p></div></div><div class="container"><div class="row"><div class="col-sm-3">'),e.docsnav(f),d.push('</div><div class="col-sm-9"><div class="docs-content"><h2>Welcome</h2><h3>Let\'s jump in</h3><p class="lead text-muted">Use the sidebar on the left to navigate the docs.</p><div class="row"><div class="col-sm-12 col-md-4"><div class="feature-panel"><div class="feature-content"><h4><a href="/docs/getting-started">Getting Started</a></h4><p>The getting started guide walks you through how to manually setup a KeystoneJS website. it\'s a great place to begin.</p></div></div></div><div class="col-sm-12 col-md-4"><div class="feature-panel"><div class="feature-content"><h4><a href="/docs/configuration">Configuration</a></h4><p>Once you\'re comfortable with KeystoneJS it\'s time to configure. There are many possible settings and services to let you build your app or website.</p></div></div></div><div class="col-sm-12 col-md-4"><div class="feature-panel"><div class="feature-content"><h4><a href="/docs/database">Database</a></h4><p>KeystoneJS builds on top of Mongoose schema\'s to create "Lists", which contain items. Lists are available in the Admin UI.</p></div></div></div></div></div></div></div></div>')}.call(this,"docsnav"in f?f.docsnav:"undefined"!=typeof docsnav?docsnav:void 0,"docssection"in f?f.docssection:"undefined"!=typeof docssection?docssection:void 0),d.join("")},"en/pages/docs/learn/code":function(a){var c,d=[],e={},f=a||{};return function(a,f){e.docsnav=c=function(e){this&&this.block,this&&this.attributes||{};d.push('<div class="visible-xs"><ul class="nav-toggle">'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}}}.call(this),d.push('</ul></div><nav class="docs-sidebar hidden-xs"><ul class="sidebar-nav"><li'+b.cls(["introduction"==e.value?"active":null],[!0])+'><a href="/docs" class="nav-heading">Welcome</a></li>'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}}}.call(this),d.push("</ul><hr/>"),"introduction"!=e.value&&(d.push('<ul class="sidebar-nav">'),function(){var b=a;if("number"==typeof b.length)for(var c=0,f=b.length;f>c;c++){var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}else{var f=0;for(var c in b){f++;var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}}}.call(this),d.push("</ul>")),d.push("</nav>")},d.push('<div class="page-header"><div class="container"><h1>Code Examples</h1><p class="lead">Learn how to use KeystoneJS.</p></div></div><div class="container"><div class="row"><div class="col-sm-3">'),e.docsnav(f),d.push('</div><div class="col-sm-9"><div class="docs-content"><ul><h3><a href="/fetch">Fetch Examples</a></h3><p><a href="/fetch">noscript</a></p><p><a href="/body">body noscript</a></p><p><a href="/text">clean text</a></p><p><a href="/json/code">json code</a></p><p><a href="/markdown">markdown </a></p><p><a href="/fail">failure </a></p><p><a href="/lost-link">should 404  </a></p><p><a href="/quick-start" class="notspa">should reload</a></p><p><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></p></ul></div></div></div></div>')}.call(this,"docsnav"in f?f.docsnav:"undefined"!=typeof docsnav?docsnav:void 0,"docssection"in f?f.docssection:"undefined"!=typeof docssection?docssection:void 0),d.join("")},"en/pages/docs/learn/es6":function(a){var c,d=[],e={},f=a||{};return function(a,f){e.docsnav=c=function(e){this&&this.block,this&&this.attributes||{};d.push('<div class="visible-xs"><ul class="nav-toggle">'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}}}.call(this),d.push('</ul></div><nav class="docs-sidebar hidden-xs"><ul class="sidebar-nav"><li'+b.cls(["introduction"==e.value?"active":null],[!0])+'><a href="/docs" class="nav-heading">Welcome</a></li>'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}}}.call(this),d.push("</ul><hr/>"),"introduction"!=e.value&&(d.push('<ul class="sidebar-nav">'),function(){var b=a;if("number"==typeof b.length)for(var c=0,f=b.length;f>c;c++){var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),
g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}else{var f=0;for(var c in b){f++;var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}}}.call(this),d.push("</ul>")),d.push("</nav>")},d.push('<div class="page-header"><div class="container"><h1>ES6 React SPA  </h1><p class="lead">Using System.js and babel to build a new KeystoneJS.com SPA with React.</p></div></div><div class="container"><div class="row"><div class="col-sm-3">'),e.docsnav(f),d.push('</div><div class="col-sm-9"><div class="jl-guide"><div class="jl-guide-section"><div class="jl-guide__header"><div class="p lead">Our SPA creation guide <div class="jl-guide__title-info"> rundown of our requirements for a complete project    </div></div></div><p>The goal of this guide will be to take a current ExpressJS website built with Jade templates and convert it into a React based SPA integrated with Keystone. The current jade templates will remain and be included via plugin. A route config file will be used to designate the process for compiling each page.</p><p> We will perform this excercise with source code from the current website for <a href="https://github.com/keystonejs/keystonejs-site">KeystoneJS.com</a>.  Since the final output will need to be a <code>gh-pages</code> deployment, this guide will also document that process as well.  </p><p>In place of webpack / browserify we will use <a href="https://github.com/systemjs/systemjs">System.js</a> and build based on ES6 making use of <a href="http://babeljs.io">babel</a></p><Rundown></Rundown><ul><li>ES6 with System.js and babel</li><li>SPA using React and React-Router</li><li>Add Keystone to current express setup</li><li>Build process to deploy static version to  <code>gh-pages</code> branch</li></ul></div><!-- prepare--><div class="jl-guide-section"><div class="jl-guide__header"><h2 class="jl-guide__title"><div class="jl-guide__title-label"> <div class="jl-guide__title-count"><span class="jl-guide__title-count">1</span></div> Prepare <div class="jl-guide__title-info"> get your code base ready  </div></div></h2></div><p>We will start by cloning our repo and creating a new branch <b>spa</b>.  Pick a unique branch for you if working from a current local repo.  </p><pre class="line-numbers language-javascript">git clone git@github.com:keystonejs/keystonejs-site.git  \ncd keystonejs-site \ngit checkout -b spa  </pre><p>Create a new folder for our client files.  We will serve this as a static just like public.  </p><pre class="command-line"><code class="language-javascript">mkdir client </code></pre><p>Install and save our new dependencies.  </p><pre class="command-line"><code class="language-javascript">npm i --save systemjs babel typescript keystone react react-router  </code></pre></div><div class="jl-guide-section">				<div class="jl-guide__header"><h2 class="jl-guide__title"><div class="jl-guide__title-label"> <div class="jl-guide__title-count"><span class="jl-guide__title-count">2</span></div>Client Files<div class="jl-guide__title-info">create your new client app </div></div></h2></div><h3>Rework our jade files</h3><p>We still like using jade.  It is quick, good for large blocks of html, and having seperate files is easier for multiple parties to maintain.  </p><p>For our SPA we only need an index file.  We will create a new base file and remove the template include lines from each of the content files. The old base file can eventually be removed.  </p><p class="note">You do not have to remove all of the template includes from your content files.  Instead, rename each appropriate template file and replace it with a blank one.</p><div class="code-header"><h4> Create your SPA index file. </h4><p>Copy <code>content/common/templates/layout/base.jade</code> to <code>content/common/templates/layout/spa_base.jade</code> and add a named div.</p><p>Replace the old javascript with the system.js tag.  We will add our app later.  </p></div><pre class="language-javascript"><code class="language-markup">\n	// old code\n		.docs-body\n			block content\n		\n	// replace with\n		.docs-body\n			#keystonejs-spa\n		\n	/* javascript tag */\n	// old code\n		script(src="/js/lib/jquery/jquery-1.10.2.min.js")\n		script(src=\'/js/lib/bootstrap/collapse.js\')\n		//- script(src=\'/js/lib/bootstrap/dropdown.js\')\n		script(src=\'/js/lib/prism/prism.min.js\')\n		script(src=\'/js/anchor-links.js\')\n		script(src=\'/js/api-code.js\')\n	\n	// replace with\n		script(src="system.js")\n	\n</code>\n\n</pre><h3>Create a folder for your project</h3><p>Create your project wherever you want:</p><pre class="command-line">mkdir my-test-project</pre><p>Than make sure you\'re in your new project:</p><pre class="command-line">cd my-test-project</pre><h3>Run the generator</h3><pre class="command-line">yo keystone</pre><p>The generator will ask you a few questions about what features you\'d like to include, then configure and copy all the files you\'ll need into your project.</p><p>It will also install dependencies from npm so you\'re ready to go.</p></div><div class="jl-guide-figure jl-guide-figure--commands hidden-xs"><div class="window safari"><img src="/images/getting-started/commands-safari.png" alt="Safari window" width="942" height="616"/></div><div class="window terminal"><div class="terminal-cursor"></div><img src="/images/getting-started/commands-terminal.png" alt="Terminal window" width="650" height="437"/></div><div class="figure-shadow"></div></div><div class="jl-guide-section"><div class="jl-guide__header"><h2 class="jl-guide__title"><span class="jl-guide__title-count">3</span><div class="jl-guide__title-label">You\'re Done!</div></h2><p class="jl-guide__subtitle">So you just created your first KeystoneJS project, congrats!</p><p class="jl-guide__subtitle">Run it in your command line like this:</p><pre class="command-line">node keystone</pre><p class="jl-guide__subtitle">Then open <a href="http://localhost:3000" target="_blank">http://localhost:3000</a> to view it in your browser.</p><p class="jl-guide__subtitle">If you want to see what the generator actually did take a look at our getting started guide, it\'ll walk you through the manual setup process. This is particularly helpful if you\'re new to Node.js.</p><p class="jl-guide__subtitle"><a href="/docs/getting-started">View the getting started guide &rarr;</a></p></div></div><div class="jl-guide-figure jl-guide-figure--finished wow-much-find hidden-xs"><img src="/images/getting-started/commands-safari.png" alt="Safari window" width="1680" height="600" class="sr-only"/></div><div class="jl-guide-section"><div><div class="jl-guide__header"><h2 class="jl-guide__title"><span class="jl-guide__title-count">?</span><div class="jl-guide__title-label">Problems</div></h2><p class="jl-guide__subtitle">Something went wrong? Hopefully these tips will help.</p><h3>ERR! Please try running this command again as root/Administrator.</h3><p>When running npm install -g generator-keystone, you may get an EACCES error asking you to run the command again as root/Administrator. This indicates that there is a permissions issue.</p><p>On your development system you can change directory ownership to the current $USER so you do not have to run sudo while installing untrusted code:</p><pre>sudo chown -R $USER /usr/local\n \n# Other directories may be required depending on your O/S\nsudo chown -R $USER /usr/lib/node_modules/</pre><p>For a production/shared environment you may wish to re-run the npm command with the sudo prefix:</p><pre>sudo npm install -g generator-keystone</pre><p>For more information, see the <a href=\'http://foohack.com/2010/08/intro-to-npm/#what_no_sudo\', target=\'_blank\'>"What, no sudo?"</a> of the Intro to npm by Isaac Schulueter.</p><h3>What do you mean it couldn\'t find my Database?</h3><p>By default, KeystoneJS will look for a MongoDB server running on localhost on the default port, and connect to it. If you\'re getting errors related to the MongoDB connection, make sure your MongoDB server is running.</p><p>If you haven\'t installed MongoDB yet, follow <a href="https://www.mongodb.org/downloads" target="_blank">the official instructions.</a></p><p>To connect to a server other than localhost, add a MONGO_URI setting to the .env file in your Keystone project directory:</p><pre>MONGO_URI=mongodb://your-server/database-name</pre><h3>Something else?</h3><p class="jl-guide__subtitle">If your issue still isn\'t resolved, reach out to us on the <a href="https://groups.google.com/d/forum/keystonejs" target="_blank">KeystoneJS Google Group</a>.</p></div></div></div></div></div></div></div>')}.call(this,"docsnav"in f?f.docsnav:"undefined"!=typeof docsnav?docsnav:void 0,"docssection"in f?f.docssection:"undefined"!=typeof docssection?docssection:void 0),d.join("")},"en/pages/docs/learn/resources":function(a){var c,d=[],e={},f=a||{};return function(a,f){e.docsnav=c=function(e){this&&this.block,this&&this.attributes||{};d.push('<div class="visible-xs"><ul class="nav-toggle">'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}}}.call(this),d.push('</ul></div><nav class="docs-sidebar hidden-xs"><ul class="sidebar-nav"><li'+b.cls(["introduction"==e.value?"active":null],[!0])+'><a href="/docs" class="nav-heading">Welcome</a></li>'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}}}.call(this),d.push("</ul><hr/>"),"introduction"!=e.value&&(d.push('<ul class="sidebar-nav">'),function(){var b=a;if("number"==typeof b.length)for(var c=0,f=b.length;f>c;c++){var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}else{var f=0;for(var c in b){f++;var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>');
}}}.call(this),d.push("</ul>")),d.push("</nav>")},d.push('<div class="page-header"><div class="container"><h1>Resources</h1><p class="lead">Learn how to build in Node.js.</p></div></div><div class="container"><div class="row"><div class="col-sm-3">'),e.docsnav(f),d.push('</div><div class="col-sm-9"><div class="docs-content"></div></div></div></div>')}.call(this,"docsnav"in f?f.docsnav:"undefined"!=typeof docsnav?docsnav:void 0,"docssection"in f?f.docssection:"undefined"!=typeof docssection?docssection:void 0),d.join("")},"en/pages/docs/learn":function(a){var c,d=[],e={},f=a||{};return function(a,f){e.docsnav=c=function(e){this&&this.block,this&&this.attributes||{};d.push('<div class="visible-xs"><ul class="nav-toggle">'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}}}.call(this),d.push('</ul></div><nav class="docs-sidebar hidden-xs"><ul class="sidebar-nav"><li'+b.cls(["introduction"==e.value?"active":null],[!0])+'><a href="/docs" class="nav-heading">Welcome</a></li>'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}}}.call(this),d.push("</ul><hr/>"),"introduction"!=e.value&&(d.push('<ul class="sidebar-nav">'),function(){var b=a;if("number"==typeof b.length)for(var c=0,f=b.length;f>c;c++){var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}else{var f=0;for(var c in b){f++;var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}}}.call(this),d.push("</ul>")),d.push("</nav>")},d.push('<div class="page-header"><div class="container"><h1>Learn</h1><p class="lead">Learn how to build database-driven websites, applications and APIs in Node.js.</p></div></div><div class="container"><div class="row"><div class="col-sm-3">'),e.docsnav(f),d.push('</div><div class="col-sm-9"><div class="docs-content"><p class="lead">Articles, code examples and more resources</p><div class="row"><div class="col-sm-12 col-md-4"><div class="feature-panel"><div class="feature-content"><h4><a href="/docs/learn/es6">ES6 & System.js</a></h4><p>We converted this site to use <a href="https://github.com/systemjs/systemjs" target="_blank">System.js</a>, <a href="http://babeljs.io" target="_blank">Babel</a> and <a href="https://facebook.github.io/react/" target="_blank">React</a></p></div></div></div><div class="col-sm-12 col-md-4"><div class="feature-panel"><div class="feature-content"><h4><a href="/docs/learn/code">Code Examples</a></h4><p>View code examples for Email, socket.io support and more.</p></div></div></div><div class="col-sm-12 col-md-4"><div class="feature-panel"><div class="feature-content"><h4><a href="/docs/learn/resources">Resources</a></h4><p>Goodies about everything from MongoDB, mongoose, React, System.js, Keystone and more.</p></div></div></div></div></div></div></div></div>')}.call(this,"docsnav"in f?f.docsnav:"undefined"!=typeof docsnav?docsnav:void 0,"docssection"in f?f.docssection:"undefined"!=typeof docssection?docssection:void 0),d.join("")},"en/pages/docs/views":function(a){var c,d=[],e={},f=a||{};return function(a,f){e.docsnav=c=function(e){this&&this.block,this&&this.attributes||{};d.push('<div class="visible-xs"><ul class="nav-toggle">'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}}}.call(this),d.push('</ul></div><nav class="docs-sidebar hidden-xs"><ul class="sidebar-nav"><li'+b.cls(["introduction"==e.value?"active":null],[!0])+'><a href="/docs" class="nav-heading">Welcome</a></li>'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}}}.call(this),d.push("</ul><hr/>"),"introduction"!=e.value&&(d.push('<ul class="sidebar-nav">'),function(){var b=a;if("number"==typeof b.length)for(var c=0,f=b.length;f>c;c++){var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}else{var f=0;for(var c in b){f++;var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}}}.call(this),d.push("</ul>")),d.push("</nav>")},d.push('<div class="page-header"><div class="container"><h1>Views</h1><p class="lead">Using Views with your keystone application</p></div></div><div class="container"><div class="row"><div class="col-sm-3">'),e.docsnav(f),d.push('</div><div class="col-sm-9"><div class="docs-content"><h2><a name="concepts"></a>Concepts</h2><p>The View class makes it easier to write descriptive route handlers without worrying about async code too much. Express routes can get messy when they\'re handling several different branches, because of the async nature of node.js.</p><a name="queues"></a><h2>Queues</h2><a name="queue-init"></a><h3>Init</h3><p>registers callbacks to run first.</p><a name="queue-action"></a><h3>Action</h3><p>`view.on(\'{REST verb}\', callback)`</p><p>This method differs from what express middleware would do subtly. We can also supply a middle argument to match on e.g.</p><div class="code-header"><h4>/views/form.js</h4></div><pre><code class="language-javascript">view.on(\'post\', { action: \'contact\' }, function() {\nhandle submission of contact form\n});\nview.on(\'post\', { action: \'comment\' }, function() {\n    // let the user leave a comment\n});</code></pre><p>This is useful in complicated setups, e.g., multiple forms on a single page. Each form would POST back to the same url, with a hidden field called action in it.</p><a name="queue-render"></a><h3>Render</h3><p>final queue to be executed.</p></div></div></div></div>')}.call(this,"docsnav"in f?f.docsnav:"undefined"!=typeof docsnav?docsnav:void 0,"docssection"in f?f.docssection:"undefined"!=typeof docssection?docssection:void 0),d.join("")},"en/pages/examples":function(a){var b=[];return b.push('<div class="page-header"><div class="container"><h1>Examples</h1><p class="lead">The following are a great way to see what Keystone can do, and how to use its various features.</p></div></div><div style="margin-bottom: 3em;" class="container-sm"><a name="app"></a><h2>Applications</h2><a name="app-demo"></a><h3>Demo App</h3><p>The demo app is a simple implementation showing how to create a blog, photo gallery and contact form, as well as how to set up session management, error handling and csv downloads.</p><p>You can also log into the Keystone Admin UI and see how it works using the demo account.</p><ul class="list-inline"><li><a href="http://demo.keystonejs.com" target="_blank" title="Demo website" class="btn btn-primary">Launch the site</a></li><li><a href="http://github.com/JedWatson/keystone-demo" target="_blank" title="View on GitHub" class="btn btn-default">View the GitHub Project</a></li></ul><a name="app-sydjs"></a><h3>SydJS Website</h3><p>The team at <a href=\'http://www.thinkmill.com.au/\' target=\'_blank\'>Thinkmill</a> created a new website for SydJS, Sydney\'s Javascript Meetup, using Keystone.</p><p>It features a database of meetups, members, links, blog, organisations and mentors, as well as support for account creation and login using Facebook, Twitter and GitHub accounts.</p><p>It also includes the new client-side content management features, and a page where members can manage their profiles, rsvp to meetups and submit posts and links.</p><ul class="list-inline"><li><a href="http://www.sydjs.com" target="_blank" title="Demo website" class="btn btn-primary">Launch the site</a></li><li><a href="http://github.com/JedWatson/sydjs-site" target="_blank" title="View on GitHub" class="btn btn-default">View the GitHub Project</a></li></ul><a name="production"></a><h2>KeystoneJS in Production</h2><p>There are an ever-growing number of websites and applications in production powered by KeystoneJS - here are some of our favourites.</p><p>Have you launched a project with KeystoneJS? Let us know! Tweet <a href="https://twitter.com/KeystoneJS" target="_blank">@KeystoneJS</a></p><h3>BodyMindLife</h3><p>BodyMindLife\'s KeystoneJS-powered website has dynamic content, events, timetables, and pass purchasing integrated with the MindBodyOnline studio management system.</p><ul class="list-inline"><li><a href="http://www.bodymindlife.com.au" target="_blank" title="BodyMindLife Yoga Studio" class="btn btn-primary">Launch the site</a></li></ul><h3>CorkDev.io (Tech Meetup)</h3><p>corkdev.io is an open forum of professionals, hackers, architects and software engineers in Cork, Ireland.</p><ul class="list-inline"><li><a href="http://corkdev.io/" target="_blank" title="CorkDev.io" class="btn btn-primary">Launch the site</a></li></ul><h3>ExhibitionsRUs</h3><p>The ExhibitionsRUs website is a UK e-commerce site with a product catalogue and shopping cart, built by <a href="http://prowebsoftware.net" target="_blank">ProWebSoftware</a> with KeystoneJS.</p><ul class="list-inline"><li><a href="https://www.exhibitionsrus.co.uk" target="_blank" title="ExhibitionsRUs" class="btn btn-primary">Launch the site</a></li></ul><h3>flowthings.io</h3><p>The marketing site for flowthings.io is powered by KeystoneJS. They are a startup from Brooklyn that creates a realtime data analytics solution specially geared towards the Internet of Things.</p><ul class="list-inline"><li><a href="https://flowthings.io" target="_blank" title="flowthings.io" class="btn btn-primary">Launch the site</a></li></ul><h3>Gold Class Butler</h3><p>KeystoneJS powers the API and payment integration behind Event Cinemas\' mobile app for ordering food and drink while you\'re watching a movie.</p><ul class="list-inline"><li><a href="http://www.goldclassbutler.com.au" target="_blank" title="Gold Class Butler" class="btn btn-primary">Launch the site</a></li></ul><h3>Hood (Social Network)</h3><p>The idea behind this site is to connect positive people of cheerful spirit and a good heart in every possible way.</p><ul class="list-inline"><li><a href="http://www.hood.rs/" target="_blank" title="Hood.rs" class="btn btn-primary">Launch the site</a></li></ul><h3>HS Hackers Philly</h3><p>The High School Hackers meetup crew in Philly have done a great job of taking our SydJS site and making it their own.</p><ul class="list-inline"><li><a href="http://hshackers.org" target="_blank" title="HS Hackers Philly" class="btn btn-primary">Launch the site</a></li></ul><h3>Macmillan Connect</h3><p>Macmillan Education\'s next generation of learning applications is powered by KeystoneJS, which provides their licensing system, back-end API, progress synchronisation and mark book generation for teachers.</p><ul class="list-inline"><li><a href="http://www.macmillanconnect.com.au" target="_blank" title="Macmillan Connect" class="btn btn-primary">Launch the site</a></li></ul><h3>Make &amp; Build</h3><p>Make &amp; Build is a team of digital craftsmen in Atlanta, GA, and you can read their slidedeck about moving from Wordpress to KeystoneJS <a href="https://s3.amazonaws.com/mnb_keystone/slidedecks/keystonejs.pdf" target="_blank" title="Make &amp; Build Transition to KeystoneJS Slidedeck">here</a>.</p><ul class="list-inline"><li><a href="http://makeandbuild.com" target="_blank" title="Make &amp; Build" class="btn btn-primary">Launch the site</a></li></ul><h3>MiMi</h3><p>Mimi is driven to create valuable products for a healthier, more empowered and informed user. Combining scientific knowledge with a profound understanding of design, MiMi builds smartphone-based tools for people to hear better.</p><ul class="list-inline"><li><a href="http://mimi.io" target="_blank" title="MiMi" class="btn btn-primary">Launch the site</a></li></ul><h3>Suit Shop</h3><p>KeystoneJS is behind the beautiful design, dynamic content and appointment setting features and customer area of Suit Shop\'s website.</p><ul class="list-inline"><li><a href="http://www.suitshop.com.au" target="_blank" title="Suit Shop" class="btn btn-primary">Launch the site</a></li></ul><h3>Tim Pietrusky</h3><p>Tim has created a unique format for his personal blog, to go with the great content. You can read about his experience transitioning to KeystoneJS in <a href="http://timpietrusky.com/restart">this post</a>.</p><ul class="list-inline"><li><a href="http://timpietrusky.com" target="_blank" title="Tim Pietrusky" class="btn btn-primary">Launch the site</a></li></ul><h3>Yoga Australia</h3><p>The Yoga Teachers Association of Australia\'s website and back-end management system is built with KeystoneJS.</p><ul class="list-inline"><li><a href="http://www.yogaaustralia.org.au" target="_blank" title="Yoga Australia" class="btn btn-primary">Launch the site</a></li></ul></div>'),
b.join("")},"en/pages/fetchError":function(a){var c,d=[],e=a||{};return function(a,e){d.push('<p class="lead">Fetch Error</p><p>'+b.escape(null==(c=a)?"":c)+"</p><p>fetched page: <b>"+b.escape(null==(c=e)?"":c)+"</b></p><p>This could be a CORS error. Check the console for a more detailed reason.</p>")}.call(this,"error"in e?e.error:"undefined"!=typeof error?error:void 0,"page"in e?e.page:"undefined"!=typeof page?page:void 0),d.join("")},"en/pages/home":function(a){var c,d=[],e=a||{};return function(a){d.push('<div class="home-header"><div class="container"><img src="/images/logo-inverted.svg" alt="KeystoneJS" width="80" height="81"/><h1>Node.js CMS &amp; Web Application Platform</h1><h2>The open source framework for developing database-driven websites, applications and APIs in Node.js. Built on Express and MongoDB.</h2><div class="home-header-buttons"><a href="/quick-start" title="KeystoneJS getting started guide" class="btn btn-lg btn-primary"><span class="hidden-xs">Get Started</span><span class="visible-xs">Start</span></a><a href="http://demo.keystonejs.com" target="_blank" title="Demo Website (new window)" class="btn btn-lg btn-link hidden-xs">Try the demo</a></div><ul class="home-header-list-links"><li><a href="/docs" title="KeystoneJS Documentation">Read the Documentation</a></li><li>Current version '+b.escape(null==(c=a)?"":c)+'</li><li><a href="https://github.com/keystonejs/keystone/blob/master/HISTORY.md" target="_blank" title="View Changelog on GitHub">What\'s new</a></li><li>Free and open source (MIT)</li></ul><ul class="home-header-list-social"><li class="hidden-xs"><a href="/examples" title="Sample Applications"><i class="entypo entypo-network"></i><span class="home-header-social-item">See examples</span></a></li><li><a href="https://twitter.com/keystonejs" target="_blank"><i class="entypo-social entypo-twitter"></i><span class="home-header-social-item">Follow @KeystoneJS on Twitter</span></a></li><li><a href="http://github.com/keystonejs/keystone" target="_blank"><i class="entypo-social entypo-github"></i><span class="home-header-social-item">Star on Github</span></a></li></ul><div class="home-header-brands-title">Keystone powers websites, apps and APIs for:</div><div class="home-header-brands"><div class="home-header-brand"><img src="/images/brand-continental.png"/></div><div class="home-header-brand"><img src="/images/brand-westpac.png"/></div><div class="home-header-brand"><img src="/images/brand-sony.png"/></div><div class="home-header-brand"><img src="/images/brand-event_cinemas.png"/></div><div class="home-header-brand"><img src="/images/brand-vodafone.png"/></div><div class="home-header-brand"><img src="/images/brand-macmillan.png"/></div></div></div></div><section class="intro-section building-section"><div class="container"><div class="section-header"><h2>Get a head-start on the features you need</h2><p class="lead">KeystoneJS is the easiest way to build database-driven websites, applications and APIs in Node.js.</p></div><div class="row"><div class="col-sm-6 col-md-4 col-lg-3"><div class="feature-panel"><span class="feature-icon entypo entypo-leaf"></span><div class="feature-content"><h4>Express.js and MongoDB</h4><p>Keystone will configure express - the de facto web server for node.js - for you and connect to your MongoDB database using Mongoose, the leading ODM package.</p></div></div></div><div class="col-sm-6 col-md-4 col-lg-3"><div class="feature-panel"><span class="feature-icon entypo entypo-shuffle"></span><div class="feature-content"><h4>Dynamic Routes</h4><p>Keystone starts with best practices for setting up your MV* application, and makes it easy to manage your templates, views and routes.</p></div></div></div><div class="col-sm-6 col-md-4 col-lg-3"><div class="feature-panel"><span class="feature-icon entypo entypo-picture"></span><div class="feature-content"><h4>Database Fields</h4><p>IDs, Strings, Booleans, Dates and Numbers are the building blocks of your database. Keystone builds on these with useful, real-world field types like name, email, password, address, image and relationship fields (and more)</p></div></div></div><div class="col-sm-6 col-md-4 col-lg-3"><div class="feature-panel"><span class="feature-icon entypo entypo-light-bulb"></span><div class="feature-content"><h4>Auto-generated Admin UI</h4><p>Whether you use it while you\'re building out your application, or in production as a database content management system, Keystone\'s Admin UI will save you time and make managing your data easy.</p></div></div></div><div class="col-sm-6 col-md-4 col-lg-3"><div class="feature-panel"><span class="feature-icon entypo entypo-pencil"></span><div class="feature-content"><h4>Simpler Code</h4><p>Sometimes, async code can get complicated to do simple things. Keystone helps keep simple things - like loading data before displaying it in a view - simple.</p></div></div></div><div class="col-sm-6 col-md-4 col-lg-3"><div class="feature-panel"><span class="feature-icon entypo entypo-docs"></span><div class="feature-content"><h4>Form Processing</h4><p>Want to validate a form, upload an image, and update your database with a single line? Keystone can do that, based on the data models you\'ve already defined.</p></div></div></div><div class="col-sm-6 col-md-4 col-lg-3"><div class="feature-panel"><span class="feature-icon entypo entypo-users"></span><div class="feature-content"><h4>Session Management</h4><p>Keystone comes ready out of the box with session management and authentication features, including automatic encryption for password fields.</p></div></div></div><div class="col-sm-6 col-md-4 col-lg-3"><div class="feature-panel"><span class="feature-icon entypo entypo-paper-plane"></span><div class="feature-content"><h4>Email Sending</h4><p>Keystone makes it easy to set up, preview and send template-based emails for your application. It also integrates with Mandrill (Mailchimp\'s excellent transaction email sending service)</p></div></div></div><div class="col-sm-6 col-md-4 col-lg-3 hidden-sm hidden-lg"><div class="feature-panel"><span class="feature-icon entypo entypo-publish"></span><div class="feature-content"><h4>Managed Updates</h4><p>Keystone includes an optional updates framework, that can take care of running update scripts for you, making it easy to transition from development to production.</p></div></div></div></div></div></section><section class="intro-section feedback-section"><div class="container"><div class="section-header"><h2>Community Feedback</h2><p class="lead">What people have been saying about KeystoneJS</p></div><div class="row"><div class="col-sm-4"><blockquote lang="en" class="twitter-tweet"><p><a href="https://twitter.com/KeystoneJS">@KeystoneJS</a> It&apos;s by far the best CMS framework I&apos;ve come across.</p>&mdash; Elliott Eastbourne (@e_eastbourne) <a href="https://twitter.com/e_eastbourne/status/581819586212925440">March 28, 2015</a></blockquote><blockquote lang="en" class="twitter-tweet"><p>Wow, there is an awesome <a href="https://twitter.com/hashtag/nodejs?src=hash">#nodejs</a> <a href="https://twitter.com/hashtag/cms?src=hash">#cms</a>, nice to meet you <a href="https://twitter.com/KeystoneJS">@KeystoneJS</a> !</p>&mdash; Marcell Kiss (@kmarci88) <a href="https://twitter.com/kmarci88/status/576303451778478080">March 13, 2015</a></blockquote><blockquote lang="en" class="twitter-tweet"><p>Really impressed by <a href="https://twitter.com/KeystoneJS">@keystonejs</a>. We&apos;re having fun building our new site with it down at the <a href="https://twitter.com/futurecitiescat">@futurecitiescat</a> lab. <a href="http://t.co/befOjrSENQ">http://t.co/befOjrSENQ</a> <a href="https://twitter.com/hashtag/js?src=hash">#js</a></p>&mdash; Tom Hartnell (@tomhartnell) <a href="https://twitter.com/tomhartnell/status/560776490011590656">January 29, 2015</a></blockquote><blockquote lang="en" class="twitter-tweet"><p>So decided to peruse CMS frameworks built in NodeJS. <a href="https://twitter.com/KeystoneJS">@KeystoneJS</a> is rock solid and so damn simple to use!</p>&mdash; Joshua Jung (@joshua_p_jung) <a href="https://twitter.com/joshua_p_jung/status/541266458987466752">December 6, 2014</a></blockquote><blockquote lang="en" class="twitter-tweet"><p><a href="https://twitter.com/KeystoneJS">@KeystoneJS</a> is simply blowing my mind! Loving it :)</p>&mdash; Nick Loyal (@craftbynick) <a href="https://twitter.com/craftbynick/status/504604182935240704">August 27, 2014</a></blockquote><blockquote lang="en" class="twitter-tweet"><p>Starting with <a href="https://twitter.com/KeystoneJS">@KeystoneJS</a> , it is momentous &amp; beauteous, kudos to the team behind this awe-inspiring masterpiece.</p>&mdash; Shreyansh Jaiswal (@shreyanshsum) <a href="https://twitter.com/shreyanshsum/status/478845070527832064">June 17, 2014</a></blockquote></div><div class="col-sm-4"><blockquote lang="en" class="twitter-tweet"><p>Trying out <a href="https://twitter.com/KeystoneJS">@KeystoneJS</a> to build my portfolio site, it&apos;s brilliant! <a href="https://twitter.com/hashtag/nodejs?src=hash">#nodejs</a> <a href="https://twitter.com/hashtag/expressjs?src=hash">#expressjs</a> <a href="https://twitter.com/hashtag/meanstack?src=hash">#meanstack</a></p>&mdash; Graeme Fulton (@graeme_fulton) <a href="https://twitter.com/graeme_fulton/status/581421065303392256">March 27, 2015</a></blockquote><blockquote lang="en" class="twitter-tweet"><p>Been using <a href="https://twitter.com/KeystoneJS">@KeystoneJS</a> in a couple projects and so far I think it&apos;s really <a href="https://twitter.com/hashtag/awesome?src=hash">#awesome</a>! If you don&apos;t know what it is, check it out already! :)</p>&mdash; Juhani Kumara (@JuhaniKumara) <a href="https://twitter.com/JuhaniKumara/status/576650515204943872">March 14, 2015</a></blockquote><blockquote lang="en" class="twitter-tweet"><p>The folks <a href="https://twitter.com/KeystoneJS">@KeystoneJS</a> created an awesome CMS / Framework for <a href="https://twitter.com/hashtag/nodejs?src=hash">#nodejs</a>. <a href="https://twitter.com/hashtag/express?src=hash">#express</a>, <a href="https://twitter.com/hashtag/mongodb?src=hash">#mongodb</a>, <a href="https://twitter.com/hashtag/less?src=hash">#less</a>, <a href="https://twitter.com/hashtag/bootstrap?src=hash">#bootstrap</a>, <a href="https://twitter.com/hashtag/responsive?src=hash">#responsive</a>. Wow!</p>&mdash; Daniel Khan (@dkhan) <a href="https://twitter.com/dkhan/status/564421474107535360">February 8, 2015</a></blockquote><blockquote lang="en" class="twitter-tweet"><p>Have come back to <a href="https://twitter.com/KeystoneJS">@KeystoneJS</a> to build my portfolio with and I must say I am constantly discovering things that impress me!</p>&mdash; Tim Veletta (@TimVeletta) <a href="https://twitter.com/TimVeletta/status/540521334040588290">December 4, 2014</a></blockquote><blockquote lang="en" class="twitter-tweet"><p><a href="https://twitter.com/KeystoneJS">@KeystoneJS</a> is the awe in awesome. :)</p>- Lasana Murray (@metasansana)<a href="https://twitter.com/metasansana/statuses/458414971492507650">April 22, 2014</a></blockquote><blockquote lang="en" class="twitter-tweet"><p><a href="https://twitter.com/JedWatson">@JedWatson</a> <a href="https://twitter.com/KeystoneJS">@KeystoneJS</a> Thanks for the immense effort. You are enabling a lot of productivity for a lot of developers. <a href="https://twitter.com/search?q=%23LoveKeystoneJS&amp;src=hash">#LoveKeystoneJS</a></p>- Jason Welch (@JChristopherW)<a href="https://twitter.com/JChristopherW/statuses/451872595512922112">April 4, 2014</a></blockquote></div><div class="col-sm-4"><blockquote lang="en" class="twitter-tweet"><p><a href="https://twitter.com/KeystoneJS">@KeystoneJS\n congrats guys, great framework</a></p>&mdash; Hugo Di Francesco (@hugo__df) <a href="https://twitter.com/hugo__df/status/585691583653220352">April 8, 2015</a></blockquote><blockquote lang="en" class="twitter-tweet"><p><a href="https://twitter.com/KeystoneJS">@KeystoneJS</a> that was the easiest setup of my life!</p>&mdash; Tom Newby (@tomnewbyau) <a href="https://twitter.com/tomnewbyau/status/579080171430359041">March 21, 2015</a></blockquote><blockquote lang="en" class="twitter-tweet"><p><a href="http://t.co/2VSm33YS7b">http://t.co/2VSm33YS7b</a> is the best node based CMS I&apos;ve found so far. Lot&apos;s of community support and good docs. <a href="https://twitter.com/hashtag/webdev?src=hash">#webdev</a> <a href="https://twitter.com/hashtag/nodejs?src=hash">#nodejs</a></p>&mdash; Christopher Marshall (@thoughtpalette) <a href="https://twitter.com/thoughtpalette/status/555026285689188352">January 13, 2015</a></blockquote><blockquote lang="en" class="twitter-tweet"><p>If you are developing websites for small to medium (and even large) companies, you cant ignore KeystoneJS.... <a href="http://t.co/fFpD2UDNsk">http://t.co/fFpD2UDNsk</a></p>&mdash; John Cardwell (@saddacracker) <a href="https://twitter.com/saddacracker/status/536346807807524864">November 23, 2014</a></blockquote><blockquote lang="en" class="twitter-tweet"><p><a href="https://twitter.com/KeystoneJS">@KeystoneJS</a> is the way to go. Very fun and easy to develop with. IT&apos;S THE FUTURE!</p>&mdash; Gabriel Jablanczy (@Jblnczy) <a href="https://twitter.com/Jblnczy/status/511123171362500608">September 14, 2014</a></blockquote><blockquote lang="en" class="twitter-tweet"><p><a href="https://twitter.com/KeystoneJS">@KeystoneJS</a> So far, I&apos;m loving Keystone&apos;s versatility! I use WordPress for a lot, but this does so much more, and more easily! Thanks!</p>&mdash; Codacity (@Codacity) <a href="https://twitter.com/Codacity/status/493098291932823553">July 26, 2014</a></blockquote></div></div><hr/><div class="section-header"><a href="https://twitter.com/keystonejs" data-show-count="true" data-size="large" class="twitter-follow-button">Follow @keystonejs</a></div></div></section><section class="intro-section admin-section"><div class="container"><div class="section-header"><h2>Admin Interface</h2><p class="lead">Keystone gives you a beautiful, customisable Admin UI based on your models</p></div></div><div class="container admin-image-full"><img src="/images/home/admin-interface.png" class="img-responsive"/></div></section><section class="intro-section tools-section"><span class="tool-icon tool-icon__cloud entypo entypo-cloud"></span><span class="tool-icon tool-icon__rocket entypo entypo-rocket"></span><div class="container"><div class="section-header"><h2 class="text-center">What you build is up to you.</h2><p class="lead">There are a lot of frameworks that make decisions for you, and many that take decisions away. Keystone doesn\'t do that. Use the features that suit you, and replace the ones that don\'t.</p></div><div class="big-icon"><span class="entypo entypo-tools"></span></div><div class="row"><div class="col-sm-6 col-md-3"><h4>Built on Express</h4><p>Keystone can configure Express for you, or you can take over and treat Keystone like any other Express middleware.</p><p>You can also easily integrate it into an existing Express app.</p></div><div class="col-sm-6 col-md-3"><h4>Powered by MongoDB</h4><p>Keystone uses Mongoose, the leading ODM for node.js and MongoDB, and gives you a single place for your schema, \nvalidation rules and logic.</p><p>So anything you can build with MongoDB, you can build with Keystone.</p></div><div class="col-sm-6 col-md-3"><h4>Lightweight and flexible</h4><p>Keystone is designed to be as light as you want - you can pick and choose the features you want to include.</p><p>Create your own routes, your own database schema, and use any template language you like.</p></div><div class="col-sm-6 col-md-3"><h4>Extendable</h4><p>One of the greatest things about node.js is the vast number of quality packages available.</p><p>Keystone is designed to let you use any of them, without losing the benefits it provides.</p></div></div></div></section><section class="intro-section cta-section"><div class="container"><div class="row"><div class="col-sm-6"><div class="left-col"><h3><a href="/quick-start" title="KeystoneJS Getting Started">Get Started &rarr;</a></h3><p class="lead">Sound like what you\'ve been looking for? Check out the getting started guide and learn how to get up and running in less than a minute.</p></div></div><div class="col-sm-6"><div class="right-col"><h3><a href="mailto:contact@keystonejs.com">Get in Touch &rarr;</a></h3><p class="lead">If you are using Keystone for a project, interested in contributing, or looking for commercial support, we\'d love to hear about it. Please contact us.</p></div></div></div></div></section><script async="" src="//platform.twitter.com/widgets.js" charset="utf-8"></script>')}.call(this,"version"in e?e.version:"undefined"!=typeof version?version:void 0),d.join("")},"en/pages/journal":function(a){var c,d=[],e={},f=a||{};return function(a,f){e.docsnav=c=function(e){this&&this.block,this&&this.attributes||{};d.push('<div class="visible-xs"><ul class="nav-toggle">'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}}}.call(this),d.push('</ul></div><nav class="docs-sidebar hidden-xs"><ul class="sidebar-nav"><li'+b.cls(["introduction"==e.value?"active":null],[!0])+'><a href="/docs" class="nav-heading">Welcome</a></li>'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}}}.call(this),d.push("</ul><hr/>"),"introduction"!=e.value&&(d.push('<ul class="sidebar-nav">'),function(){var b=a;if("number"==typeof b.length)for(var c=0,f=b.length;f>c;c++){var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}else{var f=0;for(var c in b){f++;var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}}}.call(this),d.push("</ul>")),d.push("</nav>")},d.push('<div class="page-header"><div class="container"><h1>ES6 React SPA  </h1><p class="lead">Using System.js and babel to build a new KeystoneJS.com SPA with React.</p></div></div><div class="col-sm-3">'),e.docsnav(f),d.push('</div><div class="col-sm-9"><div class="docs-content"><div class="jl-guide"><!-- goals--><div class="jl-guide-section"><div class="container"><div class="jl-guide__header"><h2 class="jl-guide__title"><div class="jl-guide__title-label"> \n Goals <div class="jl-guide__title-info"> rundown of our requirements for a complete project    </div></div></h2></div><p>The goal of this guide will be to take a current ExpressJS website built with Jade templates and convert it into a React based SPA integrated with Keystone. The current jade templates will remain and be included via plugin. A route config file will be used to designate the process for compiling each page.</p><p> We will perform this excercise with source code from the current website for <a href="https://github.com/keystonejs/keystonejs-site">KeystoneJS.com</a>.  Since the final output will need to be a <code>gh-pages</code> deployment, this guide will also document that process as well.  </p><p>In place of webpack / browserify we will use <a href="https://github.com/systemjs/systemjs">System.js</a> and build based on ES6 making use of <a href="http://babeljs.io">babel</a></p><Rundown></Rundown><ul><li>ES6 with System.js and babel</li><li>SPA using React and React-Router</li><li>Add Keystone to current express setup</li><li>Build process to deploy static version to  <code>gh-pages</code> branch</li></ul></div></div><!-- prepare--><div class="jl-guide-section"><div class="container"><div class="jl-guide__header"><h2 class="jl-guide__title"><div class="jl-guide__title-label"> <div class="jl-guide__title-count"><span class="jl-guide__title-count">1</span></div> Prepare <div class="jl-guide__title-info"> get your code base ready  </div></div></h2></div><p>We will start by cloning our repo and creating a new branch <b>spa</b>.  Pick a unique branch for you if working from a current local repo.  </p><pre class="line-numbers language-javascript">git clone git@github.com:keystonejs/keystonejs-site.git  \ncd keystonejs-site \ngit checkout -b spa  </pre><p>Create a new folder for our client files.  We will serve this as a static just like public.  </p><pre class="command-line"><code class="language-javascript">mkdir client </code></pre><p>Install and save our new dependencies.  </p><pre class="command-line"><code class="language-javascript">npm i --save systemjs babel typescript keystone react react-router  </code></pre></div></div><div class="jl-guide-section"><div class="container"> 				<div class="jl-guide__header"><h2 class="jl-guide__title"><div class="jl-guide__title-label"> <div class="jl-guide__title-count"><span class="jl-guide__title-count">2</span></div>Client Files<div class="jl-guide__title-info">create your new client app </div></div></h2></div><h3>Rework our jade files</h3><p>We still like using jade.  It is quick, good for large blocks of html, and having seperate files is easier for multiple parties to maintain.  </p><p>For our SPA we only need an index file.  We will create a new base file and remove the template include lines from each of the content files. The old base file can eventually be removed.  </p><p class="note">You do not have to remove all of the template includes from your content files.  Instead, rename each appropriate template file and replace it with a blank one.</p><div class="code-header"><h4> Create your SPA index file. </h4><p>Copy <code>content/common/templates/layout/base.jade</code> to <code>content/common/templates/layout/spa_base.jade</code> and add a named div.</p><p>Replace the old javascript with the system.js tag.  We will add our app later.  </p></div><pre class="language-javascript"><code class="language-markup">\n	// old code\n		.docs-body\n			block content\n		\n	// replace with\n		.docs-body\n			#keystonejs-spa\n		\n	/* javascript tag */\n	// old code\n		script(src="/js/lib/jquery/jquery-1.10.2.min.js")\n		script(src=\'/js/lib/bootstrap/collapse.js\')\n		//- script(src=\'/js/lib/bootstrap/dropdown.js\')\n		script(src=\'/js/lib/prism/prism.min.js\')\n		script(src=\'/js/anchor-links.js\')\n		script(src=\'/js/api-code.js\')\n	\n	// replace with\n		script(src="system.js")\n	\n</code>\n\n</pre><h3>Create a folder for your project</h3><p>Create your project wherever you want:</p><pre class="command-line">mkdir my-test-project</pre><p>Than make sure you\'re in your new project:</p><pre class="command-line">cd my-test-project</pre><h3>Run the generator</h3><pre class="command-line">yo keystone</pre><p>The generator will ask you a few questions about what features you\'d like to include, then configure and copy all the files you\'ll need into your project.</p><p>It will also install dependencies from npm so you\'re ready to go.</p></div></div><div class="jl-guide-figure jl-guide-figure--commands hidden-xs"><div class="window safari"><img src="/images/getting-started/commands-safari.png" alt="Safari window" width="942" height="616"/></div><div class="window terminal"><div class="terminal-cursor"></div><img src="/images/getting-started/commands-terminal.png" alt="Terminal window" width="650" height="437"/></div><div class="figure-shadow"></div></div><div class="jl-guide-section"><div class="container-sm"><div class="jl-guide__header"><h2 class="jl-guide__title"><span class="jl-guide__title-count">3</span><div class="jl-guide__title-label">You\'re Done!</div></h2><p class="jl-guide__subtitle">So you just created your first KeystoneJS project, congrats!</p><p class="jl-guide__subtitle">Run it in your command line like this:</p><pre class="command-line">node keystone</pre><p class="jl-guide__subtitle">Then open <a href="http://localhost:3000" target="_blank">http://localhost:3000</a> to view it in your browser.</p><p class="jl-guide__subtitle">If you want to see what the generator actually did take a look at our getting started guide, it\'ll walk you through the manual setup process. This is particularly helpful if you\'re new to Node.js.</p><p class="jl-guide__subtitle"><a href="/docs/getting-started">View the getting started guide &rarr;</a></p></div></div></div><div class="jl-guide-figure jl-guide-figure--finished wow-much-find hidden-xs"><img src="/images/getting-started/commands-safari.png" alt="Safari window" width="1680" height="600" class="sr-only"/></div><div class="jl-guide-section"><div class="container-sm"><div class="jl-guide__header"><h2 class="jl-guide__title"><span class="jl-guide__title-count">?</span><div class="jl-guide__title-label">Problems</div></h2><p class="jl-guide__subtitle">Something went wrong? Hopefully these tips will help.</p><h3>ERR! Please try running this command again as root/Administrator.</h3><p>When running npm install -g generator-keystone, you may get an EACCES error asking you to run the command again as root/Administrator. This indicates that there is a permissions issue.</p><p>On your development system you can change directory ownership to the current $USER so you do not have to run sudo while installing untrusted code:</p><pre>sudo chown -R $USER /usr/local\n \n# Other directories may be required depending on your O/S\nsudo chown -R $USER /usr/lib/node_modules/</pre><p>For a production/shared environment you may wish to re-run the npm command with the sudo prefix:</p><pre>sudo npm install -g generator-keystone</pre><p>For more information, see the <a href=\'http://foohack.com/2010/08/intro-to-npm/#what_no_sudo\', target=\'_blank\'>"What, no sudo?"</a> of the Intro to npm by Isaac Schulueter.</p><h3>What do you mean it couldn\'t find my Database?</h3><p>By default, KeystoneJS will look for a MongoDB server running on localhost on the default port, and connect to it. If you\'re getting errors related to the MongoDB connection, make sure your MongoDB server is running.</p><p>If you haven\'t installed MongoDB yet, follow <a href="https://www.mongodb.org/downloads" target="_blank">the official instructions.</a></p><p>To connect to a server other than localhost, add a MONGO_URI setting to the .env file in your Keystone project directory:</p><pre>MONGO_URI=mongodb://your-server/database-name</pre><h3>Something else?</h3><p class="jl-guide__subtitle">If your issue still isn\'t resolved, reach out to us on the <a href="https://groups.google.com/d/forum/keystonejs" target="_blank">KeystoneJS Google Group</a>.</p></div></div></div></div></div></div>');
}.call(this,"docsnav"in f?f.docsnav:"undefined"!=typeof docsnav?docsnav:void 0,"docssection"in f?f.docssection:"undefined"!=typeof docssection?docssection:void 0),d.join("")},"en/pages/starting":function(a){var b=[];return b.push('<div class="page-header"><div class="container"><h1>Quick Start Guide </h1><p class="lead">The fastest way to create a Node.js website. For a deep dive, <a href="/docs/getting-started">check out the docs.</a></p></div></div><div class="gs-guide"><div class="gs-guide-section"><div class="container-sm"><div class="gs-guide__header"><h2 class="gs-guide__title"><span class="gs-guide__title-count">1</span><div class="gs-guide__title-label">Prerequisites</div></h2><div class="gs-guide__subtitle"><p>Before you begin, make sure you have <a href="http://nodejs.org/download" target="_blank">Node.js</a> 0.10+ installed and <a href="http://www.mongodb.org/downloads" target="_blank">MongoDB</a> v2.4+ installed and running.</p><p>You\'ll need a reasonable working knowledge of Javascript to use KeystoneJS, as well as familiarity with basics such as database concepts, and using node / npm etc.</p></div></div></div></div><div class="gs-guide-figure gs-guide-figure--prerequisites hidden-xs"><div class="column nodejs"><a href="http://nodejs.org/download/" target="_blank"><div class="logo"><img src="/images/getting-started/nodejs-logo.png" alt="Node.js logo" width="245" height="66"/></div><span class="prerequisite">Download and install the Node.js binaries for your platform from the Node.js download page.</span></a></div><div class="column mongodb"><a href="http://docs.mongodb.org/manual/installation/" target="_blank"><div class="logo"><img src="/images/getting-started/mongodb-logo.png" alt="MongoDB logo" width="294" height="84"/></div><span class="prerequisite">See the MongoDB installation guide for how to install MongoDB on your operating system.</span></a></div></div><div class="gs-guide-section"><div class="container-sm"><div class="gs-guide__header"><h2 class="gs-guide__title"><span class="gs-guide__title-count">2</span><div class="gs-guide__title-label">Commands</div></h2></div><h3>Install the generator</h3><p>You\'ll be using the <a href=\'https://github.com/keystonejs/generator-keystone\', target=\'_blank\'>KeystoneJS generator</a> made with <a href=\'http://yeoman.io/\', target=\'_blank\'>Yeoman</a>. In your root directory run:</p><pre class="command-line">npm install -g generator-keystone</pre><h3>Create a folder for your project</h3><p>Create your project wherever you want:</p><pre class="command-line">mkdir my-test-project</pre><p>Than make sure you\'re in your new project:</p><pre class="command-line">cd my-test-project</pre><h3>Run the generator</h3><pre class="command-line">yo keystone</pre><p>The generator will ask you a few questions about what features you\'d like to include, then configure and copy all the files you\'ll need into your project.</p><p>It will also install dependencies from npm so you\'re ready to go.</p></div></div><div class="gs-guide-figure gs-guide-figure--commands hidden-xs"><div class="window safari"><img src="/images/getting-started/commands-safari.png" alt="Safari window" width="942" height="616"/></div><div class="window terminal"><div class="terminal-cursor"></div><img src="/images/getting-started/commands-terminal.png" alt="Terminal window" width="650" height="437"/></div><div class="figure-shadow"></div></div><div class="gs-guide-section"><div class="container-sm"><div class="gs-guide__header"><h2 class="gs-guide__title"><span class="gs-guide__title-count">3</span><div class="gs-guide__title-label">You\'re Done!</div></h2><p class="gs-guide__subtitle">So you just created your first KeystoneJS project, congrats!</p><p class="gs-guide__subtitle">Run it in your command line like this:</p><pre class="command-line">node keystone</pre><p class="gs-guide__subtitle">Then open <a href="http://localhost:3000" target="_blank">http://localhost:3000</a> to view it in your browser.</p><p class="gs-guide__subtitle">If you want to see what the generator actually did take a look at our getting started guide, it\'ll walk you through the manual setup process. This is particularly helpful if you\'re new to Node.js.</p><p class="gs-guide__subtitle"><a href="/docs/getting-started">View the getting started guide &rarr;</a></p></div></div></div><div class="gs-guide-figure gs-guide-figure--finished wow-much-find hidden-xs"><img src="/images/getting-started/commands-safari.png" alt="Safari window" width="1680" height="600" class="sr-only"/></div><div class="gs-guide-section"><div class="container-sm"><div class="gs-guide__header"><h2 class="gs-guide__title"><span class="gs-guide__title-count">?</span><div class="gs-guide__title-label">Problems</div></h2><p class="gs-guide__subtitle">Something went wrong? Hopefully these tips will help.</p><h3>ERR! Please try running this command again as root/Administrator.</h3><p>When running npm install -g generator-keystone, you may get an EACCES error asking you to run the command again as root/Administrator. This indicates that there is a permissions issue.</p><p>On your development system you can change directory ownership to the current $USER so you do not have to run sudo while installing untrusted code:</p><pre>sudo chown -R $USER /usr/local\n \n# Other directories may be required depending on your O/S\nsudo chown -R $USER /usr/lib/node_modules/</pre><p>For a production/shared environment you may wish to re-run the npm command with the sudo prefix:</p><pre>sudo npm install -g generator-keystone</pre><p>For more information, see the <a href=\'http://foohack.com/2010/08/intro-to-npm/#what_no_sudo\', target=\'_blank\'>"What, no sudo?"</a> of the Intro to npm by Isaac Schulueter.</p><h3>What do you mean it couldn\'t find my Database?</h3><p>By default, KeystoneJS will look for a MongoDB server running on localhost on the default port, and connect to it. If you\'re getting errors related to the MongoDB connection, make sure your MongoDB server is running.</p><p>If you haven\'t installed MongoDB yet, follow <a href="https://www.mongodb.org/downloads" target="_blank">the official instructions.</a></p><p>To connect to a server other than localhost, add a MONGO_URI setting to the .env file in your Keystone project directory:</p><pre>MONGO_URI=mongodb://your-server/database-name</pre><h3>Something else?</h3><p class="gs-guide__subtitle">If your issue still isn\'t resolved, reach out to us on the <a href="https://groups.google.com/d/forum/keystonejs" target="_blank">KeystoneJS Google Group</a>.</p></div></div></div></div>'),b.join("")},"en/templates/left-menu":function(a){var c,d=[],e={},f=a||{};return function(a,f){e.docsnav=c=function(e){this&&this.block,this&&this.attributes||{};d.push('<div class="visible-xs"><ul class="nav-toggle">'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}}}.call(this),d.push('</ul></div><nav class="docs-sidebar hidden-xs"><ul class="sidebar-nav"><li'+b.cls(["introduction"==e.value?"active":null],[!0])+'><a href="/docs" class="nav-heading">Welcome</a></li>'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}}}.call(this),d.push("</ul><hr/>"),"introduction"!=e.value&&(d.push('<ul class="sidebar-nav">'),function(){var b=a;if("number"==typeof b.length)for(var c=0,f=b.length;f>c;c++){var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}else{var f=0;for(var c in b){f++;var g=b[c];g.value==e.value&&"learn"==g.value&&d.push('<ul><li class="nav-label"><a href="/docs/learn">Learn</a></li><li><a href="/docs/learn/es6">ES6 Rewrite</a></li><li><a href="/docs/learn/code">Code Examples</a></li><li><a href="/docs/learn/resources">Resources</a></li><li class="nav-label"><a href="/docs/learn/code">Fetch Examples</a></li><li><a href="/fetch">noscript</a></li><li><a href="/body">body noscript</a></li><li><a href="/text">clean text</a></li><li><a href="/json/code">json code</a></li><li><a href="/markdown">markdown </a></li><li><a href="/fail">failure </a></li><li><a href="/lost-link">should 404  </a></li><li><a href="/quick-start" class="notspa">should reload</a></li><li><a href="https://github.com/snowkeeper/keystonejs-site/blob/qstart/content/en/pages/docs/getting-started.jade">should leave</a></li></ul>'),g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">Introduction</a></li><li><a href="#introduction-prerequisites">Prerequisites</a></li><li><a href="#introduction-productionvsdevelopment">Production vs Development</a></li><li class="nav-label"><a href="#gettingstarted">Getting Started</a></li><li><a href="#gettingstarted-usingyeoman">Using the Yeoman Generator</a></li><li><a href="#gettingstarted-startinganewproject">Starting a new project</a></li><li><a href="#gettingstarted-projectstructure">Project Structure</a></li><li class="nav-label"><a href="#models">Models</a></li><li><a href="#models-authentication">Authentication and Session Management</a></li><li class="nav-label"><a href="#routesviews">Routes &amp; Views</a></li><li><a href="#routesviews-settingup">Setting up your Routes and Middleware</a></li><li><a href="#routesviews-middleware">Common Route Middleware</a></li><li><a href="#routesviews-firstview">Your first View</a></li><li><a href="#routesviews-templates">Templates</a></li><li><a href="#routesviews-publicassets">Public Assets</a></li><li class="nav-label"><a href="#runningyourapp">Running your App</a></li><li><a href="#runningyourapp-writingupdates">Writing Updates</a></li><li><a href="#runningyourapp-startingkeystone">Starting Keystone</a></li><li><a href="#runningyourapp-nextstep">Next Steps</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone Options</a></li><li><a href="#options-concepts">Setting Options</a></li><li><a href="#options-project">Project Options</a></li><li><a href="#options-server">Web Server Options</a></li><li><a href="#options-ssl">SSL Options</a></li><li><a href="#options-unix-socket">Unix Socket Options</a></li><li><a href="#options-database">Database and User Auth Options</a></li><li><a href="#options-ui">Admin UI Options</a></li><li class="nav-label"><a href="#services">Services</a></li><li><a href="#services-google-analytics">Google Analytics</a></li><li><a href="#services-google-maps">Google Maps</a></li><li><a href="#services-amazons3">Amazon S3</a></li><li><a href="#services-azure">Windows Azure Storage</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">Application Updates</a></li><li class="nav-label"><a href="#headless">Disabling the Admin UI</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">Concepts</a></li><li class="nav-label"><a href="#lists">Lists</a></li><li><a href="#lists-usage">Usage</a></li><li><a href="#lists-example">Example</a></li><li><a href="#lists-options">List Options</a></li><li><a href="#lists-plugins">Schema Plugins</a></li><li><a href="#lists-querying">Querying Data</a></li><li><a href="#lists-paginate">Pagination Querying</a></li><li><a href="#lists-creating">Creating Items</a></li><li><a href="#lists-deleting">Deleting Items</a></li><li class="nav-label"><a href="#headings">Headings</a></li><li class="nav-label"><a href="#fields">Fields</a></li><li><a href="#fields-overview">Overview</a></li><li><a href="#fields-options">Field Options</a></li><li><a href="#fields-conditional">Field Conditionals</a></li><li><a href="#fields-watching">Field Watching</a></li><li><a href="#fields-underscoremethods">Underscore Methods</a></li><li class="nav-label"><a href="#relationships">Relationships</a></li><li><a href="#relationship-fields">Relationship Fields</a></li><li><a href="#relationship-definitions">Relationship Definitions</a></li><li><a href="#relationship-queries">Loading related items</a></li><li class="nav-label"><a href="#fieldtypes">Field Types</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-code">Code</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-numberarray">Numberarray</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-textarray">Textarray</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li></ul>')}}}.call(this),d.push("</ul>")),d.push("</nav>")},e.docsnav(f)}.call(this,"docsnav"in f?f.docsnav:"undefined"!=typeof docsnav?docsnav:void 0,"docssection"in f?f.docssection:"undefined"!=typeof docssection?docssection:void 0),d.join("")},"en/templates/mixins/docsapinav":function(a){var b=[];return b.join("")},"en/templates/mixins/docsnav":function(a){var b=[];return b.join("")},index:function(a){var c,d=[],e=a||{};return function(a,e){d.push("<!DOCTYPE html><html"+b.attr("lang",a,!0,!0)+'><head><script>var _sf_startpt=(new Date()).getTime()</script><meta charset="utf-8"><meta name="viewport" content="initial-scale=1.0,user-scalable=no,maximum-scale=1,width=device-width"><title>KeystoneJS'),e&&d.push(" &middot; "+b.escape(null==(c=e)?"":c)),d.push('</title><meta name="keywords" content="node.js,nodejs,cms,publishing,platform,web,development,framework,express,mongo,mongodb,bootstrap,react,jquery"><meta name="description" content="Get a head-start on the features you need. KeystoneJS is the easiest way to build dynamic websites, applications and APIs with Node.js and MongoDB."><meta property="og:locale" content="en-us"><meta property="og:title" content="KeystoneJS"><meta property="og:description" content="KeystoneJS is an open source Node.js CMS and web application platform built on Express and MongoDB."><meta property="og:url" content="https://keystonejs.com^current_url^"><meta property="og:site_name" content="KeystoneJS"><meta property="og:type" content="article"><link href="http://fonts.googleapis.com/css?family=Roboto:100,300,300italic,400,500,700" rel="stylesheet"><link href="/styles/site.min.css" rel="stylesheet"><link rel="shortcut icon" href="/favicon.ico" type="image/x-icon"></head><body><div id="keystonejs-spa"><div class="home-header back-key"><div class="container"><img src="/images/logo-inverted.svg" alt="KeystoneJS" width="80" height="81"><h2>The open source framework for developing database-driven websites, applications and APIs in Node.js. Built on Express and MongoDB.</h2><h1>preparing to get it on...</h1></div></div></div><script src="/systemjs/jspm_packages/system.js"></script><script src="/systemjs/config.js"></script><script src="/systemjs/client.js"></script></body></html>')}.call(this,"language"in e?e.language:"undefined"!=typeof language?language:void 0,"title"in e?e.title:"undefined"!=typeof title?title:void 0),d.join("")},"zh/pages/404":function(a){var b=[];return b.push('<div class="page-header page-header"><div class="container"><h1>404</h1><p class="lead">Oh snap! That page doesn\'t exist</p></div></div><div class="container"><div class="row"><div class="col-sm-3"><div class="docs-sidebar-info"><p>You\'re on this page because the page you requested has been moved or deleted.</p><p>Check out the links on the right to find your way.</p></div></div><div class="col-sm-9"><div class="docs-content"><div class="row"><div class="col-sm-6"><h3>On this site</h3><ul class="list-unstyled lead"><li><a href="/zh/getting-started" title="KeystoneJS Getting Started">Getting Started</a></li><li><a href="/zh/docs/configuration" title="KeystoneJS Configuration">KeystoneJS Configuration</a></li><li><a href="/zh/docs/database" title="KeystoneJS Database">Database Setup</a></li><li><a href="/zh/examples" title="KeystoneJS Application">Examples Applications</a></li></ul></div><div class="col-sm-6"><h3>Other resources</h3><ul class="list-unstyled lead"><li><a href="https://github.com/keystonejs/keystone" target="_blank" title="Github Project">Github Project</a></li><li><a href="http://demo.keystonejs.com" target="_blank" title="Demo Website">Demo Website</a></li><li><a href="https://groups.google.com/forum/#!forum/keystonejs" target="_blank" title="Demo Website">Google Group</a></li></ul></div></div></div></div></div></div>'),b.join("")},"zh/pages/docs/configuration":function(a){var c,d=[],e={},f=a||{};return function(a,f){e.docsnav=c=function(e){this&&this.block,this&&this.attributes||{};d.push('<div class="visible-xs"><ul class="nav-toggle">'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}}}.call(this),d.push('</ul></div><nav class="docs-sidebar hidden-xs"><ul class="sidebar-nav"><li'+b.cls(["introduction"==e.value?"active":null],[!0])+'><a href="/zh/docs" class="nav-heading">\u6b22\u8fce</a></li>'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}}}.call(this),d.push("</ul>"),"introduction"!=e.value&&(d.push('<hr/><ul class="sidebar-nav">'),function(){var b=a;if("number"==typeof b.length)for(var c=0,f=b.length;f>c;c++){var g=b[c];g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">\u4ecb\u7ecd</a></li><li><a href="#introduction-prerequisites">\u524d\u63d0\u6761\u4ef6</a></li><li><a href="#introduction-productionvsdevelopment">\u751f\u4ea7 vs \u5f00\u53d1</a></li><li class="nav-label"><a href="#gettingstarted">\u5165\u95e8</a></li><li><a href="#gettingstarted-usingyeoman">\u4f7f\u7528Yeoman\u751f\u6210\u5668</a></li><li><a href="#gettingstarted-startinganewproject">\u5f00\u59cb\u4e00\u4e2a\u65b0\u9879\u76ee</a></li><li><a href="#gettingstarted-projectstructure">\u9879\u76ee\u7ed3\u6784</a></li><li class="nav-label"><a href="#models">\u6a21\u578b</a></li><li><a href="#models-authentication">\u8ba4\u8bc1\u4e0e\u4f1a\u8bdd\u7ba1\u7406</a></li><li class="nav-label"><a href="#routesviews">\u8def\u7531 &amp; \u89c6\u56fe</a></li><li><a href="#routesviews-settingup">\u8bbe\u7f6e\u8def\u7531\u548c\u4e2d\u95f4\u4ef6</a></li><li><a href="#routesviews-middleware">\u5e38\u7528\u8def\u7531\u4e2d\u95f4\u4ef6</a></li><li><a href="#routesviews-firstview">\u4f60\u7684\u7b2c\u4e00\u4e2a\u89c6\u56fe</a></li><li><a href="#routesviews-templates">\u6a21\u677f</a></li><li><a href="#routesviews-publicassets">\u516c\u5171\u8d44\u4ea7</a></li><li class="nav-label"><a href="#runningyourapp">\u8fd0\u884cApp</a></li><li><a href="#runningyourapp-writingupdates">\u7f16\u5199\u66f4\u65b0</a></li><li><a href="#runningyourapp-startingkeystone">\u542f\u52a8Keystone</a></li><li><a href="#runningyourapp-nextstep">\u4e0b\u4e00\u6b65</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone \u53c2\u6570</a></li><li><a href="#options-concepts">\u8bbe\u7f6e\u53c2\u6570</a></li><li><a href="#options-project">\u9879\u76ee\u53c2\u6570</a></li><li><a href="#options-server">Web\u670d\u52a1\u5668\u53c2\u6570</a></li><li><a href="#options-ssl">SSL\u53c2\u6570</a></li><li><a href="#options-database">\u6570\u636e\u5e93\u4e0e\u7528\u6237\u8ba4\u8bc1\u53c2\u6570</a></li><li><a href="#options-unix-socket">Unix Socket\u53c2\u6570</a></li><li><a href="#options-ui">\u7ba1\u7406\u5458\u754c\u9762\u53c2\u6570</a></li><li class="nav-label"><a href="#services">\u670d\u52a1</a></li><li><a href="#services-google-analytics">\u8c37\u6b4c\u5206\u6790</a></li><li><a href="#services-google-maps">\u8c37\u6b4c\u5730\u56fe</a></li><li><a href="#services-amazons3">\u4e9a\u9a6c\u900a S3</a></li><li><a href="#services-azure">\u5fae\u8f6fAzure\u5b58\u50a8</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">\u5e94\u7528\u7a0b\u5e8f\u66f4\u65b0</a></li><li class="nav-label"><a href="#headless">\u7981\u7528\u7ba1\u7406\u5458\u754c\u9762</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">\u6982\u5ff5</a></li><li class="nav-label"><a href="#lists">\u5217\u8868</a></li><li><a href="#lists-usage">\u7528\u6cd5</a></li><li><a href="#lists-example">\u793a\u4f8b</a></li><li><a href="#lists-options">List\u53c2\u6570</a></li><li><a href="#lists-plugins">Schema\u63d2\u4ef6</a></li><li><a href="#lists-querying">\u67e5\u8be2\u6570\u636e</a></li><li><a href="#lists-paginate">\u5206\u9875\u67e5\u8be2</a></li><li><a href="#lists-creating">\u521b\u5efa\u6761\u76ee</a></li><li><a href="#lists-deleting">\u5220\u9664\u6761\u76ee</a></li><li class="nav-label"><a href="#headings">\u6807\u9898</a></li><li class="nav-label"><a href="#fields">\u57df</a></li><li><a href="#fields-overview">\u6982\u89c8</a></li><li><a href="#fields-options">\u57df\u53c2\u6570</a></li><li><a href="#fields-conditional">\u57df\u6761\u4ef6</a></li><li><a href="#fields-watching">\u57df\u76d1\u542c</a></li><li><a href="#fields-underscoremethods">Underscore\u65b9\u6cd5</a></li><li class="nav-label"><a href="#relationships">\u5173\u7cfb</a></li><li><a href="#relationship-fields">\u5173\u7cfb\u57df</a></li><li><a href="#relationship-definitions">\u5173\u7cfb\u5b9a\u4e49</a></li><li><a href="#relationship-queries">\u52a0\u8f7d\u76f8\u5173\u6761\u76ee</a></li><li class="nav-label"><a href="#fieldtypes">\u57df\u7c7b\u578b</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li></ul>')}else{var f=0;for(var c in b){f++;var g=b[c];g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">\u4ecb\u7ecd</a></li><li><a href="#introduction-prerequisites">\u524d\u63d0\u6761\u4ef6</a></li><li><a href="#introduction-productionvsdevelopment">\u751f\u4ea7 vs \u5f00\u53d1</a></li><li class="nav-label"><a href="#gettingstarted">\u5165\u95e8</a></li><li><a href="#gettingstarted-usingyeoman">\u4f7f\u7528Yeoman\u751f\u6210\u5668</a></li><li><a href="#gettingstarted-startinganewproject">\u5f00\u59cb\u4e00\u4e2a\u65b0\u9879\u76ee</a></li><li><a href="#gettingstarted-projectstructure">\u9879\u76ee\u7ed3\u6784</a></li><li class="nav-label"><a href="#models">\u6a21\u578b</a></li><li><a href="#models-authentication">\u8ba4\u8bc1\u4e0e\u4f1a\u8bdd\u7ba1\u7406</a></li><li class="nav-label"><a href="#routesviews">\u8def\u7531 &amp; \u89c6\u56fe</a></li><li><a href="#routesviews-settingup">\u8bbe\u7f6e\u8def\u7531\u548c\u4e2d\u95f4\u4ef6</a></li><li><a href="#routesviews-middleware">\u5e38\u7528\u8def\u7531\u4e2d\u95f4\u4ef6</a></li><li><a href="#routesviews-firstview">\u4f60\u7684\u7b2c\u4e00\u4e2a\u89c6\u56fe</a></li><li><a href="#routesviews-templates">\u6a21\u677f</a></li><li><a href="#routesviews-publicassets">\u516c\u5171\u8d44\u4ea7</a></li><li class="nav-label"><a href="#runningyourapp">\u8fd0\u884cApp</a></li><li><a href="#runningyourapp-writingupdates">\u7f16\u5199\u66f4\u65b0</a></li><li><a href="#runningyourapp-startingkeystone">\u542f\u52a8Keystone</a></li><li><a href="#runningyourapp-nextstep">\u4e0b\u4e00\u6b65</a></li></ul>'),
g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone \u53c2\u6570</a></li><li><a href="#options-concepts">\u8bbe\u7f6e\u53c2\u6570</a></li><li><a href="#options-project">\u9879\u76ee\u53c2\u6570</a></li><li><a href="#options-server">Web\u670d\u52a1\u5668\u53c2\u6570</a></li><li><a href="#options-ssl">SSL\u53c2\u6570</a></li><li><a href="#options-database">\u6570\u636e\u5e93\u4e0e\u7528\u6237\u8ba4\u8bc1\u53c2\u6570</a></li><li><a href="#options-unix-socket">Unix Socket\u53c2\u6570</a></li><li><a href="#options-ui">\u7ba1\u7406\u5458\u754c\u9762\u53c2\u6570</a></li><li class="nav-label"><a href="#services">\u670d\u52a1</a></li><li><a href="#services-google-analytics">\u8c37\u6b4c\u5206\u6790</a></li><li><a href="#services-google-maps">\u8c37\u6b4c\u5730\u56fe</a></li><li><a href="#services-amazons3">\u4e9a\u9a6c\u900a S3</a></li><li><a href="#services-azure">\u5fae\u8f6fAzure\u5b58\u50a8</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">\u5e94\u7528\u7a0b\u5e8f\u66f4\u65b0</a></li><li class="nav-label"><a href="#headless">\u7981\u7528\u7ba1\u7406\u5458\u754c\u9762</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">\u6982\u5ff5</a></li><li class="nav-label"><a href="#lists">\u5217\u8868</a></li><li><a href="#lists-usage">\u7528\u6cd5</a></li><li><a href="#lists-example">\u793a\u4f8b</a></li><li><a href="#lists-options">List\u53c2\u6570</a></li><li><a href="#lists-plugins">Schema\u63d2\u4ef6</a></li><li><a href="#lists-querying">\u67e5\u8be2\u6570\u636e</a></li><li><a href="#lists-paginate">\u5206\u9875\u67e5\u8be2</a></li><li><a href="#lists-creating">\u521b\u5efa\u6761\u76ee</a></li><li><a href="#lists-deleting">\u5220\u9664\u6761\u76ee</a></li><li class="nav-label"><a href="#headings">\u6807\u9898</a></li><li class="nav-label"><a href="#fields">\u57df</a></li><li><a href="#fields-overview">\u6982\u89c8</a></li><li><a href="#fields-options">\u57df\u53c2\u6570</a></li><li><a href="#fields-conditional">\u57df\u6761\u4ef6</a></li><li><a href="#fields-watching">\u57df\u76d1\u542c</a></li><li><a href="#fields-underscoremethods">Underscore\u65b9\u6cd5</a></li><li class="nav-label"><a href="#relationships">\u5173\u7cfb</a></li><li><a href="#relationship-fields">\u5173\u7cfb\u57df</a></li><li><a href="#relationship-definitions">\u5173\u7cfb\u5b9a\u4e49</a></li><li><a href="#relationship-queries">\u52a0\u8f7d\u76f8\u5173\u6761\u76ee</a></li><li class="nav-label"><a href="#fieldtypes">\u57df\u7c7b\u578b</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li></ul>')}}}.call(this),d.push("</ul>")),d.push("</nav>")},d.push('<div class="page-header"><div class="container"><h1>\u914d\u7f6e</h1><p class="lead">\u5982\u4f55\u8ba9KeystoneJS\u6309\u4f60\u60f3\u8981\u7684\u65b9\u5f0f\u5de5\u4f5c</p></div></div><div class="container"><div class="row"><div class="col-sm-3">'),e.docsnav(f),d.push('</div><div class="col-sm-9"><div class="docs-content"><h2>Keystone\u53c2\u6570</h2><a name="options-concepts"></a><h3>\u8bbe\u5b9a\u53c2\u6570</h3><p>KeystoneJS\u7684\u53c2\u6570\u53ef\u4ee5\u8bbe\u5b9a\u5b83\u7684\u5f88\u591a\u884c\u4e3a\uff0c\u4ece\u5982\u4f55\u914d\u7f6eexpress\u7a0b\u5e8f\u5230\u542f\u7528\u67d0\u4e9b\u529f\u80fd\u548c\u96c6\u6210\u670d\u52a1\u7684\u8ba4\u8bc1\u53c2\u6570\u3002</p><p>\u53c2\u6570\u67093\u79cd\u8bbe\u5b9a\u529e\u6cd5\uff1a</p><ul class="options"><li>\u7ed9<code>keystone.init(options)</code>\u65b9\u6cd5\u4f20\u4e00\u4e2a<code>{ key: \'value\' }</code> \u914d\u7f6e <code class="data-type">Object</code></li><li>\u8c03\u7528<code>keystone.set(\'key\', \'value\')</code></li><li>\u5728<code>process.env</code>\u4e2d\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u3002\u4ec5\u6709\u90e8\u5206\u53c2\u6570\u652f\u6301\u8fd9\u79cd\u65b9\u5f0f\uff08\u6ce8\u610f\u4e0b\u6587\u7684\u63d0\u793a\uff09\u3002</li></ul><p>\u5982\u679c\u4f60\u4e0d\u60f3\u628a\u79d8\u94a5\u548c\u914d\u7f6e\u653e\u5728\u4ee3\u7801\u5e93\u4e2d(\u8fd9\u5bf9\u4e8e\u5f00\u6e90\u9879\u76ee\uff0c\u6216\u8005\u4e0d\u662f\u6240\u6709\u5f00\u53d1\u4eba\u5458\u90fd\u53ef\u4ee5\u8bbf\u95ee\u751f\u4ea7\u914d\u7f6e\u8bbe\u5b9a\u7684\u9879\u76ee\u6765\u8bf4\u975e\u5e38\u91cd\u8981) \uff0c\u7528<a href="https://npmjs.org/package/dotenv" target="_blank">dotenv</a>\u6a21\u5757\u5f88\u5bb9\u6613\u5b9e\u73b0\u3002</p><a name="options-project"></a><h3>\u9879\u76ee\u53c2\u6570</h3><p>\u4e0b\u9762\u8fd9\u4e9b\u53c2\u6570\u63a7\u5236\u7740\u54c1\u724c\u5851\u9020\u3001\u5bfc\u822a\u548cKeystoneJS\u7a0b\u5e8f\u5728\u7ba1\u7406\u754c\u9762\u4e2d\u7684\u9ed8\u8ba4\u8f93\u51fa\u8bbe\u5b9a\uff1a</p><table class="table"><col width="210"/><col/><tr><td><code>name</code> <code class="data-type">String</code></td><td>KeystoneJS\u7a0b\u5e8f\u7684\u540d\u79f0</td></tr><tr><td><code>brand</code> <code class="data-type">String</code></td><td>\u5728\u7ba1\u7406\u754c\u9762\u7684\u5de6\u4e0a\u89d2\u663e\u793a</td></tr><tr><td><code>module root</code> <code class="data-type">String</code></td><td><p>\u8bbe\u7f6e Keystone \u5e94\u7528\u6240\u5728\u6839\u8def\u5f84\u3002<code>module root</code> \u9ed8\u8ba4\u6307\u5411\u5e94\u7528\u5185\u7b2c\u4e00\u6b21\u5f15\u7528 Keystone script \u6240\u5728\u76ee\u5f55\u3002\u9ed8\u8ba4\u8bbe\u7f6e\u6709\u65f6\u5019\u4e0d\u6ee1\u8db3\u9700\u6c42\u3002</p><p><code>module root</code> \u5141\u8bb8\u81ea\u5b9a\u4e49\u6307\u5b9a\u5e94\u7528\u5185\u6839\u8def\u5f84\u3002\u91cd\u5199\u9ed8\u8ba4 <code>module root</code> \u6709\u65f6\u5f88\u6709\u7528\uff0c\u4f8b\u5982\uff0c\u5bf9\u4f60\u7684\u5e94\u7528\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u3002</p><p><code>module root</code> \u901a\u8fc7 Keystone \u7684 <code>.getPath()</code> \u65b9\u6cd5\u6765\u89e3\u6790\u548c\u6269\u5c55 <code>views</code>\uff0c <code>favicon</code>\uff0c <code>extensions</code>\uff0c <code>ssl cert</code>\uff0c <code>ssl key</code>\uff0c <code>ssl ca</code>\uff0c <code>emails</code> \u548c <code>updates</code> \u7684\u8def\u5f84\u8bbe\u7f6e\u3002</p><p><code>module root</code> \u53ef\u4ee5\u88ab\u8bbe\u7f6e\u4e3a\u76f8\u5bf9\u8def\u5f84\u6216\u8005\u7edd\u5bf9\u8def\u5f84\u3002</p><p class="note">\u5982\u679c\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\uff0c\u76f8\u5bf9\u8def\u5f84\u4f1a\u6839\u636e\u8bbe\u7f6e script \u6240\u5728\u8def\u5f84\u51b3\u5b9a\u3002</p></td></tr><tr><td><code>frame guard</code> <code class="data-type">String/Boolean</code></td><td><p>\u8fd9\u4e2a\u8bbe\u7f6e\u544a\u8bc9 Keystone \u5982\u4f55\u5904\u7406 <code>iframe</code> \u6807\u7b7e\u3002 \u5b83\u901a\u8fc7\u8bbe\u7f6e\u54cd\u5e94\u62a5\u5934 <code>X-Frame-Options</code> \u5b8c\u6210\u3002 \u8fd9\u4e2a\u8bf7\u6c42\u62a5\u5934\u7528\u6765\u9632\u6b62 "ClickJacking" \u653b\u51fb\u3002</p><p>\u9ed8\u8ba4\u8bbe\u7f6e\u662f <code>sameorigin</code>\u3002</p><p>\u4ee5\u4e0b\u662f\u6709\u6548\u53c2\u6570\u3002</p><ul><li><code class="default-value">"sameorigin"</code> \u5141\u8bb8\u6765\u81ea\u540c\u4e00\u670d\u52a1\u5668\u7684 <code>iframe</code> \u6807\u7b7e\u8bf7\u6c42</li><li><code class="default-value">"deny"</code> \u62d2\u7edd\u6240\u6709\u6765\u81ea <code>iframe</code> \u6807\u7b7e\u7684\u8bf7\u6c42</li><li><code class="default-value">true</code> (\u4e0e <code class="default-value">"deny"</code> \u76f8\u540c)</li><li><code class="default-value">false</code> \u7981\u7528 <code>frame guard</code></li></ul></td></tr><tr><td><code>nav</code> <code class="data-type">Object</code></td><td><p>\u6307\u5b9a\u7ba1\u7406\u754c\u9762\u5bfc\u822a\u7ed3\u6784\u7684\u5bf9\u8c61\u3002\u7ed9\u6bcf\u4e2a\u5e94\u8be5\u5728\u4e3b\u5bfc\u822a\u4e2d\u53ef\u89c1\u7684\u90e8\u5206\u521b\u5efa\u4e00\u4e2a\u952e\u3002\u6bcf\u4e2a\u952e\u7684\u503c\u90fd\u53ef\u4ee5\u662f\u5355\u4e2a\u5217\u8868\u8def\u5f84\uff08\u67e5\u770b\u5217\u8868\u65f6\u5728URL\u4e2d\u89c1\u5230\u7684\u90e8\u5206\uff09\u6216\u4e00\u4e2a\u5217\u8868\u8def\u5f84\u6570\u7ec4\u3002\u4f7f\u7528\u6570\u7ec4\u65f6\uff0c\u4f1a\u5728\u7ba1\u7406\u754c\u9762\u4e2d\u6e32\u67d3\u4e8c\u7ea7\u5bfc\u822a\u3002</p><p>nav\u8fd8\u7528\u6765\u751f\u6210\u7ba1\u7406\u754c\u9762\u9996\u9875\u4e0a\u7684\u94fe\u63a5\uff1b\u6240\u6709\u5df2\u6ce8\u518c\u4f46\u4e0d\u5305\u542b\u5728<code>nav</code>\u4e2d\u7684\u5217\u8868\u90fd\u4f1a\u51fa\u73b0\u5728\u5c4f\u5e55\u5e95\u90e8\u7684\'Other\'\u5206\u7ec4\u4e0b\u3002</p></td></tr><tr><td><code>csv field delimiter</code> <code class="data-type">String</code></td><td>\u5141\u8bb8\u4f60\u9009\u4e00\u4e2a\u5b9a\u5236\u7684\u57df\u5206\u9694\u7b26\u7528\u5728\u5bfc\u51fa\u7684CSV\u4e2d\uff0c\u4ee3\u66ff\u9ed8\u8ba4\u7684\u9017\u53f7\u3002</td></tr><tr><td><code>app</code> <code class="data-type">Object</code></td><td>\u7528\u6765\u4ee3\u66ff\u9ed8\u8ba4\u7684Express\u5b9e\u4f8b\u3002</td></tr><tr><td><code>mongoose</code> <code class="data-type">Object</code></td><td>\u7528\u6765\u4ee3\u66ff\u9ed8\u8ba4\u7684mongoose\u5b9e\u4f8b\u3002</td></tr></table><p class="note"><code>app</code> \u548c <code>mongoose</code> \u53c2\u6570\u7528\u6765\u66ff\u6362\u5df2\u8fc7\u671f\u7684 <code>keystone.connect()</code> \u65b9\u6cd5\u3002\u7531\u4e8e\u5347\u7ea7\u81f3Express 4, `keystone.connect()` \u4e0d\u518d\u6309\u9884\u671f\u90a3\u6837\u5de5\u4f5c\u3002</p><div class="code-header"><h4>\u5b9a\u5236\u5bfc\u822a\u7684\u4f8b\u5b50</h4><p>\u5982\u679c\u4f60\u6709<code>User</code>\u3001<code>Post</code>\u548c<code>PostCategory</code>\u4e09\u4e2a\u6a21\u578b\uff0c\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u6837\u5c06posts\u548cpost-categories\u5206\u7ec4\u5230<strong>Content</strong>\u5bfc\u822a\u6761\u76ee\u4e2d\uff1a</p></div><pre><code class="language-javascript">keystone.set(\'nav\', {\n    \'users\': \'users\',\n    \'content\': [\'posts\', \'post-categories\']\n});</code></pre><a name="options-server"></a><h3>Web\u670d\u52a1\u5668\u53c2\u6570</h3><p>\u4e0b\u9762\u8fd9\u4e9b\u53c2\u6570\u63a7\u5236\u7740web\u670d\u52a1\u5668\u548cexpress\u7a0b\u5e8f\u7684\u914d\u7f6e\uff1a</p><table class="table"><col width="210"/><col/><tr><td><code>env</code> <code class="data-type">String</code></td><td><p>\u8981\u7528\u7684\u73af\u5883\u8bbe\u5b9a\u3002\u652f\u6301<strong>development</strong>\u548c<strong>production</strong>\uff0c\u8fd9\u4e2a\u53c2\u6570\u4f1a\u5f71\u54cd\u7f13\u5b58\u5df2\u7f16\u8bd1\u6a21\u677f\u4e4b\u7c7b\u7684\u4e8b\u60c5\u3002\u9ed8\u8ba4\u4e3a<code class="default-value">process.env.NODE_ENV || "development"</code>\u3002</p><p>\u4f60\u771f\u7684\u5e94\u8be5\u7528\u73af\u5883\u53d8\u91cf<code>NODE_ENV</code><strong>\u5728\u751f\u4ea7\u670d\u52a1\u5668\u4e0a\u5c06\u8fd9\u4e2a\u8bbe\u4e3a<code class="default-value">production</code></strong>\u3002\u8fd8\u6709\u51e0\u4e2a\u6a21\u5757\u4e5f\u9075\u5faa\u8fd9\u4e2a\u7ea6\u5b9a\u3002</p></td></tr><tr><td><code>port</code> <code class="data-type">Number</code></td><td><p>\u76d1\u542c\u8bf7\u6c42\u7684\u7aef\u53e3\u3002\u9ed8\u8ba4\u4e3a<code class="default-value">process.env.PORT || 3000</code></p></td></tr><tr><td><code>host</code> <code class="data-type">String</code></td><td><p>\u76d1\u542c\u8bf7\u6c42\u7684ip\u5730\u5740\u3002\u9ed8\u8ba4\u4e3a<code class="default-value">process.env.IP || \'127.0.0.1\'</code></p><p>\u5fc5\u987b\u8bbe\u5b9a\u4e86<code>port</code>(\u901a\u8fc7\u53c2\u6570\u6216\u73af\u5883\u53d8\u91cf) <code>host</code>\u53c2\u6570\u624d\u80fd\u751f\u6548\u3002</p></td></tr><tr><td><code>views</code> <code class="data-type">String</code></td><td><p>\u653e\u7a0b\u5e8f<strong>\u89c6\u56fe\u6a21\u677f</strong>\u7684\u8def\u5f84\u3002\u4f7f\u7528<code>keystone.View</code>\u7c7b\u9700\u8981\u8fd9\u4e2a\uff0c\u5e76\u4e14\u4e5f\u4f1a\u5728express app\u4e0a\u8bbe\u5b9a\u3002</p><p>\u5982\u679c\u4f60\u9075\u5faa<a href="/zh/guide#start_structure">\u63a8\u8350\u7684\u9879\u76ee\u7ed3\u6784</a>\uff0c\u8fd9\u4e2a\u5e94\u8be5\u8bbe\u4e3a<code class="default-value">"/templates/views"</code>\u3002</p></td></tr><tr><td><code>view engine</code> <code class="data-type">String</code></td><td><p>\u9ed8\u8ba4\u4f7f\u7528\u7684\u6a21\u677f\u5f15\u64ce\u3002express\u652f\u6301\u7684\u4efb\u4f55\u5f15\u64ce\u5e94\u8be5\u90fd\u53ef\u4ee5\u3002Keystone\u4e2d\u5305\u542b<strong>Jade</strong>\uff0c\u4f46\u7528\u5176\u5b83\u5f15\u64ce\u90fd\u5fc5\u987b\u6dfb\u52a0\u5230<code>package.json</code>\u91cc\u7684\u9879\u76ee\u4f9d\u8d56\u9879\u90e8\u5206\u3002</p><p>\u8fd9\u4e2a\u53c2\u6570\u662f\u8bbe\u5b9a\u5728express app \u4e0a\u7684(<a href="http://expressjs.com/api.html#app.engine" target="_blank">\u53c2\u89c1\u76f8\u5173\u6587\u6863</a>)\u3002</p></td></tr><tr><td><code>custom engine</code> <code class="data-type">Function</code></td><td><p>\u5982\u679c\u4f60\u8981\u7528\u5b9a\u5236\u7684\u6a21\u677f\u5f15\u64ce\uff0c\u8981\u5c06\u8fd9\u4e2a\u53c2\u6570\u8bbe\u4e3a\u7528\u6765\u5904\u7406\u6a21\u677f\u7684\u51fd\u6570\u3002</p><p>\u53c2\u89c1\u4e0b\u9762\u7684\u4f8b\u5b50\uff0c\u4e86\u89e3\u5982\u4f55\u4f7f\u7528<a href="http://paularmstrong.github.io/swig/" target="_blank">Swig</a> \u6a21\u677f\u5f15\u64ce\u3002</p></td></tr><tr><td><code>view cache</code> <code class="data-type">Boolean</code></td><td><p>\u8fd9\u4e2a\u53c2\u6570\u662f\u4f20\u7ed9Express\u7684\uff0c\u7528\u6765\u63a7\u5236\u662f\u5426\u5728\u8bf7\u6c42\u95f4\u7f13\u5b58\u7f16\u8bd1\u7684\u89c6\u56fe\u6a21\u677f\u3002</p><p>\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u9ed8\u8ba4\u662f<code class="default-value">true</code>\uff0c\u5426\u5219\u662f<code class="default-value">false</code>\uff0c\u6240\u4ee5\u51e0\u4e4e\u4e0d\u7528\u7279\u610f\u8bbe\u5b9a\u5b83\u3002</p></td></tr><tr><td><code>locals</code> <code class="data-type">Object</code></td><td><p>\u4f20\u7ed9\u89c6\u56fe\u6a21\u677f\u7684\u9ed8\u8ba4local\u53d8\u91cf\u3002</p><p>\u8def\u7531\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539<code>res.locals</code>\u6269\u5c55\u6216\u4fee\u6539local\u53d8\u91cf\u3002</p></td></tr><tr><td><code>static</code> <code class="data-type">String</code> \u6216 <code class="data-type">Array</code></td><td><p>\u6307\u5411\u7a0b\u5e8f\u9759\u6001\u6587\u4ef6\u7684\u4e00\u6216\u591a\u4e2a\u8def\u5f84\u3002\u8bbe\u5b9a\u8fd9\u4e2a\u4f1a\u5f15\u5165<code>express.static</code> \u4e2d\u95f4\u4ef6\u3002</p><p>\u5982\u679c\u4f60\u9075\u5faa<a href="/zh/guide#start_structure">\u63a8\u8350\u7684\u9879\u76ee\u7ed3\u6784</a>\uff0c\u8fd9\u4e2a\u5e94\u8be5\u8bbe\u4e3a<code class="default-value">\'public\'</code>\u3002</p></td></tr><tr><td><code>static options</code> <code class="data-type">Object</code></td><td><p>\u53ef\u9009\u7684\u914d\u7f6e\u53c2\u6570\uff0c\u5c06\u4f1a\u4f20\u7ed9<code>express.static</code>\u4e2d\u95f4\u4ef6\u3002</p></td></tr><tr><td><code>less</code> <code class="data-type">String</code> \u6216 <code class="data-type">Array</code></td><td><p>\u5982\u679c\u4f60\u60f3\u8ba9Keystone\u5c06<strong>.less</strong>\u6587\u4ef6\u81ea\u52a8\u7f16\u8bd1\u6210<strong>.css</strong>\u6587\u4ef6\uff0c\u628a\u5b83\u7684\u503c\u4e5f\u8bbe\u6210<code>static</code>\u53c2\u6570\u6307\u5b9a\u7684\u8def\u5f84\u3002</p><p>\u8bbe\u4e86\u8fd9\u4e2a\u53c2\u6570\u4e4b\u540e\uff0c\u6240\u6709\u5bf9<strong>.css</strong>\u6216<strong>.min.css</strong>\u6587\u4ef6\u7684\u8bf7\u6c42\u5904\u7406\u90fd\u4f1a\u5148\u68c0\u67e5\u6709\u6ca1\u6709\u540c\u540d\u7684<strong>.less</strong>\u6587\u4ef6\uff0c\u5982\u679c\u6709\uff0c\u5219\u751f\u6210css\u6587\u4ef6\u3002</p></td></tr><tr><td><code>less options</code> <code class="data-type">Object</code></td><td><p>\u53ef\u9009\u7684\u914d\u7f6e\u53c2\u6570\uff0c\u4f1a\u4f20\u7ed9<code>less</code> \u4e2d\u95f4\u4ef6\uff1b\u53c2\u89c1<a href="https://github.com/emberfeather/less.js-middleware" target="_blank">github.com/emberfeather/less.js-middleware</a>\u4e86\u89e3\u8be6\u60c5\u3002</p></td></tr><tr><td><code>sass</code> <code class="data-type">String</code> \u6216 <code class="data-type">Array</code></td><td><p>\u5982\u679c\u4f60\u60f3\u8ba9Keystone\u5c06<strong>.sass</strong>\u6587\u4ef6\u81ea\u52a8\u7f16\u8bd1\u6210<strong>.css</strong>\u6587\u4ef6\uff0c\u628a\u5b83\u7684\u503c\u4e5f\u8bbe\u6210<code>static</code>\u53c2\u6570\u6307\u5b9a\u7684\u8def\u5f84\u3002</p><p>\u8bbe\u4e86\u8fd9\u4e2a\u53c2\u6570\u4e4b\u540e\uff0c\u6240\u6709\u5bf9<strong>.css</strong>\u6216<strong>.min.css</strong>\u6587\u4ef6\u7684\u8bf7\u6c42\u5904\u7406\u90fd\u4f1a\u5148\u68c0\u67e5\u6709\u6ca1\u6709\u540c\u540d\u7684<strong>.sass</strong>\u6587\u4ef6\uff0c\u5982\u679c\u6709\uff0c\u5219\u751f\u6210css\u6587\u4ef6\u3002</p><p class="note">\u6ce8\u610f\uff0c\u542f\u7528\u8fd9\u4e2a\u53c2\u6570\u9700\u8981\u5728<code>package.json</code>\u6587\u4ef6\u4e2d\u6dfb\u52a0<a href="https://github.com/sass/node-sass" target="_blank"><code>node-sass</code></a>\u5305\u4f5c\u4e3a\u4f9d\u8d56\u9879\uff1bKeystone\u4e0d\u4f1a\u81ea\u52a8\u5f15\u5165\u5b83\u3002</p></td></tr><tr><td><code>sass options</code> <code class="data-type">Object</code></td><td><p>\u53ef\u9009\u7684\u914d\u7f6e\u53c2\u6570\uff0c\u4f1a\u4f20\u7ed9<code>sass</code> \u4e2d\u95f4\u4ef6\uff1b\u53c2\u89c1<a href="https://github.com/sass/node-sass#options" target="_blank">github.com/sass/node-sass</a>\u4e86\u89e3\u8be6\u60c5\u3002</p></td></tr><tr><td><code>favicon</code> <code class="data-type">String</code></td><td><p>\u7a0b\u5e8f\u7684<strong>favicon</strong>\u7684\u8def\u5f84\u3002\u8bbe\u5b9a\u8fd9\u4e2a\u4f1a\u5f15\u5165<code>express.favicon</code>\u4e2d\u95f4\u4ef6\u3002\u5e94\u8be5\u662f\u76f8\u5bf9\u9879\u76ee\u6839\u8def\u5f84\u7684\u8def\u5f84\u3002</p><p>\u5982\u679c\u4f60\u9075\u5faa<a href="/zh/guide#start_structure">\u63a8\u8350\u7684\u9879\u76ee\u7ed3\u6784</a>\uff0c\u8fd9\u4e2a\u5e94\u8be5\u8bbe\u4e3a<code class="default-value">"/public/favicon.ico"</code>\u3002</p></td></tr><tr><td><code>compress</code> <code class="data-type">Boolean</code></td><td>\u5c06\u8fd9\u4e2a\u53c2\u6570\u8bbe\u4e3a<code class="default-value">true</code>\u4ee5\u542f\u7528HTTP\u538b\u7f29\u3002\u8fd9\u4f1a\u5f15\u5165<code>express.compress</code>\u4e2d\u95f4\u4ef6(<a href="http://expressjs.com/api.html#compress" target="_blank">\u76f8\u5173\u6587\u6863</a>).</td></tr><tr><td><code>logger</code> <code class="data-type">String</code></td><td>\u8bbe\u5b9a\u8fd9\u4e2a\u4f1a\u5f15\u5165<code>express.logger</code>\u4e2d\u95f4\u4ef6\u3002\u5b83\u7684\u503c\u4f1a\u4f20\u7ed9\u4e2d\u95f4\u4ef6\u53bb\u505a\u521d\u59cb\u5316(<a href="http://www.senchalabs.org/connect/logger.html" target="_blank">\u76f8\u5173\u6587\u6863</a>)\u3002 \u8bbe\u4e3a<code class="default-value">false</code>\u53ef\u4ee5\u4e00\u5e76\u7981\u7528\u65e5\u5fd7\u3002</td></tr><tr><td><code>trust proxy</code> <code class="data-type">Boolean</code></td><td>\u8bbe\u5b9a\u8fd9\u4e2a\u542f\u7528HTTP\u8bf7\u6c42\u5934<code>X-Forwarded-For</code>\u3002\u63d0\u53d6\u51fa\u6765\u7684IP\u5730\u5740\u4f1a\u653e\u5728\u6570\u7ec4<code>req.ips</code> (<a href="http://expressjs.com/api.html#req.ips">\u76f8\u5173\u6587\u6863</a>)\u3002</td></tr></table><div class="code-header"><h4>\u5907\u9009\u7684\u89c6\u56fe\u5f15\u64ce</h4><p>Keystone\u9ed8\u8ba4\u4f7f\u7528<strong>Jade</strong>\u6a21\u677f\u5f15\u64ce\u5904\u7406\u89c6\u56fe\u3002\u8fd9\u91cc\u6709\u4e2a\u8bbe\u7f6e\u5176\u5b83\u5f15\u64ce<strong>Swig</strong>\u7684\u4f8b\u5b50\u3002</p></div><pre><code class="language-javascript">var swig = require(\'swig\');\nkeystone.set(\'view engine\', \'swig\');\nkeystone.set(\'custom engine\', swig.renderFile);</code></pre><div class="code-header"><h4>\u8f93\u51fa <code >onHttpServerCreated</code> \u4e8b\u4ef6</h4></div><pre><code class="language-javascript">keystone.start({\n    onHttpServerCreated: function() {\n      var server = keystone.httpServer;\n    }\n});</code></pre><a name="options-ssl"></a><h3>HTTPS Web\u670d\u52a1\u5668\u53c2\u6570</h3><p>KeystoneJS\u7a0b\u5e8f\u5b9e\u73b0HTTPS\u4e3b\u8981\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\u6216\u8005\u4f7f\u7528\u4e00\u4e2aweb\u670d\u52a1\u5668 (\u6bd4\u5982 <a href="http://nginx.com" target="_blank">NGINX</a>)\u6216PAAS (e.g. <a href="https://www.heroku.com" target="_blank">Heroku</a>)\u5b9e\u73b0\uff0c\u6216\u8005\u7528<a href="http://nodejs.org/api/https.html" target="_blank">node.js\u63d0\u4f9b\u7684https\u670d\u52a1\u5668</a>\u8bbe\u5b9a\u4e0b\u9762\u7684\u53c2\u6570\u3002</p><table class="table"><col width="210"/><col/><tr><td><code>ssl</code> <code class="data-type">Boolean</code> \u6216 <code class="data-type">String</code></td><td><p>\u662f\u5426\u542f\u52a8SSL\u670d\u52a1\u5668\u3002\u9ed8\u8ba4\u4e3a<code class="default-value">false</code>\u3002</p><p>\u8bbe\u4e3a<code class="default-value">true</code>\u65f6\uff0c\u4f1a\u542f\u52a8http\u548chttps\u670d\u52a1\u5668\u3002\u5982\u679c<code>ssl key</code> \u6216<code>ssl cert</code>\u65e0\u6548\uff0c\u53ea\u542f\u52a8http\u670d\u52a1\u5668\u3002</p><p>\u8bbe\u4e3a<code class="default-value">"only"</code>\u65f6\uff0c\u53ea\u542f\u52a8https\u670d\u52a1\u5668\u3002\u5982\u679c<code>ssl key</code> \u6216 <code>ssl cert</code>\u65e0\u6548\uff0c\u5219KeystoneJS\u4e0d\u4f1a\u542f\u52a8\u3002</p></td></tr><tr><td><code>ssl key</code> <code class="data-type">Path</code></td><td><p>\u6307\u5411SSL\u79d8\u94a5\u7684\u8def\u5f84\u3002\u5e94\u8be5\u4e3a\u7edd\u5bf9\u6216\u76f8\u5bf9\u4e8e<code class="default-value">process.cwd()</code>\u7684\u8def\u5f84 (\u901a\u5e38\u662f\u9879\u76ee\u7684\u6839\u8def\u5f84)\u3002</p></td></tr><tr><td><code>ssl cert</code> <code class="data-type">Path</code></td><td><p>\u6307\u5411SSL\u8bc1\u4e66\u7684\u8def\u5f84\u3002\u5e94\u8be5\u4e3a\u7edd\u5bf9\u6216\u76f8\u5bf9\u4e8e<code class="default-value">process.cwd()</code>\u7684\u8def\u5f84 (\u901a\u5e38\u662f\u9879\u76ee\u7684\u6839\u8def\u5f84)\u3002</p></td></tr><tr><td><code>ssl ca</code> <code class="data-type">Path</code></td><td><p>\u5e94\u8be5\u4e3a\u7edd\u5bf9\u6216\u76f8\u5bf9\u4e8e<code class="default-value">process.cwd()</code>\u7684\u8def\u5f84 (\u901a\u5e38\u662f\u9879\u76ee\u7684\u6839\u8def\u5f84)\u3002</p></td></tr><tr><td><code>ssl port</code> <code class="data-type">Number</code></td><td><p>\u542f\u52a8SSL\u670d\u52a1\u5668\u7684\u7aef\u53e3\u3002\u9ed8\u8ba4\u4e3a<code class="default-value">3001</code>\u3002</p></td></tr><tr><td><code>ssl host</code> <code class="data-type">String</code></td><td><p>\u76d1\u542c\u8bf7\u6c42\u7684ip\u5730\u5740\u3002\u9ed8\u8ba4\u4e3a<code class="default-value">process.env.SSL_IP</code>\u6216<code>host</code> \u53c2\u6570\u7684\u503c\u3002</p></td></tr><tr><td colspan="2"><p>\u5728<code class="language-javascript">keystone.start()</code>\u671f\u95f4\u8f93\u51fa<code class="">onHttpsServerCreated</code>\u4e8b\u4ef6\u3002</p></td></tr></table><p class="note"><strong>\u8b66\u544a\uff1a</strong> \u5982\u679c\u4f60\u8ba1\u5212\u5728 KeystoneJS \u5e94\u7528\u4e2d\u542f\u7528 SSL\uff0c\u786e\u4fdd\u4f7f\u7528\u4e2d\u7684 Node.js \u7248\u672c\u4e3a <code class="default-value">0.10.33</code> \u6216\u8005\u66f4\u9ad8\u3002 \u4f4e\u4e8e<code class="default-value">0.10.33</code> \u7248\u672c\u7684 Node \u5bb9\u6613\u5f15\u53d1 POODLE (Padding Oracle On Downgraded Legacy Encryption) \u6f0f\u6d1e\uff0c\u4e00\u79cd\u201c\u4e2d\u95f4\u4eba\u201d\u653b\u51fb\u76ee\u6807 <code class="default-value">SSLv3</code> (see <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566">CVE-2014-3566</a>)\u3002<code class="default-value">0.10.33</code>\u7248\u672c\u7684 Node\uff0c<code class="default-value">SSLv2</code>\u548c <code class="default-value">SSLv3</code> \u534f\u8bae\u9ed8\u8ba4\u5173\u95ed\u3002\u66f4\u591a\u4fe1\u606f\u53c2\u89c1 <a href="http://blog.nodejs.org/2014/10/23/node-v0-10-33-stable/">Node v0.10.33 (Stable)</a> \u7684release notes\u3002</p><a name="options-unix-socket"></a><h3>Unix Socket Web \u670d\u52a1\u5668\u53c2\u6570</h3><p>Express\u4f1a\u76d1\u542c\u4e00\u4e2aunix socket\u7684\u8fde\u63a5\u3002   </p><table class="table"><col width="210"/><col/><tr><td><code>unix socket</code> <code class="data-type">String</code></td><td><p>\u6307\u5411\u53ef\u5199unix socket\u7684\u8def\u5f84\u3002\u5e94\u8be5\u662f\u7edd\u5bf9\u8def\u5f84\u6216\u76f8\u5bf9\u4e8e<code class="default-value">process.cwd()</code> \uff08\u4e00\u822c\u662f\u9879\u76ee\u7684\u6839\u8def\u5f84\uff09\u7684\u8def\u5f84. \u5982\u679c\u6587\u4ef6\u4e4b\u524d\u5df2\u7ecf\u5b58\u5728\u4e86\uff0c\u4f1a\u5148\u88ab\u79fb\u9664\u3002</p><p>\u5f53\u8bbe\u5b9a http \u548c https \u670d\u52a1\u5668\u65f6\u4f1a\u88ab\u5ffd\u7565\u3002</p></td></tr><tr><td colspan="2"><p>\u5728<code class="language-javascript">keystone.start()</code>\u671f\u95f4\u8f93\u51fa<code class="">onHttpsServerCreated</code>\u4e8b\u4ef6\u3002</p></td></tr></table><a name="options-database"></a><h3>\u6570\u636e\u5e93\u548c\u7528\u6237\u8ba4\u8bc1\u53c2\u6570</h3><p>\u4e0b\u9762\u8fd9\u4e9b\u53c2\u6570\u63a7\u5236\u7740\u6570\u636e\u5e93\u914d\u7f6e\u548c\u7528\u6237\u6a21\u578b / \u8ba4\u8bc1\uff1a</p><table class="table"><col width="210"/><col/><tr><td><code>mongo</code> <code class="data-type">String</code></td><td><p>MongoDB\u8fde\u63a5\u7684url\u3002</p><p>\u4e00\u822c\u5e94\u8be5\u8bbe\u4e3a<code class="default-value">process.env.MONGO_URI || "mongodb://localhost/your-db"</code></p></td></tr><tr><td><code>model prefix</code> <code class="data-type">String</code></td><td><p>\u5e94\u7528\u5230\u6a21\u578b\u6240\u7528\u7684\u6240\u6709mongodb\u96c6\u5408\u7684\u524d\u7f00\u3002</p></td></tr><tr><td><code>auth</code> <code class="data-type">Mixed</code></td><td><p>\u662f\u5426\u4e3aKeyston\u7684\u7ba1\u7406\u754c\u9762\u542f\u7528\u5185\u7f6e\u7684\u8ba4\u8bc1\uff0c\u6216\u8005\u7528\u5b9a\u5236\u7684\u51fd\u6570\u8ba4\u8bc1\u7528\u6237\u3002</p><p>\u5f53\u8fd9\u4e2a\u8bbe\u4e3a<code class="default-value">false</code> (\u6216\u672a\u5b9a\u4e49)\u65f6\uff0cKeystone\u7684\u7ba1\u7406\u754c\u9762\u4f1a\u5411\u516c\u4f17\u5f00\u653e(\u6240\u4ee5\u4e00\u5b9a\u8981\u8bbe\u5b9a\u5b83\uff01)</p><p>\u5982\u679c\u4f7f\u7528\u5b9a\u5236\u51fd\u6570\uff0c\u5e94\u8be5\u9075\u5faaexpress\u4e2d\u95f4\u4ef6<code>function(req, res, next)</code>\u7684\u6807\u51c6\u3002\u5982\u679c\u7528\u6237\u6ca1\u6709\u767b\u5f55\u6216\u4e0d\u5e94\u8be5\u8bbf\u95eeKeystone\u7684\u7ba1\u7406\u754c\u9762\uff0c\u4f7f\u7528<code>res.redirect()</code>\u8f6c\u53d1 - \u5426\u5219\u8c03\u7528 <code>next</code>\u56de\u8c03\u542f\u7528\u8bbf\u95ee\u3002</p></td></tr><tr><td><code>user model</code> <code class="data-type">String</code></td><td><p>\u7528\u6237\u7684Keystone\u5217\u8868\u7684\u952e\uff0c\u5982\u679c<code>auth</code>\u8bbe\u4e3a<code class="default-value">true</code>\uff0c\u5219\u662f<strong>\u5fc5\u9700\u7684</strong>\u3002</p><p>\u4e00\u822c\u8fd9\u4e2a\u4f1a\u8bbe\u4e3a<code class="default-value">User</code>\u3002</p></td></tr><tr><td><code>cookie secret</code> <code class="data-type">String</code></td><td><p>cookies\u7684\u52a0\u5bc6\u5bc6\u94a5\u3002\u4f20\u7ed9Express\u7684cookie\u89e3\u6790\u5668\u3002</p><p>\u6700\u597d\u5c06\u8fd9\u4e2a\u8bbe\u4e3a\u4e00\u4e2a\u957f\u957f\u7684\u968f\u673a\u5b57\u7b26\u4e32\u3002</p></td></tr><tr><td><code>session store</code> <code class="data-type">String</code></td><td><p>\u5c06\u8fd9\u4e2a\u8bbe\u4e3a<code class="default-value">mongo</code>\u7528MongoDB\u6570\u636e\u5e93\u5b58\u50a8\u4f1a\u8bdd\u6570\u636e\u3002</p><p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cKeystone\u4f1a\u7528Express\u63d0\u4f9b\u7684\u5185\u5b58\u4f1a\u8bdd\u5b58\u50a8\uff0c\u8fd9\u4e2a\u53ea\u5e94\u8be5\u5728\u5f00\u53d1\u65f6\u7528\uff0c\u56e0\u4e3a\u5b83\u4e0d\u80fd\u6269\u5c55\uff0c\u53ea\u80fd\u652f\u6301\u5355\u8fdb\u7a0b\uff0c\u65f6\u95f4\u957f\u4e86\u8fd8\u4f1a\u51fa\u73b0\u5185\u5b58\u6cc4\u9732\u3002</p><p>\u6709\u6548\u7684\u53c2\u6570\u662f\uff1a</p><ul><li><code class="default-value">mongo</code> (\u6216<code class="default-value">connect-mongo</code>)</li><li><code class="default-value">connect-mongostore</code> (\u652f\u6301\u590d\u5236\u96c6\uff0c\u4f46\u9700\u8981\u663e\u5f0f\u5730\u914d\u7f6e - \u89c1\u4e0b\u6587)</li><li><code class="default-value">connect-redis</code></li></ul><p class="note">Keystone\u6ca1\u6709\u6346\u7ed1\u4f1a\u8bdd\u5b58\u50a8\u5305\uff0c\u6240\u4ee5\u4e00\u5b9a\u8981\u5c06\u9009\u5b9a\u7684\u4f1a\u8bdd\u5b58\u50a8\u6dfb\u52a0\u5230\u9879\u76ee\u7684<code>package.json</code>\u4e2d\u3002</p><p class="note">\u53ef\u4ee5\u901a\u8fc7<code class="language-javascript">keystone.get(\'express session\')</code>\u83b7\u53d6\u4f20\u7ed9Express\u7684\u4f1a\u8bdd\u914d\u7f6e\u3002</p></td></tr><tr><td><code>session store options</code> <code class="data-type">Object</code></td><td><p>\u7528\u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u8986\u76d6\u9ed8\u8ba4\u7684\u4f1a\u8bdd\u5b58\u50a8\u914d\u7f6e\uff0c\u5e76\u4e14\u4f1a\u4f20\u7ed9\u4f1a\u8bdd\u5b58\u50a8\u5305\u3002</p><p>\u4f7f\u7528<code class="default-value">connect-mongostore</code>\u5b58\u50a8\u65f6\u9700\u8981\u8bbe\u5b9a\u8fd9\u4e2a\u3002</p><div class="code-header"><h4>connect-mongostore\u7684\u4f8b\u5b50</h4></div><pre><code class="language-javascript">"sessionStore": {\n  "db": {\n    "name": "myDb",\n    "servers": [\n      { "host": "192.168.1.100", "port": 28001 },\n      { "host": "192.168.1.100", "port": 28002 },\n      { "host": "192.168.1.101", "port": 27017 }\n    ]\n  }\n}</code></pre><div class="code-header"><h4>connect-redis\u7684\u4f8b\u5b50</h4></div><pre><code class="language-javascript">"sessionStore": {\n  "host": "", // Redis\u670d\u52a1\u5668\u4e3b\u673a\u540d\n  "port": "", // Redis\u670d\u52a1\u5668\u7aef\u53e3\n  "ttl": "", // \u4ee5\u79d2\u4e3a\u5355\u4f4d\u7684Redis\u4f1a\u8bddTTL\n  "db": "", // \u6240\u7528\u7684\u6570\u636e\u5e93\u7d22\u5f15\n  "pass": "", // \u7528\u4e8eRedis\u8ba4\u8bc1\u7684\u5bc6\u7801\n  "prefix": "", // Key\u524d\u7f00\u9ed8\u8ba4\u4e3a"sess:"\n  "url": "", // \u6bd4\u5982 redis://user:pass@host:port/db\n}</code></pre><p class="note">\u53ef\u4ee5\u901a\u8fc7<code class="language-javascript">keystone.get(\'session options\')</code>\u83b7\u53d6\u5230\u4f1a\u8bdd\u53c2\u6570\u3002</p></td></tr><tr><td><code>back url</code> <code class="data-type">String</code></td><td><p>\u7ba1\u7406\u754c\u9762\u4e2d\u7528\u5728\'\u56de\u5230(\u7f51\u7ad9\u540d)\'\u94fe\u63a5\u4e2d\u7684<code>href</code></p><p>\u9ed8\u8ba4\u4e3a<code class="default-value">/</code></p></td></tr><tr><td><code>signin url</code> <code class="data-type">String</code></td><td><p>\u5f53\u8bbf\u95ee\u8005\u6ca1\u80fd\u901a\u8fc7\u9ed8\u8ba4\u7684\u8ba4\u8bc1\u68c0\u67e5\uff08\u6bd4\u5982\u6ca1\u80fd\u767b\u5f55\uff09\u65f6\u5f39\u51fa\u7684<code>href</code></p><p>\u9ed8\u8ba4\u4e3a<code class="default-value">/keystone/signin</code>\uff0c\u53ea\u6709<code>auth</code>\u88ab\u8bbe\u4e3a<code class="default-value">true</code>\u65f6\u624d\u7528\u3002</p></td></tr><tr><td><code>signin redirect</code> <code class="data-type">String</code></td><td><p>\u8bbf\u95ee\u8005\u901a\u8fc7\u5185\u7f6e\u7684\u767b\u5f55\u8def\u7531\u6210\u529f\u767b\u5f55\u540e\u5f39\u51fa\u7684<code>href</code></p><p>\u9ed8\u8ba4\u4e3a<code class="default-value">/keystone</code></p></td></tr><tr><td><code>signout url</code> <code class="data-type">String</code></td><td><p>\u754c\u9762\u53f3\u4e0a\u89d2\u9000\u51fa\u94fe\u63a5\u4e2d\u7684<code>href</code></p><p>\u5982\u679c<code>auth</code>\u8bbe\u4e3a<code class="default-value">true</code>\uff0c\u9ed8\u8ba4\u4e3a<code class="default-value">/keystone/signout</code>\u3002</p></td></tr><tr><td><code>signout redirect</code> <code class="data-type">String</code></td><td><p>\u8bbf\u95ee\u8005\u901a\u8fc7\u5185\u7f6e\u7684\u9000\u51fa\u8def\u7531\u6210\u529f\u9000\u51fa\u540e\u5f39\u51fa\u7684<code>href</code></p><p>\u9ed8\u8ba4\u4e3a<code class="default-value">/keystone</code></p></td></tr></table><p>\u5173\u4e8eKeystone\u6570\u636e\u5e93\u6a21\u578b\u8bbe\u7f6e\u548c\u4f7f\u7528\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1<a href="/zh/docs/database">\u6570\u636e\u5e93\u6307\u5357</a>\u3002</p><a name="options-ui"></a><h3>\u7ba1\u7406\u754c\u9762\u53c2\u6570</h3><p>\u4e0b\u9762\u8fd9\u4e9b\u53c2\u6570\u63a7\u5236\u7ba1\u7406\u540e\u53f0\u7684\u4e00\u4e9b\u754c\u9762\u9009\u9879\uff1a</p><table class="table"><col width="210"/><col/><tr><td><code>wysiwyg images</code> <code class="data-type">Boolean</code></td><td><p>\u6dfb\u52a0\u4e00\u4e2a\u56fe\u7247\u6309\u94ae\uff0c\u4ece\u800c\u4f7f\u4f60\u53ef\u4ee5\u5728WYSIWYG\u7f16\u8f91\u5668\u4e2d\u5f15\u5165\u6765\u81ea\u5176\u5b83URL\u7684\u56fe\u7247\u3002</p></td></tr><tr><td><code>wysiwyg cloudinary images</code> <code class="data-type">Boolean</code></td><td><p>\u6dfb\u52a0\u4e00\u4e2a\u56fe\u7247\u4e0a\u4f20\u6309\u94ae\uff0c\u5728\u4f60\u7684WYSIWYG\u7f16\u8f91\u5668\u4e2d\u76f4\u63a5\u542f\u7528cloudinary\u56fe\u7247\u4e0a\u4f20\u3002</p></td></tr><tr><td><code>wysiwyg additional buttons</code> <code class="data-type">String</code></td><td><p>\u5141\u8bb8\u6dfb\u52a0\u989d\u5916\u529f\u80fd\u6309\u94ae\uff0c\u6bd4\u5982<code>blockquote</code>\u3002</p><p>\u53ef\u4ee5\u6dfb\u52a0\u7684\u6309\u94ae\u5b8c\u6574\u6e05\u5355\u8bf7\u89c1\uff1a <a href="http://www.tinymce.com/wiki.php/Controls">http://www.tinymce.com/wiki.php/Controls</a></p></td></tr><tr><td><code>wysiwyg additional plugins</code> <code class="data-type">String</code></td><td><p>\u53ef\u4ee5\u6fc0\u6d3b\u989d\u5916\u63d2\u4ef6\uff0c\u63d2\u4ef6\u6e05\u5355\u8bf7\u89c1\uff1a <a href="http://www.tinymce.com/wiki.php/Plugins">http://www.tinymce.com/wiki.php/Plugins</a></p></td></tr><tr><td><code>wysiwyg additional options</code> <code class="data-type">Object</code></td><td><p>\u53ef\u4ee5\u4fee\u6539\u989d\u5916TinyMCE\u53c2\u6570\uff0c\u6bd4\u5982 <code>{ menubar: true }</code>\u3002</p></td></tr><tr><td><code>wysiwyg override toolbar</code> <code class="data-type">Boolean</code></td><td><p>\u8fd9\u4f1a\u53bb\u6389wysiwyg\u6a21\u5f0f\u4e0b\u7684\u9ed8\u8ba4\u6309\u94ae\u7ec4\u3002\u8fd9\u4e2a\u53c2\u6570\u5e94\u8be5\u8ddf<code>wysiwyg additional buttons</code>\u548c<code>wysiwyg additional plugins</code>\u4e00\u8d77\u4f7f\u7528\u3002\u9ed8\u8ba4\u4e3a<code class="data-type">false</code>\u3002</p></td></tr><tr><td><code>wysiwyg menubar</code> <code class="data-type">Boolean</code></td><td><p>\u663e\u793awysiwyg\u7f16\u8f91\u5668\u7684\u83dc\u5355\u680f\u3002\u9ed8\u8ba4\u4e3a<code class="data-type">false</code>.</p><p>\u53c2\u89c1<a href="http://www.tinymce.com/wiki.php/Configuration:menubar">http://www.tinymce.com/wiki.php/Configuration:menubar</a>\u4e86\u89e3\u8be6\u60c5\u3002</p></td></tr><tr><td><code>wysiwyg skin</code> <code class="data-type">String</code></td><td><p>\u53ef\u4ee5\u4fee\u6539\u76ae\u80a4\u3002\u9ed8\u8ba4\u4e3a<code class="data-type">keystone</code>\u3002</p><p>\u53c2\u89c1<a href="http://www.tinymce.com/wiki.php/Configuration:skin">http://www.tinymce.com/wiki.php/Configuration:skin</a>\u4e86\u89e3\u8be6\u60c5\u3002<div class="code-header"><h4>wysiwyg\u53c2\u6570\u8303\u4f8b</h4></div><pre><code class="language-javascript">keystone.init({\n\'wysiwyg override toolbar\': false,\n\'wysiwyg menubar\': true,\n\'wysiwyg skin\': \'lightgray\',\n\'wysiwyg additional buttons\': \'searchreplace visualchars,\'\n + \' charmap ltr rtl pagebreak paste, forecolor backcolor,\'\n +\' emoticons media, preview print \',\n\'wysiwyg additional plugins\': \'example, table, advlist, anchor,\'\n + \' autolink, autosave, bbcode, charmap, contextmenu, \'\n + \' directionality, emoticons, fullpage, hr, media, pagebreak,\'\n + \' paste, preview, print, searchreplace, textcolor,\'\n + \' visualblocks, visualchars, wordcount\',\n});</code></pre></p></td></tr></table><a name="services"></a><h2>\u670d\u52a1</h2><a name="services-google-analytics"></a><h3>\u8c37\u6b4c\u5206\u6790</h3><p>Keystone\u7684\u7ba1\u7406\u754c\u9762\u4e2d\u652f\u6301\u8c37\u6b4c\u5206\u6790\u8ffd\u8e2a\u3002\u8981\u542f\u7528\u8ffd\u8e2a\uff0c\u8bbe\u5b9a\u4e0b\u9762\u8fd9\u4e9b\u914d\u7f6e\u53c2\u6570\uff1a</p><table class="table"><col width="270"/><col/><tr><td><code>ga property</code> <code class="data-type">String</code></td><td><p>\u4f60\u7684\u8c37\u6b4c\u5206\u6790\u5c5e\u6027</p><p>\u9ed8\u8ba4\u4e3a<code class="default-value">process.env.GA_PROPERTY</code></p></td></tr><tr><td><code>ga domain</code> <code class="data-type">String</code></td><td><p>\u4f60\u7684\u8c37\u6b4c\u5206\u6790\u57df</p><p>\u9ed8\u8ba4\u4e3a<code class="default-value">process.env.GA_DOMAIN</code></p></td></tr></table><p class="note">\u6ce8\u610f\uff0c\u5982\u679c\u4f60\u53ea\u60f3\u5728\u9879\u76ee\u524d\u7aef\u5f15\u5165\u8c37\u6b4c\u5206\u6790\u8ffd\u8e2a\uff0c\u5e94\u8be5\u4f7f\u7528\u8ddf\u4e0a\u9762\u90a3\u4e9b\u53c2\u6570\u540d\u79f0\u4e0d\u540c\u7684\u540d\u79f0\u3002</p><a name="services-google-maps"></a><h3>\u8c37\u6b4c\u5730\u56fe</h3><p>Keystone\u7684<a href="/zh/docs/database#field_location">Location\u57df\u7c7b\u578b</a>\u53ef\u4ee5\u96c6\u6210<a href="http://www.morethanamap.com" target="_blank">\u8c37\u6b4c\u5730\u56feAPI</a>\uff0c\u901a\u8fc7<a href="https://developers.google.com/places/documentation/autocomplete" target="_blank"> Places Autocomplete API</a>\u81ea\u52a8\u6539\u8fdb\u53d6\u503c(\u5305\u62ec\u53d1\u73b0\u7ecf\u7eac\u5ea6)\u3002</p><p>\u8981\u542f\u7528\u8fd9\u4e9b\u529f\u80fd\uff0c\u9700\u8981<a href="https://code.google.com/apis/console/" target"_blank">\u4ece\u8c37\u6b4c\u83b7\u53d6\u4e00\u4e2aAPI\u79d8\u94a5</a> \uff0c\u5e76\u4e3a\u5b83\u542f\u7528Google Maps v3\u548cGoogle Places API\uff0c\u7136\u540e\u8bbe\u7f6e\u4e0b\u9762\u8fd9\u4e9b\u53c2\u6570\uff1a</p><table class="table"><col width="270"/><col/><tr><td><code>google api key</code> <code class="data-type">String</code></td><td><p>\u4f60\u7684\u8c37\u6b4cAPI\u6d4f\u89c8\u5668\u952e\uff0c\u7528\u4e8e\u8ba4\u8bc1\u7ba1\u7406\u754c\u9762\u4e2d\u7684Javascript Maps API\u3002</p><p>\u9ed8\u8ba4\u4e3a<code class="default-value">process.env.GOOGLE_BROWSER_KEY</code></p></td></tr><tr><td><code>google server api key</code> <code class="data-type">String</code></td><td><p>\u4f60\u7684\u8c37\u6b4cAPI\u670d\u52a1\u5668\u952e\uff0c\u7528\u4e8e\u8ba4\u8bc1\u4ece\u670d\u52a1\u5668\u7aef\u53d1\u9001\u7684Maps API\u8bf7\u6c42\u3002</p><p>\u9ed8\u8ba4\u4e3a<code class="default-value">process.env.GOOGLE_SERVER_KEY</code></p></td></tr><tr><td><code>default region</code> <code class="data-type">String</code></td><td><p>\u4e3a\u4e86\u5c06\u81ea\u52a8\u5b8c\u6210\u7ed3\u679c\u9650\u5236\u5728\u6307\u5b9a\u533a\u57df\u7684<strong>\u53ef\u9009</strong>\u8bbe\u7f6e\u3002</p><p>\u8fd9\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u533a\u57df\u7801\uff0c\u6307\u5b9a\u4e3a<a href="http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry" target="_blank">IANA\u8bed\u8a00\u533a\u57df</a>\u5b50\u6807\u7b7e\u3002</p><p>\u6bcf\u4e2a<code>Location</code>\u8f93\u5165\u57df\u90fd\u53ef\u4ee5\u5728\u8bbe\u5b9a\u4e0d\u540c\u7684<code>region</code>\u53c2\u6570\u3002 </p></td></tr></table><pre><code class="language-javascript">keystone.set(\'google api key\', \'your-browser-key\');\nkeystone.set(\'google server api key\', \'your-server-key\');\nkeystone.set(\'default region\', \'au\'); // \u53ef\u9009\uff0c\u4f1a\u5c06\u81ea\u52a8\u5b8c\u6210\u7684\u7ed3\u679c\u9650\u5236\u5728\u6fb3\u5927\u5229\u4e9a</code></pre><p class="note">\u6ce8\u610f\uff0cPlaces Geocoding API\u7684\u4f7f\u7528\u6709\u6bcf\u59292,500\u6b21geolocation\u8bf7\u6c42\u7684\u67e5\u8be2\u9650\u5236\uff0c\u9664\u975e\u4f60\u6709\u4f01\u4e1a\u7248\u8bb8\u53ef\u3002</p><p class="note">Places Geocoding API\u53ea\u80fd\u8ddf\u8c37\u6b4c\u5730\u56fe\u4e00\u8d77\u7528\uff1b\u7981\u6b62\u4e0d\u5728\u5730\u56fe\u4e0a\u663e\u793a\u7684\u5730\u7406\u7f16\u7801\u7ed3\u679c\u3002\u8bf7\u786e\u4fdd\u4f60\u7684Keystone\u7a0b\u5e8f\u7b26\u5408\u8c37\u6b4c\u5730\u56feAPI\u7684\u8bb8\u53ef\u3002</p><a name="services-amazons3"></a><h3>\u4e9a\u9a6c\u900aS3</h3><p>KeystoneJS\u7684\u57df\u7c7b\u578b<a href="/zh/docs/database#field_s3file">S3File</a>\u652f\u6301<a href="http://aws.amazon.com/s3/" target="_blank">\u4e9a\u9a6c\u900aS3</a>\u7684\u6587\u4ef6\u4e0a\u4f20\u548c\u6258\u7ba1\u3002</p><p>\u8981\u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\u4f7f\u7528S3File\u57df\uff0c\u9700\u8981<a href="https://portal.aws.amazon.com/gp/aws/developer/subscription/index.html?productCode=AmazonS3" target="_blank">\u6ce8\u518c\u4e00\u4e2a\u8d26\u53f7</a>\uff0c\u521b\u5efa\u4e00\u4e2a<strong>S3\u6876</strong>\uff0c\u83b7\u53d6\u4f60\u7684<strong>\u952e</strong>\u548c<strong>\u5bc6\u7801</strong>\u3002</p><p>\u7136\u540e\u8bbe\u5b9a<code>s3 config</code>\u53c2\u6570\u4e3a\u5305\u542b\u4f60\u7684\u914d\u7f6e\u7684\u5bf9\u8c61(\u89c1\u4e0b\u6587\u793a\u4f8b)\u3002</p><p>\u53e6\u5916\u8fd8\u8981\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf<code class="default-value">S3_BUCKET</code>\u3001<code class="default-value">S3_KEY</code>\u548c<code class="default-value">S3_SECRET</code></p><pre><code class="language-javascript">keystone.set(\'s3 config\', { bucket: \'my-bucket\', key: \'my-key\', secret: \'my-secret\' });</code></pre><p>\u8bbe\u7f6e\u5bf9\u8c61\u4e5f\u53ef\u4ee5\u5305\u542b \'default headers\' \u5c5e\u6027\u3002 \u8fd9\u4e2a\u5c5e\u6027\u53ef\u4ee5\u662f <code class="data-type">Object</code> \u7c7b\u578b\u6216\u8005\u662f <code class="data-type">Array</code> \u7c7b\u578b\u3002</p><pre><code class="language-javascript">keystone.set(\'s3 config\', { \n	 bucket: \'my-bucket\', \n	 key: \'my-key\', \n	 secret: \'my-secret\',\n	 \'default headers\':  {\n	 \'x-amz-meta-X-Default-Header\': \'Custom Default Value\'\n	 }\n});</code></pre><a name="services-azure"></a><h3>Windows Azure\u5b58\u50a8</h3><p>KeystoneJS\u7684<a href="/zh/docs/database#field_azurefile">AzureFile</a>\u57df\u7c7b\u578b\u652f\u6301<a href="http://www.windowsazure.com/" target="_blank">Windows Azure\u5b58\u50a8</a>\u7684\u6587\u4ef6\u4e0a\u4f20\u548c\u6258\u7ba1\u3002</p><p>\u8981\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528AzureFile\u57df\uff0c\u9700\u8981<a href="http://www.windowsazure.com/pricing/free-trial/" target="_blank">\u6ce8\u518c\u4e00\u4e2a\u8d26\u53f7</a>\uff0c\u8fdb\u5165<a href="https://manage.windowsazure.com/">Azure\u7ba1\u7406\u95e8\u6237</a>\u3002\u7528\u65b0\u5efa(\u6309\u94ae)\u521b\u5efa\u4e00\u4e2a\u5b58\u50a8\u8d26\u53f7\uff0c\u6570\u636e\u670d\u52a1\uff0c\u5b58\u50a8\u3002\u5728\u5b58\u50a8\u8d26\u53f7\u9875\u9762\u4e2d\u7528\u6309\u94ae\u201c\u7ba1\u7406\u8bbf\u95ee\u952e\u201d\u83b7\u53d6\u8bbf\u95ee\u4fe1\u606f\uff08\u8d26\u53f7\u540d\u3001\u952e\uff08\u6709\u6548\u7684\u4e3b\u952e\u6216\u4e8c\u7ea7\u952e\uff09\uff09\u3002</p><p>\u7136\u540e\u5c06<code>azurefile config</code>\u53c2\u6570\u8bbe\u4e3a\u5305\u542b\u4f60\u7684\u914d\u7f6e\u7684\u5bf9\u8c61(\u89c1\u4e0b\u6587\u793a\u4f8b)\u3002</p><p>\u53e6\u5916\u8fd8\u8981\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf<code class="default-value">AZURE_STORAGE_ACCOUNT</code>\u548c<code class="default-value">AZURE_STORAGE_ACCESS_KEY</code>\u3002</p><p>\u6ce8\u610f\uff0c<strong>account</strong>\u5c5e\u6027\u5e94\u8be5\u8bbe\u6210\u4f60\u7684<strong>\u5b58\u50a8\u8d26\u53f7</strong>\uff0c<em>\u4e0d\u662f\u7528\u6237\u8d26\u53f7</em>\u3002</p><pre><code class="language-javascript">keystone.set(\'azurefile config\', { account: \'my storage account\', key: \'secret api key\' });</code></pre><a name="services-cloudinary"></a><h3>Cloudinary</h3><p><a href="http://cloudinary.com" target="_blank">Cloudinary</a>\u662f\u4e00\u4e2a\u56fe\u7247\u4e0a\u4f20/\u7f29\u653e/\u6258\u7ba1\u670d\u52a1\uff0c\u8ba9\u4f60\u5728KeystoneJS\u7a0b\u5e8f\u4e2d\u7528<a href="/zh/docs/database#field_cloudinaryimage">CloudinaryImage</a>\u548c<a href="/zh/docs/database#field_cloudinaryimages">CloudinaryImages</a>\u57df\u7c7b\u578b\u8f7b\u677e\u5b9e\u73b0\u56fe\u7247\u7ba1\u7406\u3002</p><p>\u8981\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528Cloudinary Image\u57df\uff0c\u9700\u8981<a href="https://cloudinary.com/users/register/free" target="_blank">\u6ce8\u518c\u4e00\u4e2a\u8d26\u53f7</a> (Cloudinary\u63d0\u4f9b\u7684\u514d\u8d39\u670d\u52a1\u4e2d\u5305\u62ec500MB\u5b58\u50a8\u300150,000\u5f20\u56fe\u7247\u548c1GB\u6570\u636e\u4f20\u8f93)\u5e76\u83b7\u53d6\u4f60\u7684<strong>\u4e91\u540d\u79f0</strong>\u3001<strong>api\u952e</strong>\u548c<strong>api\u5bc6\u7801</strong>\u3002</p><p>\u7136\u540e\u5c06<code>cloudinary config</code>\u53c2\u6570\u8bbe\u4e3a<ul><li>\u5305\u542b\u4f60\u7684\u914d\u7f6e\u7684\u5bf9\u8c61(\u89c1\u4e0b\u6587\u793a\u4f8b)\uff0c\u6216</li><li>Cloudinary\u7ed9\u4f60\u7684\u73af\u5883\u53d8\u91cf\u5b57\u7b26\u4e32(\u6bd4\u5982<code class="default-value">cloudinary://api_key:api_secret@cloud_name</code>)</li></ul></p><p>\u8fd9\u4e2a\u53c2\u6570\u9ed8\u8ba4\u4e3a\u73af\u5883\u53d8\u91cf<code class="default-value">CLOUDINARY_URL</code>\uff0c\u5982\u679c\u8bbe\u4e86\u7684\u8bdd\u3002</p><p>\u5f53\u901a\u8fc7\u7ba1\u7406\u754c\u9762\u6216\u57df\u65b9\u6cd5\u628a\u56fe\u7247\u4e0a\u4f20\u5230Cloudinary\u4e2d\u65f6\uff0c\u4f1a\u81ea\u52a8\u7ed9\u5b83\u4eec\u8bbe\u4e00\u4e9b\u6807\u7b7e\u3002\u8981\u7528\u5b9a\u5236\u5b57\u7b26\u4e32\u4f5c\u4e3a\u8fd9\u4e9b\u6807\u7b7e\u7684\u524d\u7f00\uff0c\u53ef\u4ee5\u8bbe\u7f6e<code>cloudinary prefix</code>\u53c2\u6570\u3002</p><p>\u81ea\u52a8\u8bbe\u5b9a\u7684\u5185\u7f6e\u6807\u7b7e\u5305\u62ec\uff1a<ul><li><code class="default-value">{list.path}_{field.path}</code></li><li><code class="default-value">{list.path}_{field.path}_{item.id}</code></li><li><code class="default-value">{prefix}</code> (\u5982\u679c\u8bbe\u4e86)</li><li><code class="default-value">dev</code> (\u5982\u679c\u53c2\u6570<code>env</code>\u6ca1\u6709\u8bbe\u6210<code class="default-value">production</code>)</li></ul></p><p>\u5c06Keystone <code>cloudinary folders</code>\u53c2\u6570\u8bbe\u4e3a<code class="default-value">true</code>\u8fd8\u53ef\u4ee5\u542f\u7528Cloudinary\u7684\u4e0a\u4f20\u6587\u4ef6\u5939\u9009\u9879\u3002\u9ed8\u8ba4\u7684Cloudinary\u6587\u4ef6\u5939\u4f1a\u57fa\u4e8e\u4ee5\u4e0b\u89c4\u5219\u8bbe\u7f6e\uff1a<ul><li><code class="default-value">{list.path}/{field.path}/</code> (\u5f53\u672a\u8bbe\u7f6e<code>cloudinary prefix</code>\u65f6)</li><li><code class="default-value">{prefix}/{list.path}/{field.path}/</code> (\u8bbe\u7f6e\u4e86<code>cloudinary prefix</code>\u65f6)</li></ul></p><p class="note">\u4f60\u53ef\u4ee5\u76f4\u63a5\u5728<code>CloudinaryImage</code>\u57df(\u53c2\u89c1<a href="/zh/docs/database#fieldtypes-cloudinaryimage">CloudinaryImage</a> \u53c2\u6570) \u6216 <code>CloudinaryImages</code>\u57df(\u53c2\u89c1 <a href="/zh/docs/database#fieldtypes-cloudinaryimages">CloudinaryImages</a> \u53c2\u6570)\u4e0a\u8bbe\u7f6e<code class="default-value">folder</code>\u53c2\u6570\u8986\u76d6\u9ed8\u8ba4\u7684 Cloudinary \u6587\u4ef6\u5939\u3002<br/><br/>\u5982\u679c\u4f60\u5e0c\u671b Cloudinary \u5728 <code>cloudinary folders</code> \u8bbe\u7f6e\u4e3a <code class="default-value">true</code>  \u7684\u65f6\u5019\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u5939\uff0c \u786e\u8ba4\u5df2\u7ecf\u5728\u4f60\u7684 Cloudinary \u8d26\u6237\u4e2d\u542f\u7528 "Auto-create folders"\u3002</p><p>\u5982\u679c\u4f60\u5728\u4f7f\u7528HTTPS\u670d\u52a1\uff0c\u5e76\u4e14\u786e\u4fddcloudinary images\u4e5f\u901a\u8fc7HTTPS\u4f20\u8f93, \u8bbe\u7f6e<code>cloudinary secure</code>\u9009\u9879\u4e3a<code class="default-value">true</code>.</p><pre><code class="language-javascript">keystone.set(\'cloudinary config\', { cloud_name: \'my-cloud\', api_key: \'abc\', api_secret: \'123\' });\n// \u6216\nkeystone.set(\'cloudinary config\', \'cloudinary://api_key:api_secret@cloud_name\' );\n \n// \u53ef\u9009\uff0c\u4f1a\u7528\'keystone_\'\u4f5c\u4e3a\u6240\u6709\u5185\u7f6e\u6807\u7b7e\u7684\u524d\u7f00\nkeystone.set(\'cloudinary prefix\', \'keystone\');\n \n// \u53ef\u9009\uff0c\u4f1a\u7528[{prefix}]/{list.path}/{field.path}/ \u4f5c\u4e3a\u6bcf\u4e2a\u56fe\u7247\u7684public_id\u7684\u524d\u7f00\nkeystone.set(\'cloudinary folders\', true);\n \n// \u53ef\u9009, \u5c06\u5f3a\u5236cloudinary\u670d\u52a1\u901a\u8fc7HTTPS\u4f20\u8f93\nkeystone.set(\'cloudinary secure\', true);</code></pre><a name="services-embedly"></a><h3>Embed.ly</h3><p><a href="http://embed.ly" target="_blank">Embed.ly</a>\u662f\u4e00\u4e2a\u89e3\u6790url (\u6bd4\u5982Youtube\u7684\u5d4c\u5165\u94fe\u63a5)\u7684\u670d\u52a1\uff0c\u5e76\u4e14\u4f1a\u8fd4\u56de\u5f88\u591a\u6709\u4ef7\u503c\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u63d0\u4f9b\u8005\u540d\u79f0\uff0c\u6c47\u603b\u5143\u6570\u636e\uff0c\u89c6\u9891\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\uff0c\u4ee5\u53ca\u53ef\u4ee5\u6f5c\u5728\u4f60\u7684\u89c6\u56fe\u4e2d\u7684\u6e05\u723d\u94fe\u63a5\u3002\u4ed6\u4eec\u63d0\u4f9b\u4e86\u6bcf\u6708\u4e0d\u8d85\u8fc75,000\u4e2aurl\u7684\u514d\u8d39\u65b9\u6848\u3002</p><p><a href="/zh/docs/database#field_embedly">Embedly\u57df\u7c7b\u578b</a>\u5728\u4f60\u7684KeystoneJS\u7a0b\u5e8f\u4e2d\u96c6\u6210\u5b83\u4eec\u7684API\u7684\u4fbf\u5229\u65b9\u5f0f\u3002</p><p>\u914d\u7f6eKeystoneJS\u652f\u6301Embed.ly API\uff0c\u53ea\u9700\u8981<a href="https://app.embed.ly/signup">\u6ce8\u518c\u4e00\u4e2a\u8d26\u53f7</a>\uff0c\u83b7\u53d6\u4f60\u7684API\u952e\uff0c\u5e76\u8bbe\u7f6e<code>embedly api key</code>\u53c2\u6570\u3002</p><p>\u8fd9\u4e2a\u53c2\u6570\u9ed8\u8ba4\u4e3a\u73af\u5883\u53d8\u91cf<code class="default-value">EMBEDLY_API_KEY</code>\uff0c\u5982\u679c\u8bbe\u4e86\u7684\u8bdd\u3002</p><pre><code class="language-javascript">keystone.set(\'embedly api key\', \'your-key\');</code></pre><a name="services-mandrill"></a><h3>Mandrill</h3><p><a href="http://mandrill.com" target="_blank">Mandrill</a>\u662f\u4e00\u4e2a\u53ef\u6269\u5c55\u53c8\u5b9e\u60e0\u7684email\u57fa\u7840\u8bbe\u65bd\u670d\u52a1\uff0c\u8ba9\u4f60\u53ef\u4ee5\u8f7b\u677e\u5730\u53d1\u9001\u90ae\u4ef6\u3002\u4ed6\u4eec\u63d0\u4f9b\u4e86\u6bcf\u6708\u4e0d\u8d85\u8fc712,000\u5c01email\u7684\u514d\u8d39\u65b9\u6848\u3002</p><p>\u914d\u7f6eKeystoneJS\u652f\u6301Mandrill API\uff0c\u53ea\u9700<a href="https://mandrill.com/signup/">\u6ce8\u518c\u4e00\u4e2a\u8d26\u53f7</a>\uff0c\u83b7\u53d6\u4f60\u7684API\u952e\uff0c\u5e76\u8bbe\u7f6e<code>mandrill api key</code>\u548c<code>mandrill username</code>\u4e24\u4e2a\u53c2\u6570\u3002</p><p>\u8fd9\u4e9b\u53c2\u6570\u9ed8\u8ba4\u4e3a\u73af\u5883\u53d8\u91cf<code class="default-value">MANDRILL_API_KEY &amp; MANDRILL_USERNAME</code>\uff0c\u5982\u679c\u8bbe\u4e86\u7684\u8bdd\u3002</p><pre><code class="language-javascript">keystone.set(\'mandrill api key\', \'your-key\');\nkeystone.set(\'mandrill username\', \'your-username\');</code></pre><a name="updates"></a><h2>\u5e94\u7528\u7a0b\u5e8f\u66f4\u65b0</h2><p>Keystone\u4e2d\u6709\u4e00\u4e2a\u66f4\u65b0\u6846\u67b6\uff0c\u5c06<code>auto update</code>\u53c2\u6570\u8bbe\u4e3a<code class="default-value">true</code>\u5c31\u53ef\u4ee5\u542f\u7528\u3002</p><p>\u4f7f\u7528\u66f4\u65b0\u6846\u67b6\u53ef\u4ee5\u8f7b\u677e\u5411\u6570\u636e\u5e93\u4e2d\u690d\u5165\u6570\u636e\uff0c\u6a21\u578b\u4fee\u6539\u65f6\u8f6c\u6362\u6570\u636e\uff0c\u6216\u8005\u5bf9\u6570\u636e\u5e93\u8fd0\u884c\u8f6c\u6362\u811a\u672c\u3002</p><p>\u66f4\u65b0\u6587\u4ef6\u5e94\u8be5\u6309\u7167\u8bed\u4e49\u7248\u672c\u547d\u540d\uff0c\u540e\u9762\u53ef\u4ee5\u8ddf\u4e00\u4e2a\u5173\u952e\u5b57\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u8ddf\uff0c\u6bd4\u5982<code>0.0.1-init.js</code>\u3002\u7248\u672c\u53f7\u7528\u6765\u5bf9\u66f4\u65b0\u811a\u672c\u6392\u5e8f\uff0c\u5173\u952e\u5b57\u53ef\u4ee5\u6807\u793a\u66f4\u65b0\u4ec0\u4e48\u3002</p><p>\u6bcf\u4e2a\u66f4\u65b0\u6587\u4ef6\u90fd\u5e94\u8be5\u8f93\u51fa\u5355\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u5e94\u8be5\u63a5\u53d7\u5355\u4e2a\u53c2\u6570 - <code>next(err)</code> \u56de\u8c03\uff0c\u5728\u66f4\u65b0\u5b8c\u6210\u65f6\u8c03\u7528\u3002</p><p>\u6240\u6709\u7684\u66f4\u65b0\u6587\u4ef6\u90fd\u4f1a\u5728web\u670d\u52a1\u5668\u542f\u52a8\u524d\u6267\u884c(\u6bcf\u4e2a\u90fd\u7b49\u524d\u4e00\u4e2a\u66f4\u65b0\u5b8c\u6210\u540e\u5f00\u59cb)\u3002</p><p>\u5982\u679c<code>next</code>\u56de\u8c03\u6536\u5230\u4e00\u4e2a\u9519\u8bef\uff0c\u5b83\u4f1a\u62a5\u544a\u7ed9\u63a7\u5236\u53f0\uff0c\u5e76\u4e14\u7a0b\u5e8f\u521d\u59cb\u5316\u4f1a\u7ec8\u6b62\u3002</p><p>\u5728\u5f00\u53d1\u65f6\uff0c\u4f60\u53ef\u4ee5\u5728\u8f93\u51fa\u7684\u51fd\u6570\u4e2d\u5c06<code>__defer__</code>\u5c5e\u6027\u8bbe\u4e3a<code>true</code>\u6765\u4e34\u65f6\u7981\u7528\u66f4\u65b0\u3002\u6240\u6709\u540e\u7eed\u66f4\u65b0\u90fd\u4f1a\u8df3\u8fc7\uff0c\u4f46\u7a0b\u5e8f\u4f1a\u542f\u52a8\u3002</p><p>\u66f4\u65b0\u53ea\u4f1a\u8fd0\u884c\u4e00\u6b21\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5df2\u5b8c\u6210\u7684\u66f4\u65b0\u90fd\u4f1a\u8bb0\u5f55\u5728\u6570\u636e\u5e93\u91cc\u7684<code>app_updates</code>\u96c6\u5408\u4e2d\u3002</p><div class="code-header"><h4>\u66f4\u65b0\u811a\u672c\u793a\u4f8b</h4><p>\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7ba1\u7406\u5458\u7528\u6237</p></div><pre><code class="language-javascript">var keystone = require(\'keystone\'),\n    User = keystone.list(\'User\');\n \nexports = module.exports = function(done) {\n    new User.model({\n        name: { first: \'Admin\', last: \'User\' },\n        password: \'admin\',\n        isAdmin: true\n    }).save(done);\n};</code></pre><a name="headless"></a><h2>\u7981\u7528\u7ba1\u7406\u754c\u9762</h2><p>\u4f60\u53ef\u4ee5\u5c06<code>headless</code>\u53c2\u6570\u8bbe\u4e3a<code class="default-value">true</code>\u6765\u7981\u7528\u7ba1\u7406\u754c\u9762\u3002</p><p>\u8fd9\u6837\u4e0d\u7528Keystone\u5728<code class="default-value">/keystone</code>\u4e0b\u7ed9\u7ba1\u7406\u754c\u9762\u521b\u5efa\u8def\u7531\u7ed1\u5b9a\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528<code>keystone.start()</code>\u6216<code>keystone.routes(app)</code>\u3002</p></div></div></div></div>');
}.call(this,"docsnav"in f?f.docsnav:"undefined"!=typeof docsnav?docsnav:void 0,"docssection"in f?f.docssection:"undefined"!=typeof docssection?docssection:void 0),d.join("")},"zh/pages/docs/database":function(a){var c,d=[],e={},f=a||{};return function(a,f){e.docsnav=c=function(e){this&&this.block,this&&this.attributes||{};d.push('<div class="visible-xs"><ul class="nav-toggle">'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}}}.call(this),d.push('</ul></div><nav class="docs-sidebar hidden-xs"><ul class="sidebar-nav"><li'+b.cls(["introduction"==e.value?"active":null],[!0])+'><a href="/zh/docs" class="nav-heading">\u6b22\u8fce</a></li>'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}}}.call(this),d.push("</ul>"),"introduction"!=e.value&&(d.push('<hr/><ul class="sidebar-nav">'),function(){var b=a;if("number"==typeof b.length)for(var c=0,f=b.length;f>c;c++){var g=b[c];g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">\u4ecb\u7ecd</a></li><li><a href="#introduction-prerequisites">\u524d\u63d0\u6761\u4ef6</a></li><li><a href="#introduction-productionvsdevelopment">\u751f\u4ea7 vs \u5f00\u53d1</a></li><li class="nav-label"><a href="#gettingstarted">\u5165\u95e8</a></li><li><a href="#gettingstarted-usingyeoman">\u4f7f\u7528Yeoman\u751f\u6210\u5668</a></li><li><a href="#gettingstarted-startinganewproject">\u5f00\u59cb\u4e00\u4e2a\u65b0\u9879\u76ee</a></li><li><a href="#gettingstarted-projectstructure">\u9879\u76ee\u7ed3\u6784</a></li><li class="nav-label"><a href="#models">\u6a21\u578b</a></li><li><a href="#models-authentication">\u8ba4\u8bc1\u4e0e\u4f1a\u8bdd\u7ba1\u7406</a></li><li class="nav-label"><a href="#routesviews">\u8def\u7531 &amp; \u89c6\u56fe</a></li><li><a href="#routesviews-settingup">\u8bbe\u7f6e\u8def\u7531\u548c\u4e2d\u95f4\u4ef6</a></li><li><a href="#routesviews-middleware">\u5e38\u7528\u8def\u7531\u4e2d\u95f4\u4ef6</a></li><li><a href="#routesviews-firstview">\u4f60\u7684\u7b2c\u4e00\u4e2a\u89c6\u56fe</a></li><li><a href="#routesviews-templates">\u6a21\u677f</a></li><li><a href="#routesviews-publicassets">\u516c\u5171\u8d44\u4ea7</a></li><li class="nav-label"><a href="#runningyourapp">\u8fd0\u884cApp</a></li><li><a href="#runningyourapp-writingupdates">\u7f16\u5199\u66f4\u65b0</a></li><li><a href="#runningyourapp-startingkeystone">\u542f\u52a8Keystone</a></li><li><a href="#runningyourapp-nextstep">\u4e0b\u4e00\u6b65</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone \u53c2\u6570</a></li><li><a href="#options-concepts">\u8bbe\u7f6e\u53c2\u6570</a></li><li><a href="#options-project">\u9879\u76ee\u53c2\u6570</a></li><li><a href="#options-server">Web\u670d\u52a1\u5668\u53c2\u6570</a></li><li><a href="#options-ssl">SSL\u53c2\u6570</a></li><li><a href="#options-database">\u6570\u636e\u5e93\u4e0e\u7528\u6237\u8ba4\u8bc1\u53c2\u6570</a></li><li><a href="#options-unix-socket">Unix Socket\u53c2\u6570</a></li><li><a href="#options-ui">\u7ba1\u7406\u5458\u754c\u9762\u53c2\u6570</a></li><li class="nav-label"><a href="#services">\u670d\u52a1</a></li><li><a href="#services-google-analytics">\u8c37\u6b4c\u5206\u6790</a></li><li><a href="#services-google-maps">\u8c37\u6b4c\u5730\u56fe</a></li><li><a href="#services-amazons3">\u4e9a\u9a6c\u900a S3</a></li><li><a href="#services-azure">\u5fae\u8f6fAzure\u5b58\u50a8</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">\u5e94\u7528\u7a0b\u5e8f\u66f4\u65b0</a></li><li class="nav-label"><a href="#headless">\u7981\u7528\u7ba1\u7406\u5458\u754c\u9762</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">\u6982\u5ff5</a></li><li class="nav-label"><a href="#lists">\u5217\u8868</a></li><li><a href="#lists-usage">\u7528\u6cd5</a></li><li><a href="#lists-example">\u793a\u4f8b</a></li><li><a href="#lists-options">List\u53c2\u6570</a></li><li><a href="#lists-plugins">Schema\u63d2\u4ef6</a></li><li><a href="#lists-querying">\u67e5\u8be2\u6570\u636e</a></li><li><a href="#lists-paginate">\u5206\u9875\u67e5\u8be2</a></li><li><a href="#lists-creating">\u521b\u5efa\u6761\u76ee</a></li><li><a href="#lists-deleting">\u5220\u9664\u6761\u76ee</a></li><li class="nav-label"><a href="#headings">\u6807\u9898</a></li><li class="nav-label"><a href="#fields">\u57df</a></li><li><a href="#fields-overview">\u6982\u89c8</a></li><li><a href="#fields-options">\u57df\u53c2\u6570</a></li><li><a href="#fields-conditional">\u57df\u6761\u4ef6</a></li><li><a href="#fields-watching">\u57df\u76d1\u542c</a></li><li><a href="#fields-underscoremethods">Underscore\u65b9\u6cd5</a></li><li class="nav-label"><a href="#relationships">\u5173\u7cfb</a></li><li><a href="#relationship-fields">\u5173\u7cfb\u57df</a></li><li><a href="#relationship-definitions">\u5173\u7cfb\u5b9a\u4e49</a></li><li><a href="#relationship-queries">\u52a0\u8f7d\u76f8\u5173\u6761\u76ee</a></li><li class="nav-label"><a href="#fieldtypes">\u57df\u7c7b\u578b</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li></ul>')}else{var f=0;for(var c in b){f++;var g=b[c];g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">\u4ecb\u7ecd</a></li><li><a href="#introduction-prerequisites">\u524d\u63d0\u6761\u4ef6</a></li><li><a href="#introduction-productionvsdevelopment">\u751f\u4ea7 vs \u5f00\u53d1</a></li><li class="nav-label"><a href="#gettingstarted">\u5165\u95e8</a></li><li><a href="#gettingstarted-usingyeoman">\u4f7f\u7528Yeoman\u751f\u6210\u5668</a></li><li><a href="#gettingstarted-startinganewproject">\u5f00\u59cb\u4e00\u4e2a\u65b0\u9879\u76ee</a></li><li><a href="#gettingstarted-projectstructure">\u9879\u76ee\u7ed3\u6784</a></li><li class="nav-label"><a href="#models">\u6a21\u578b</a></li><li><a href="#models-authentication">\u8ba4\u8bc1\u4e0e\u4f1a\u8bdd\u7ba1\u7406</a></li><li class="nav-label"><a href="#routesviews">\u8def\u7531 &amp; \u89c6\u56fe</a></li><li><a href="#routesviews-settingup">\u8bbe\u7f6e\u8def\u7531\u548c\u4e2d\u95f4\u4ef6</a></li><li><a href="#routesviews-middleware">\u5e38\u7528\u8def\u7531\u4e2d\u95f4\u4ef6</a></li><li><a href="#routesviews-firstview">\u4f60\u7684\u7b2c\u4e00\u4e2a\u89c6\u56fe</a></li><li><a href="#routesviews-templates">\u6a21\u677f</a></li><li><a href="#routesviews-publicassets">\u516c\u5171\u8d44\u4ea7</a></li><li class="nav-label"><a href="#runningyourapp">\u8fd0\u884cApp</a></li><li><a href="#runningyourapp-writingupdates">\u7f16\u5199\u66f4\u65b0</a></li><li><a href="#runningyourapp-startingkeystone">\u542f\u52a8Keystone</a></li><li><a href="#runningyourapp-nextstep">\u4e0b\u4e00\u6b65</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone \u53c2\u6570</a></li><li><a href="#options-concepts">\u8bbe\u7f6e\u53c2\u6570</a></li><li><a href="#options-project">\u9879\u76ee\u53c2\u6570</a></li><li><a href="#options-server">Web\u670d\u52a1\u5668\u53c2\u6570</a></li><li><a href="#options-ssl">SSL\u53c2\u6570</a></li><li><a href="#options-database">\u6570\u636e\u5e93\u4e0e\u7528\u6237\u8ba4\u8bc1\u53c2\u6570</a></li><li><a href="#options-unix-socket">Unix Socket\u53c2\u6570</a></li><li><a href="#options-ui">\u7ba1\u7406\u5458\u754c\u9762\u53c2\u6570</a></li><li class="nav-label"><a href="#services">\u670d\u52a1</a></li><li><a href="#services-google-analytics">\u8c37\u6b4c\u5206\u6790</a></li><li><a href="#services-google-maps">\u8c37\u6b4c\u5730\u56fe</a></li><li><a href="#services-amazons3">\u4e9a\u9a6c\u900a S3</a></li><li><a href="#services-azure">\u5fae\u8f6fAzure\u5b58\u50a8</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">\u5e94\u7528\u7a0b\u5e8f\u66f4\u65b0</a></li><li class="nav-label"><a href="#headless">\u7981\u7528\u7ba1\u7406\u5458\u754c\u9762</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">\u6982\u5ff5</a></li><li class="nav-label"><a href="#lists">\u5217\u8868</a></li><li><a href="#lists-usage">\u7528\u6cd5</a></li><li><a href="#lists-example">\u793a\u4f8b</a></li><li><a href="#lists-options">List\u53c2\u6570</a></li><li><a href="#lists-plugins">Schema\u63d2\u4ef6</a></li><li><a href="#lists-querying">\u67e5\u8be2\u6570\u636e</a></li><li><a href="#lists-paginate">\u5206\u9875\u67e5\u8be2</a></li><li><a href="#lists-creating">\u521b\u5efa\u6761\u76ee</a></li><li><a href="#lists-deleting">\u5220\u9664\u6761\u76ee</a></li><li class="nav-label"><a href="#headings">\u6807\u9898</a></li><li class="nav-label"><a href="#fields">\u57df</a></li><li><a href="#fields-overview">\u6982\u89c8</a></li><li><a href="#fields-options">\u57df\u53c2\u6570</a></li><li><a href="#fields-conditional">\u57df\u6761\u4ef6</a></li><li><a href="#fields-watching">\u57df\u76d1\u542c</a></li><li><a href="#fields-underscoremethods">Underscore\u65b9\u6cd5</a></li><li class="nav-label"><a href="#relationships">\u5173\u7cfb</a></li><li><a href="#relationship-fields">\u5173\u7cfb\u57df</a></li><li><a href="#relationship-definitions">\u5173\u7cfb\u5b9a\u4e49</a></li><li><a href="#relationship-queries">\u52a0\u8f7d\u76f8\u5173\u6761\u76ee</a></li><li class="nav-label"><a href="#fieldtypes">\u57df\u7c7b\u578b</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li></ul>')}}}.call(this),d.push("</ul>")),d.push("</nav>")},d.push('<div class="page-header"><div class="container"><h1>\u6570\u636e\u5e93</h1><p class="lead">\u6570\u636e\u6a21\u578b\u7684\u8bbe\u7f6e\u53ca\u4f7f\u7528</p></div></div><div class="container"><div class="row"><div class="col-sm-3">'),e.docsnav(f),d.push('</div><div class="col-sm-9"><div class="docs-content"><h2><a name="concepts"></a>\u6982\u5ff5</h2><div class="alert alert-warning"><p>KeystoneJS \u9700\u8981 MongoDB v2.4 \u6216\u66f4\u9ad8\u7248\u672c\u3002</p></div><p>\u5728KeystoneJS\u4e2d\uff0c\u6570\u636e\u6a21\u5f0f\u548c\u6a21\u578b\u662f\u7531<strong>\u5217\u8868</strong>\u63a7\u5236\u7684\uff0c\u5e76\u4e14\u6570\u636e\u5e93\u4e2d\u7684\u6587\u6863\u7ecf\u5e38\u88ab\u79f0\u4e3a<strong>\u6761\u76ee</strong>\u3002</p><p>\u8981\u5b9a\u4e49\u6570\u636e\u6a21\u578b\uff0c\u4f60\u8981\u521b\u5efa\u4e00\u4e2a<code>new keystone.List</code>\uff0c\u7136\u540e\u4f20\u7ed9\u5b83<a href="#lists-options">\u5217\u8868\u53c2\u6570</a>\u3002</p><p>\u7136\u540e\u5411\u5217\u8868\u4e2d<code>add</code>\u57df\u3002\u5728\u5e95\u5c42\uff0cKeystone List\u4f1a\u521b\u5efa\u4e00\u4e2a<a href="http://mongoosejs.com/docs/guide.html" target="_blank">mongoose\u6a21\u5f0f</a>\uff0c\u5e76\u4e3a\u4f60\u6dfb\u52a0\u7684\u57df\u7ed9\u5b83\u5b9a\u4e49\u6070\u5f53\u7684\u8def\u5f84\u3002</p><p>\u4f60\u53ef\u4ee5\u8bbf\u95ee<code>schema</code>\uff0c\u63d2\u5165\u5176\u5b83mongoose\u529f\u80fd\uff0c\u6bd4\u5982\u865a\u62df\u57df\u3001\u65b9\u6cd5\u548c\u524d\u7f6e/\u540e\u7f6e\u94a9\u5b50\u3002</p><p>\u5b8c\u6210\u5217\u8868\u7684\u8bbe\u7f6e\u540e\uff0c\u8c03\u7528<code>list.register()</code>\u521d\u59cb\u5316\u5b83\uff0c\u5e76\u7528Keystone\u6ce8\u518c\u3002</p><p>\u67e5\u8be2\u6570\u636e\u7528<code>list.model</code> (\u8fd9\u662f\u4e00\u4e2a<a href="http://mongoosejs.com/docs/models.html" target="_blank">mongoose \u6a21\u578b</a>)\u3002</p><p>\u5217\u8868\u6761\u76ee\u662f<a href="http://mongoosejs.com/docs/documents.html" target"_blank">mongoose \u6587\u6863</a>\u3002\u7528<code>new list.model()</code>\u521b\u5efa\u65b0\u6761\u76ee\uff0c\u5f53\u51c6\u5907\u597d\u4fdd\u5b58\u5b83\u65f6(\u6216\u8005\u5c06\u4fee\u6539\u4fdd\u5b58\u5230\u5df2\u6709\u6761\u76ee\u4e0a)\u8c03\u7528<code>item.save()</code>\u3002</p><a name="lists"></a><h2>\u5217\u8868</h2><a name="lists-usage"></a><h3>\u7528\u6cd5</h3><h4><code>new keystone.List(key[, options]);</code></h4><p>\u521b\u5efa<strong>Keystone\u5217\u8868\u7684\u8bed\u6cd5</strong>\u8ddf\u521b\u5efaMongoose\u6a21\u5f0f\u7684\u8bed\u6cd5\u975e\u5e38\u50cf\uff0c\u53ea\u662f\u6784\u9020\u5668\u4e0d\u4e00\u6837\uff0c\u5b83\u662f<code class=\'default-value\'>var MyList = new keystone.List(key, options)</code>\u3002</p><p>\u65b0\u5217\u8868\u521b\u5efa\u597d\u4ee5\u540e\uff0c\u53ef\u4ee5\u7528<code>MyList.add(fields)</code>\u6dfb\u52a0\u57df\uff0c\u57df\u662f\u4e00\u4e2a\u5305\u542b\u952e\uff08\u57df\u7684\u8def\u5f84\uff09\u548c\u503c\uff08\u57df\u7684\u7c7b\u578b\u6216\u53c2\u6570\uff09\u7684\u5bf9\u8c61\u3002</p><p>\u57df\u662f\u7531\u5e26\u6709<code>type</code>\u5c5e\u6027\u7684\u5bf9\u8c61\u5b9a\u4e49\u7684\uff0c\u8fd9\u4e2a<code>type</code>\u5fc5\u987b\u662f\u6709\u6548\u7684\u57df\u7c7b\u578b\u6216\u57fa\u672c\u7684\u6570\u636e\u7c7b\u578b\u3002\u4f60\u53ef\u4ee5\u7528\u5bf9\u8c61\u8bed\u6cd5\u4e3a\u57df\u6307\u5b9a\u989d\u5916\u7684\u53c2\u6570\u3002\u5e38\u7528\u7684\u57df\u53c2\u6570\u548c\u57df\u7c7b\u578b\u7279\u5b9a\u7684\u53c2\u6570\u5728\u57df\u6587\u6863\u4e2d\u6709\u8be6\u7ec6\u4ecb\u7ecd\u3002</p><p>\u5217\u8868\u4e0a\u7684\u6240\u6709\u57df\u548c\u53c2\u6570\u90fd\u8bbe\u597d\u4e4b\u540e\uff0c\u8c03\u7528<code>MyList.register()</code>\u7528Keystone\u6ce8\u518c\u5217\u8868\uff0c\u5e76\u6700\u7ec8\u786e\u5b9a\u5b83\u7684\u914d\u7f6e\u3002</p><a name="lists-example"></a><h3>\u4f8b\u5b50</h3><p>\u4e00\u4e2a\u7528\u4e8e\u535a\u5ba2\u7684\u7b80\u5355Post\u6a21\u578b\u53ef\u80fd\u4f1a\u50cf\u4e0b\u9762\u8fd9\u4e2a\uff1a</p><div class="code-header"><h4>Post.js</h4></div><pre><code class="language-javascript">var keystone = require(\'keystone\'),\n    Types = keystone.Field.Types;\n \nvar Post = new keystone.List(\'Post\', {\n    autokey: { path: \'slug\', from: \'title\', unique: true },\n    map: { name: \'title\' },\n    defaultSort: \'-createdAt\'\n});\n \nPost.add({\n    title: { type: String, required: true },\n    state: { type: Types.Select, options: \'draft, published, archived\', default: \'draft\' },\n    author: { type: Types.Relationship, ref: \'User\' },\n    createdAt: { type: Date, default: Date.now },\n    publishedAt: Date,\n    image: { type: Types.CloudinaryImage },\n    content: {\n        brief: { type: Types.Html, wysiwyg: true, height: 150 },\n        extended: { type: Types.Html, wysiwyg: true, height: 400 }\n    }\n});\n \nPost.defaultColumns = \'title, state|20%, author, publishedAt|15%\'\nPost.register();</code></pre><p class="note">\u8fd9\u4e2a\u4f8b\u5b50\u4f7f\u7528\u4e86\u53ef\u9009\u7684<code>map</code>\u3001<code>autokey</code>\u548c<code>defaultSort</code>\u53c2\u6570\uff0c\u63cf\u8ff0\u89c1\u4e0b\u6587\u3002</p><p class="note">\u5b83\u8fd8\u6307\u5b9a<code>title</code>\u3001<code>state</code>\u3001<code>author</code>\u548c<code>publishedAt</code>\u4f5c\u4e3a\u7ba1\u7406\u754c\u9762\u4e2d\u9ed8\u8ba4\u663e\u793a\u7684\u5217\uff0cstate\u548cpublishedAt\u8fd8\u7ed9\u5b9a\u4e86\u5217\u5bbd\u5ea6\u3002</p><p class="note"><code>author</code>\u57df\u662f<code>Post</code>\u8ddf<code>User</code>\u6a21\u578b\u7684\u5173\u7cfb\uff0c\u5728<a href="/zh/guide#models_users">\u5165\u95e8\u6307\u5357</a>\u4e2d\u4ecb\u7ecd\u8fc7\u3002</p><a name="lists-options"></a><h3>\u53c2\u6570</h3><p>\u5217\u8868\u652f\u6301\u4ee5\u4e0b\u53c2\u6570\uff1a</p><table class="table"><col width="210"/><col/><tr><td><code>label</code> <code class="data-type">String</code></td><td>\u5217\u8868\u5728\u7ba1\u7406\u754c\u9762\u4e2d\u7528\u7684\u6807\u7b7e\u3002\u9ed8\u8ba4\u4e3a<code class="default-value">key</code>\u7684\u53cb\u5584\u683c\u5f0f\u3002 </td></tr><tr><td><code>path</code> <code class="data-type">String</code></td><td>\u5217\u8868\u5728\u7ba1\u7406\u754c\u9762\u4e2d\u7684\u8def\u5f84\u3002\u9ed8\u8ba4\u4e3a<code class="default-value">key</code>\u7684\u7f29\u7565\u540d\u683c\u5f0f\u3002</td></tr><t><td><code>singular</code> <code class="data-type">String</code></td><td>\u5217\u8868\u4e2d\u6761\u76ee\u7684\u5355\u6570\u6807\u7b7e\u3002\u7528\u5728\u7ba1\u7406\u754c\u9762\u4e2d\uff0c\u9ed8\u8ba4\u4e3a<code class="default-value">label</code>\u7684\u5355\u6570\u683c\u5f0f\u3002</td></t><tr><td><code>plural</code> <code class="data-type">String</code></td><td>\u5217\u8868\u4e2d\u6761\u76ee\u7684\u590d\u6570\u6807\u7b7e\u3002\u7528\u5728\u7ba1\u7406\u754c\u9762\u4e2d\uff0c\u9ed8\u8ba4\u4e3a<code class="default-value">label</code>\u7684\u590d\u6570\u683c\u5f0f\u3002</td></tr><tr><td><code>schema</code> <code class="data-type">String</code></td><td><p>\u5217\u8868\u7684Mongoose\u6a21\u5f0f\u7684\u53c2\u6570\u3002 \u9664\u4e86\u5176\u4ed6\u65b9\u9762\u5916\uff0c\u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u7ed9<strong>\u96c6\u5408</strong>\u6307\u5b9a\u4e00\u4e2a\u5b9a\u5236\u7684\u540d\u79f0\u3002\u53c2\u89c1<a href="http://mongoosejs.com/docs/guide.html#options" target="_blank">mongoose\u6a21\u5f0f\u7684\u6587\u6863</a>\u67e5\u770b\u53ef\u7528\u53c2\u6570\u7684\u6e05\u5355\u3002</p><p><em>\u8b66\u544a: \u4e0d\u8981\u4fee\u6539\u6a21\u5f0f\u53c2\u6570<code>id</code>\u6216<code>_id</code>\uff1b\u8fd9\u662fKeystone\u8981\u6c42\u7684\u9ed8\u8ba4\u884c\u4e3a\u3002</em></p></td></tr><tr><td><code>drilldown</code> <code class="data-type">String</code></td><td>\u4ee5\u7a7a\u683c\u5206\u9694\u7684\u5173\u7cfb\u6e05\u5355\uff0c\u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a\u4e0b\u94bb\u9879\u3002</td></tr><tr><td><code>sortable</code> <code class="data-type">Boolean</code></td><td>\u7ed9\u6a21\u5f0f\u6dfb\u52a0\u4e00\u4e2a\u9690\u85cf\u7684<code>sortOrder</code>\u57df\uff0c\u5e76\u5728\u7ba1\u7406\u754c\u9762\u4e2d\u542f\u7528\u62d6\u62fd\u5f0f\u7684\u6392\u5e8f\u3002</td></tr><tr><td><code>sortContext</code> <code class="data-type">String</code></td><td>\u7ba1\u7406\u754c\u9762\u4e2d\u6709\u62d6\u62fd\u5f0f\u6392\u5e8f\u65f6\u7528\u6765\u63a7\u5236\u7684<code>List:relationship</code>\u5bf9\u3002</td></tr><tr><td><code>searchFields</code> <code class="data-type">String</code></td><td>\u5728\u7ba1\u7406\u754c\u9762\u4e2d\u7528\u4e8e\u641c\u7d22\u7684\u8def\u5f84\u6e05\u5355\uff0c\u7528\u7a7a\u683c\u5206\u9694\u3002</td></tr><tr><td><code>defaultSort</code> <code class="data-type">String</code></td><td>\u7ba1\u7406\u754c\u9762\u4e2d\u7528\u4e8e\u6392\u5e8f\u7684\u9ed8\u8ba4\u5217\u6216\u8def\u5f84\u3002</td></tr><tr><td><code>defaultColumns</code> <code class="data-type">String</code></td><td>\u5728\u7ba1\u7406\u754c\u9762\u7684\u5217\u8868\u89c6\u56fe\u4e2d\u9ed8\u8ba4\u663e\u793a\u7684\u5217\u6e05\u5355\uff0c\u7528\u9017\u53f7\u5206\u9694\u3002\n \u4f60\u53ef\u4ee5\u5728\u7ba1\u9053\u7b26<code>|</code>\u540e\u9762\u7528\u50cf\u7d20\u6216\u767e\u5206\u6bd4\u6307\u5b9a\u5bbd\u5ea6\u3002</td></tr><tr><td><code>map</code> <code class="data-type">Object</code></td><td>\u5c06\u57df\u6620\u5c04\u5230\u7279\u5b9a<strong>\u5217\u8868</strong>\u8def\u5f84\u4e0a\u7684\u5bf9\u8c61\u3002\u5982\u679c\u6dfb\u52a0\u4e86\u5e26\u90a3\u4e2a\u952e\u7684\u57df\uff0c\u5219\u6bcf\u4e2a\u8def\u5f84\u90fd\u9ed8\u8ba4\u4e3a\u5b83\u7684\u952e\u3002\u6620\u5c04\u8def\u5f84\u5305\u62ec<ul class="options"><li><code>name</code> - \u5305\u542b\u6761\u76ee\u540d\u79f0\u7684\u57df\uff0c\u663e\u793a\u5728\u7ba1\u7406\u754c\u9762\u4e2d</li></ul></td></tr><tr><td><code>autokey</code> <code class="data-type">Object</code></td><td>\u5728\u5217\u8868\u4e0a\u6dfb\u52a0\u4e00\u4e2a\u63d2\u4ef6\uff0c\u6587\u6863\u4fdd\u5b58\u65f6\u81ea\u52a8\u57fa\u4e8e\u53e6\u4e00\u4e2a\u57df\u6216\u8def\u5f84\u4e3a\u5b83\u751f\u6210\u4e00\u4e2a\u952e\u3002\u8fd9\u4e2a\u53c2\u6570\u7684\u503c\u5e94\u8be5\u662f\u5e26\u6709\u5982\u4e0b\u952e\u7684\u5bf9\u8c61\uff1a<ul class="options"><li><code>from</code> <code class="data-type">String</code> - \u7528\u4e8e\u751f\u6210\u952e\u503c\u7684\u57df\u6216\u8def\u5f84\uff0c\u53ef\u4ee5\u662f\u7528\u7a7a\u683c\u5206\u5f00\u7684\u57df\u6e05\u5355</li><li><code>path</code> <code class="data-type">String</code> - \u5b58\u50a8\u952e\u7684\u8def\u5f84</li><li><code>unique</code> <code class="data-type">Boolean</code> - \u952e\u662f\u5426\u5e94\u8be5\u6709\u552f\u4e00\u6027</li><li><code>fixed</code> <code class="data-type">Boolean</code> - \u5982\u679c\u952e\u5b58\u5728\u5e76\u4e14\u975e\u7a7a\uff0c\u5e94\u8be5\u4fdd\u7559\u3002\u9ed8\u8ba4\u4e3a<code class="data-type">false</code>\u3002</li></ul><em>\u8def\u5f84Autokey\u662f\u81ea\u52a8\u7d22\u5f15\u7684\uff1b\u4f60\u53ef\u80fd\u8fd8\u60f3\u628a\u5b83\u653e\u5728\u590d\u5408\u7d22\u5f15\u4e2d\u3002</em></td></tr><tr><td><code>track</code> <code class="data-type">Boolean or Object</code></td><td> <p>\u5728\u5217\u8868\u4e0a\u6dfb\u52a0\u4e00\u4e2a\u63d2\u4ef6\uff0c\u8ffd\u8e2a\u8c01\u5728\u4ec0\u4e48\u65f6\u5019\uff08\u6bd4\u5982\u54ea\u4e2aKeystone\u7528\u6237\uff09\u521b\u5efa\u548c\u6700\u540e\u4fee\u6539\u4e86\u4e00\u4e2a\u6761\u76ee\u3002</p><p>\u8bbe\u4e3a<code class="data-type">true</code>\u65f6\uff0c\u6240\u6709\u8ffd\u8e2a\u57df\u90fd\u662f\u7528\u5b83\u4eec\u7684\u9ed8\u8ba4\u540d\u79f0\u542f\u7528\u7684\u3002 </p><p>\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u6027\u5730\u542f\u7528\u5404\u4e2a\u57df\uff0c\u5e76\u4e14\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5c06<code>track</code>\u8bbe\u4e3a\u4e00\u4e2a\u5e26\u6709\u4e0b\u9762\u4efb\u4e00\u6216\u5168\u90e8\u57df\u7684<code class="data-type">object</code>\u6765\u6307\u5b9a\u4e00\u4e2a\u5b9a\u5236\u7684\u57df\u540d\uff1a</p><ul class="options"><li><code>createdAt</code> <code class="data-type">Boolean/String</code> - \u8bbe\u4e3a<code class="data-type">true</code>\u65f6\uff0c\u8ffd\u8e2a\u6761\u76ee\u4f55\u65f6\u521b\u5efa(\u4f7f\u7528\u9ed8\u8ba4\u7684\u57df\u540d<em>createdAt</em>)\u3002\u8981\u4f7f\u7528\u5b9a\u5236\u7684\u57df\u540d\uff0c\u7528\u60f3\u8981\u7684\u540d\u79f0\u8bbe\u7f6e<code class="data-type">String</code>\u3002\u9ed8\u8ba4\u4e3a<code class="data-type">false</code>\u3002</li><li><code>createdBy</code> <code class="data-type">Boolean/String</code> -\u8bbe\u4e3a<code class="data-type">true</code>\u65f6\uff0c\u8ffd\u8e2a\u54ea\u4e2a\u7528\u6237\u521b\u5efa\u4e86\u6761\u76ee(\u4f7f\u7528\u9ed8\u8ba4\u7684\u57df\u540d<em>createdBy</em>)\u3002\u8981\u4f7f\u7528\u5b9a\u5236\u7684\u57df\u540d\uff0c\u7528\u60f3\u8981\u7684\u540d\u79f0\u8bbe\u7f6e<code class="data-type">String</code>\u3002\u9ed8\u8ba4\u4e3a<code class="data-type">false</code>\u3002</li><li><code>updatedAt</code> <code class="data-type">Boolean/String</code> - \u8bbe\u4e3a<code class="data-type">true</code>\u65f6\uff0c\u8ffd\u8e2a\u6761\u76ee\u7684\u6700\u540e\u66f4\u65b0\u65f6\u95f4(\u4f7f\u7528\u9ed8\u8ba4\u7684\u57df\u540d<em>updatedAt</em>)\u3002\u8981\u4f7f\u7528\u5b9a\u5236\u7684\u57df\u540d\uff0c\u7528\u60f3\u8981\u7684\u540d\u79f0\u8bbe\u7f6e<code class="data-type">String</code>\u3002\u9ed8\u8ba4\u4e3a<code class="data-type">false</code>\u3002</li><li><code>updatedBy</code> <code class="data-type">Boolean/String</code> - \u8bbe\u4e3a<code class="data-type">true</code>\u65f6\uff0c\u8ffd\u8e2a\u662f\u54ea\u4e2a\u7528\u6237\u6700\u540e\u66f4\u65b0\u4e86\u6761\u76ee(\u4f7f\u7528\u9ed8\u8ba4\u7684\u57df\u540d<em>updatedBy</em>)\u3002\u8981\u4f7f\u7528\u5b9a\u5236\u7684\u57df\u540d\uff0c\u7528\u60f3\u8981\u7684\u540d\u79f0\u8bbe\u7f6e<code class="data-type">String</code>\u3002\u9ed8\u8ba4\u4e3a<code class="data-type">false</code>\u3002</li></ul><p class="note"><code>createdBy</code>\u548c<code>updatedBy</code>\u57df\u53ea\u6709\u901a\u8fc7Keystone\u7ba1\u7406\u754c\u9762\u6dfb\u52a0/\u4fee\u6539\u6761\u76ee\u65f6\u624d\u80fd\u81ea\u52a8\u66f4\u65b0\u3002\u7136\u800c\uff0c\u5982\u679c\u4f60\u60f3\u5728\u81ea\u5df1\u7684\u7a0b\u5e8f\u5185\u6dfb\u52a0/\u4fee\u6539\u6761\u76ee\uff0c\u5219\u5fc5\u987b\u5728\u4fdd\u5b58\u6761\u76ee\u4e4b\u524d\u624b\u5de5\u5c06\u6761\u76ee\u7684<code>._req_user</code>\u5c5e\u6027\u8bbe\u4e3a\u5f53\u524d\u767b\u5f55\u7684\u7528\u6237(<code>req.user</code>)\uff0c\u5982\u4e0b\u4f8b\u6240\u793a\u3002</p><pre><code class="language-javascript">var item = new List.model();\nitem.set({ field1: \'value1\', field2: \'value2\' });\nitem._req_user = req.user;\nitem.save();</code></pre></td></tr><tr><td><code>noedit</code> <code class="data-type">Boolean</code></td><td>\u7981\u6b62\u5728Keystone\u7ba1\u7406\u754c\u9762\u4e2d\u7f16\u8f91\u5217\u8868\u4e2d\u7684\u6761\u76ee\u3002</td></tr><tr><td><code>nocreate</code> <code class="data-type">Boolean</code></td><td>\u7981\u6b62\u5728Keystone\u7ba1\u7406\u754c\u9762\u4e2d\u521b\u5efa\u5217\u8868\u7684\u65b0\u6761\u76ee\u3002</td></tr><tr><td><code>nodelete</code> <code class="data-type">Boolean</code></td><td>\u7981\u6b62\u5728Keystone\u7ba1\u7406\u754c\u9762\u4e2d\u5220\u9664\u5217\u8868\u4e2d\u7684\u6761\u76ee\u3002</td></tr><tr><td><code>hidden</code> <code class="data-type">Boolean</code></td><td>\u5728Keystone\u7ba1\u7406\u754c\u9762\u4e2d\u9690\u85cf\u8fd9\u4e2a\u5217\u8868\u3002</td></tr></table><p class="note">\u5982\u679c\u4f60\u60f3\u77e5\u9053\u5982\u4f55\u63a7\u5236\u88ab\u5206\u7c7b\u5217\u8868\u5728\u7ba1\u7406\u754c\u9762\u4e2d\u7684\u5bfc\u822a\u533a\u57df\uff0c\u8bf7\u67e5\u770b<a href="/zh/docs/configuration/#options-project">KeystoneJS\u914d\u7f6e</a>\u6587\u6863\u4e2d\u7684<code>nav</code>\u53c2\u6570\u3002</p><h4>\u4e0b\u94bb\u793a\u4f8b</h4><p>\u4e0b\u94bb\u53c2\u6570\u662f\u63d0\u9ad8\u7ba1\u7406\u754c\u9762\u53ef\u7528\u6027\u7684\u597d\u529e\u6cd5\uff0c\u4e3a\u7528\u6237\u5f53\u524d\u6b63\u5728\u7f16\u8f91\u7684\u6761\u76ee\u63d0\u4f9b\u4e0a\u4e0b\u6587\u3002</p><p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e0b\u94bb\u53ea\u4f1a\u663e\u793a\u8be5\u6761\u76ee\u6240\u5c5e\u7684\u5217\u8868\u3002</p><p>\u7136\u800c\u4f60\u53ef\u4ee5\u5c06\u5b83\u8bbe\u4e3a\u6a21\u5f0f\u4e2d\u7684<code>Relationship</code>\u57df\uff0c\u5b83\u5c31\u4f1a\u663e\u793a\u5f53\u524d\u5b58\u50a8\u5728\u90a3\u4e2a\u5173\u7cfb\u57df\u4e2d\u7684\u6761\u76ee\u3002</p><p>\u5982\u679c\u6709\u51e0\u4e2a\u8981\u5728\u4e0b\u94bb\u6e05\u5355\u4e2d\u663e\u793a\u7684\u76f8\u5173\u5173\u7cfb\uff0c\u53ef\u4ee5\u7528\u7a7a\u683c\u628a\u5b83\u4eec\u5206\u5f00\u3002</p><div class="code-header"><h4>\u4f8b\u5b50\uff1a\u5728\u5e16\u5b50\u7684\u4e0b\u94bb\u4e2d\u5305\u542b\u4f5c\u8005</h4></div><pre><code class="language-javascript">var Post = new keystone.List(\'Post\', {\n    autokey: { path: \'slug\', from: \'title\', unique: true },\n    map: { name: \'title\' },\n    defaultSort: \'-createdAt\',\n    drilldown: \'author\' // \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0cauthor\u88ab\u5b9a\u4e49\u4e3a\u4e00\u4e2aRelationship\u57df\n});</code></pre><a name="lists-plugins"></a><h3>\u6a21\u5f0f\u63d2\u4ef6</h3><p>\u4f60\u53ef\u4ee5\u7528<code>schema</code>\u6307\u5b9a<strong>\u5217\u8868</strong>\u7684<a href="http://mongoosejs.com/docs/guide.html" target="_blank"><strong>\u865a\u62df\u57df</strong>\u3001<strong>\u65b9\u6cd5</strong>\u3001<strong>\u9759\u6001\u57df</strong></a>\u548c<a href="http://mongoosejs.com/docs/middleware.html" target="_blank"><strong>\u524d\u7f6e</strong>\u548c<strong>\u540e\u7f6e</strong>\u94a9\u5b50</a>\u3002\u4f60\u4e5f\u53ef\u4ee5\u7528<a href="http://plugins.mongoosejs.com" target="_blank">\u63d2\u4ef6\u7f51\u7ad9</a>\u4e0a\u7684<a href="http://mongoosejs.com/docs/plugins.html" target="_blank">mongoose\u63d2\u4ef6</a>\u3002</p><p>\u6bd4\u5982\u8bf4\uff0c\u5728\u4e0a\u9762\u7684<strong>Post</strong>\u5217\u8868\u4e2d\uff0c\u6211\u4eec\u53ef\u80fd\u60f3\u5728<code>state</code>\u88ab\u6539\u6210<code>published</code>\u540e\u81ea\u52a8\u8bbe\u5b9a<code>publishedAt</code>\u7684\u503c(\u4f46\u4ec5\u5728\u5b83\u8fd8\u6ca1\u88ab\u8bbe\u5b9a\u8fc7\u65f6)\u3002</p><p>\u6211\u4eec\u53ef\u80fd\u8fd8\u60f3\u6dfb\u52a0\u4e2a\u65b9\u6cd5\u7528\u6765\u68c0\u67e5Post\u662f\u5426\u53d1\u5e03\u4e86\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u68c0\u67e5<code>state</code>\u57df\u7684\u503c\u3002</p><p>\u5728\u8c03\u7528<code>Post.register()</code>\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u52a0\u4e0a\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\uff1a</p><pre><code class="language-javascript">Post.schema.methods.isPublished = function() {\n    return this.state == \'published\';\n}\n \nPost.schema.pre(\'save\', function(next) {\n    if (this.isModified(\'state\') &amp;&amp; this.isPublished() &amp;&amp; !this.publishedAt) {\n        this.publishedAt = new Date();\n    }\n    next();\n});</code></pre><a name="lists-querying"></a><h3>\u67e5\u8be2\u6570\u636e</h3><p>\u8981\u67e5\u8be2\u6570\u636e\uff0c\u4f60\u53ef\u4ee5\u5728<code>list.model</code>\u4e0a\u4f7f\u7528\u4efb\u4f55<a href="http://mongoosejs.com/docs/queries.html" target="_blank">mongoose\u67e5\u8be2</a>\u65b9\u6cd5\u3002</p><p><strong>\u6bd4\u5982\u8bf4\uff1a</strong>\u8981\u52a0\u8f7d\u6700\u65b05\u6761\u72b6\u6001\u4e3a<code>published</code>\u7684<code>posts</code>\uff0c\u5e76\u7ec4\u88c5\u53ef\u94fe\u63a5\u7684<code>author</code>\uff0c\u6309\u53d1\u5e03\u65e5\u671f\u7684\u964d\u5e8f\u6392\u5217\uff1a</p><div class="code-header"><h4>\u52a0\u8f7dPosts</h4></div><pre><code class="language-javascript">var keystone = require(\'keystone\'),\n    Post = keystone.list(\'Post\');\n \nPost.model.find()\n    .where(\'state\', \'published\')\n    .populate(\'author\')\n    .sort(\'-publishedAt\')\n    .limit(5)\n    .exec(function(err, posts) {\n        // \u5bf9\u5e16\u5b50\u505a\u4e9b\u5904\u7406\n    });</code></pre><p><strong>Promises</strong></p><p>\u8fd8\u6709\u4e00\u79cd\u5904\u7406mongoose\u67e5\u8be2\u4e2d\u7684\u4e8b\u4ef6\u7684\u65b9\u6cd5\u3002\u9664\u4e86\u4f20\u7ed9<a href="http://mongoosejs.com/docs/api.html#query_Query-exec" target="_blank">exec</a>\u65b9\u6cd5\u4e00\u4e2a<a href="http://javascriptissexy.com/understand-javascript-callback-functions-and-use-them/" target="_blank">\u56de\u8c03\u51fd\u6570</a>\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u7528\u5b83\u7684\u8fd4\u56de\u7ed3\u679c\uff1a<a href="http://www.html5rocks.com/en/tutorials/es6/promises/" target="_blank">Promise</a>\u3002\u5bf9\u4e8e\u5e26\u6709\u9519\u8bef\u4f20\u64ad\u7684\u6574\u6d01\u4e8b\u4ef6\u94fe\uff0cPromise\u975e\u5e38\u5b9e\u7528\u3002</p><p><strong>\u6bd4\u5982\u8bf4\uff1a</strong>\u52a0\u8f7d100\u6761 <code>posts</code>\uff0c\u7136\u540e\u5f02\u6b65\u505a\u4e9b\u5904\u7406\uff0c\u7136\u540e\u518d\u5bf9\u5176\u7ed3\u679c\u505a\u4e9b\u5904\u7406\uff1a</p><div class="code-header"><h4>\u52a0\u8f7dPosts\uff0c\u5f02\u6b65\u505a\u4e9b\u5904\u7406\uff0c\u7136\u540e\u518d\u505a\u4e9b\u5904\u7406\uff1a</h4></div><pre><code class="language-javascript">var keystone = require(\'keystone\'),\n    Post = keystone.list(\'Post\');\n \nPost.model.find()\n    .limit(100)\n    .exec()\n    .then(function (posts) { //\u7b2c\u4e00\u4e2apromise\u5f97\u5230\u6ee1\u8db3\n        //\u8fd4\u56de\u53e6\u4e00\u4e2a\u5f02\u6b65promise\n    }, function (err) { //\u7b2c\u4e00\u4e2apromise\u88ab\u9a73\u56de\n        throw err;\n    }).then(function (result) { //\u7b2c\u4e8c\u4e2apromise\u5f97\u5230\u6ee1\u8db3\n        //\u5bf9\u6700\u7ec8\u7ed3\u679c\u505a\u4e9b\u5904\u7406\n    }, function (err) { //\u9664\u4e86\u67d0\u4e9b\u95ee\u9898\n        //\u6355\u83b7\u9519\u8bef\uff0c\u5b83\u53ef\u80fd\u662f\u94fe\u4e2d\u7684\u4efb\u4f55promise\u629b\u51fa\u7684\n        console.log(err);\n    });</code></pre><a name="lists-paginate"></a><h3>\u5206\u9875\u67e5\u8be2</h3><p>\u4f60\u53ef\u4ee5\u7528<code>List.paginate()</code>\u8fdb\u884c\u5206\u9875\u67e5\u8be2\uff0c\u5b83\u4f1a\u50cf<code>List.model.find()</code>\u4e00\u6837\u8fd4\u56de\u4e00\u4e2a\u67e5\u8be2\u5bf9\u8c61\uff0c\u8be5\u65b9\u6cd5\u652f\u6301\u4e0b\u9762\u8fd9\u4e9b\u53c2\u6570\uff1a</p><ul><li><code>page</code> - \u4ece\u54ea\u4e00\u9875\u5f00\u59cb</li><li><code>perPage</code> - \u6bcf\u9875\u7684\u8bb0\u5f55\u6761\u6570</li><li><code>maxPages</code> - \u53ef\u9009\u53c2\u6570\uff0c\u5728\u8ba1\u7b97\u9875\u9762\u65f6\u4ece\u5f00\u59cb/\u4e2d\u95f4/\u672b\u5c3e\u5904\u7701\u7565\u9875\u6570\uff08\u5982\u679c\u4f60\u6709\u5f88\u591a\u9875\uff0c\u5e76\u4e14\u4e0d\u60f3\u8ba9\u5b83\u4eec\u663e\u793a\u65f6\u5360\u597d\u51e0\u884c\uff0c\u5c31\u53ef\u4ee5\u7528\u8fd9\u4e2a\u53c2\u6570\uff09\u3002</li></ul><p><strong>\u6bd4\u5982\u8bf4\uff1a</strong> \u8981\u4ee5<code>maxPages</code> 10 \u548c<code>perPage</code> 10\u52a0\u8f7d<code>posts</code>\uff0c\u5e76\u4e14\u8981\u6c42\u5176\u72b6\u6001\u4e3a<code>published</code>\uff0c\u540c\u65f6\u7ec4\u88c5\u51fa\u5173\u8054\u7684<code>author</code>\u548c<code>categories</code>\uff0c\u6309\u53d1\u5e03\u65f6\u95f4\u7684\u9006\u5e8f\u6392\u5217\uff1a</p><div class="code-header"><h4>\u5206\u9875\u52a0\u8f7dPost</h4></div><pre><code class="language-javascript">var keystone = require(\'keystone\'),\n    Post = keystone.list(\'Post\');\n \n Post.paginate({\n		page: req.query.page || 1,\n		perPage: 10,\n		maxPages: 10\n	})\n	.where(\'state\', \'published\')\n	.sort(\'-publishedDate\')\n	.populate(\'author categories\')\n	.exec(function(err, results) {\n		locals.data.posts = results;\n		next(err);\n	});</code></pre><p>\u5f53\u4f60\u5728\u5206\u9875\u67e5\u8be2\u4e0a\u8c03\u7528<code>exec</code>\u65f6\uff0c\u9664\u4e86\u67e5\u8be2\u7ed3\u679c\uff0c\u5b83\u8fd8\u4f1a\u8fd4\u56de\u5f88\u591a\u5143\u6570\u636e\uff1a</p><ul><li><code>total</code>: \u5339\u914d\u7ed3\u679c\u7684\u603b\u6570(\u4e0d\u4ec5\u4ec5\u662f\u8fd9\u4e00\u9875\u7684)</li><li><code>results</code>: \u8fd9\u4e00\u9875\u7684\u7ed3\u679c\u96c6\u6570\u7ec4</li><li><code>currentPage</code>: \u5f53\u524d\u9875\u7684\u9875\u7801</li><li><code>totalPages</code>: \u603b\u9875\u6570</li><li><code>pages</code>: \u8981\u663e\u793a\u7684\u9875\u7801\u7684\u6570\u7ec4</li><li><code>previous</code>: \u524d\u4e00\u9875\u7684\u9875\u7801\uff0c\u5982\u679c\u5f53\u524d\u9875\u662f\u7b2c\u4e00\u9875\u5219\u4e3afalse</li><li><code>next</code>: \u4e0b\u4e00\u9875\u7684\u9875\u7801\uff0c\u5982\u679c\u5f53\u524d\u9875\u662f\u6700\u540e\u4e00\u9875\u5219\u4e3afalse</li><li><code>first</code>: \u5305\u542b\u7b2c\u4e00\u6761\u7ed3\u679c\u7684\u9875\u7801</li><li><code>last</code>: \u5305\u542b\u6700\u540e\u4e00\u6761\u7ed3\u679c\u7684\u9875\u7801</li></ul><a name="lists-creating"></a><h3>\u521b\u5efa\u6761\u76ee</h3><p>\u8981\u521b\u5efa\u65b0\u6761\u76ee\uff0c\u8fd8\u662f\u7528<a href="http://mongoosejs.com/docs/models.html" target"_blank">mongoose\u6a21\u578b</a>\uff1a</p><div class="code-header"><h4>\u521b\u5efaPost</h4></div><pre><code class="language-javascript">var keystone = require(\'keystone\'),\n    Post = keystone.list(\'Post\');\n \nvar newPost = new Post.model({\n    title: \'New Post\'\n});\n \nif (shouldBePublished) {\n    newPost.state = \'published\';\n}\n \nnewPost.save(function(err) {\n    // post\u5df2\u4fdd\u5b58	\n});</code></pre><div class="contextual-note"><h4>\u81ea\u52a8\u952e</h4><p>\u56e0\u4e3a\u6211\u4eec\u5728<code>Post</code>\u5217\u8868\u4e2d\u8bbe\u5b9a\u4e86<code>autokey</code>\u53c2\u6570\uff0c\u5b83\u4f1a\u5728post\u88ab\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u4e2d\u4e4b\u524d\u57fa\u4e8e<code>title</code>\u751f\u6210\u4e00\u4e2a\u552f\u4e00\u7684\u952e\u3002</p><pre>newPost.slug == \'new-post\';</pre></div><a name="lists-deleting"></a><h3>\u5220\u9664\u6761\u76ee</h3><p>\u8981\u5220\u9664\u6761\u76ee\uff0c\u9996\u5148\u52a0\u8f7d\u90a3\u9879\u6570\u636e\uff0c\u7136\u540e\u7528\u5b83\u7684<code>remove</code>\u65b9\u6cd5\uff1a</p><div class="code-header"><h4>\u5220\u9664\u4e00\u4e2aPost</h4></div><pre><code class="language-javascript">var keystone = require(\'keystone\'),\n    Post = keystone.list(\'Post\');\n \nPost.model.findById(postId)\n    .remove(function(err) {\n        // post\u5df2\u5220\u9664\n    });</code></pre><!-- TODO: Documentation for Schema features (virtuals, methods, statics and hooks)--><!-- TODO: Documentation for Update Handler--><a name="headings"></a><h2>\u6807\u9898</h2><p>\u5b9a\u4e49\u6807\u9898\u4ee5\u533a\u5206\u6587\u6863\u6d41\u7a0b\u3002\u6807\u9898\u53ef\u4ee5\u5b9a\u4e49\u4e3a <code>String</code> \u6216\u8005 <code>Object</code> \u4ee5\u53ca <a href="#dependsOn">\u4f9d\u8d56\u4e8e</a> \u5176\u4ed6\u57df\u7684\u503c\u3002</p><pre><code class="language-javascript">Person.add(\n   \'User\', \n   { name: { type: Types.Name, required: true, index: true, initial: true } }, \n   \'Permissions\', \n   { isAdmin: { type: Boolean, label: \'Can access Keystone\', index: true } },\n   // header object\n   { heading: \'Activities\' }, \n   { place: { type: Types.Select, options: [\'GT\', \'UGA\'] } },\n   // header with dependsOn\n   { heading: "GT Activities", dependsOn: { place: \'GT\' } },\n   { type: { type: Types.Select, options: [\'ZC\', \'MP\'], dependsOn: { place: \'GT\'} }\n);</code></pre><div class="options"><h5>\u53c2\u6570</h5><p><code>heading</code> <code class="data-type">String</code> -  \u6807\u9898\u663e\u793a\u7684\u6587\u5b57</p><p><code>dependsOn</code> <code class="data-type">Object</code> - \u6807\u9898\u53ea\u4f1a\u5728\u5f53\u524d\u5bf9\u8c61\u6307\u5b9a\u8def\u5f84\u548c\u6570\u636e\u9879\u5339\u914d\u65f6\u5019\u663e\u793a\u3002 <a href="#dependsOn">dependsOn</a> </p></div><a name="fields"></a><h2>\u57df</h2><p>\u5728\u5411<strong>\u5217\u8868</strong>\u4e2d\u6dfb\u52a0<strong>\u57df</strong>\u65f6\uff0c\u4f60\u65e2\u53ef\u4ee5\u6307\u5b9a\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u7528Keystone\u57df\u7c7b\u578b\u3002</p><a name="fields-overview"></a><h3>\u6982\u8ff0</h3><p>\u4f60\u53ef\u4ee5\u7528<strong>Keystone\u57df</strong>\u8f7b\u677e\u5730\u5411\u7a0b\u5e8f\u7684\u6a21\u578b\u4e2d\u6dfb\u52a0\u4e30\u5bcc\u7684\u3001\u529f\u80fd\u5316\u7684\u57df\u3002\u5b83\u4eec\u4e0d\u4ec5\u53ef\u4ee5\u63cf\u8ff0\u6570\u636e\u7684<em>\u7ed3\u6784</em>\uff0c\u8fd8\u53ef\u4ee5\u63cf\u8ff0\u6570\u636e\u7684<em>\u610f\u56fe</em>\u3002\u5b83\u4eec\u63d0\u4f9b\u4e86\uff1a</p><ul><li>Keystone\u7ba1\u7406\u754c\u9762\u4e2d\u7684\u4e30\u5bcc\u63a7\u4ef6</li><li>\u590d\u6742\u7684\u6570\u636e\u7c7b\u578b\uff1b\u6bd4\u5982\u5b58\u50a8\u51e0\u4e2a\u5b57\u7b26\u4e32\u548cGeoJSON\u7ecf\u7eac\u5ea6\u7684<code>location</code>\u57df</li><li>\u683c\u5f0f\u5316\u548c\u9a8c\u8bc1\u65b9\u6cd5</li><li>\u989d\u5916\u7684\u865a\u62df\u5c5e\u6027\uff1b\u6bd4\u5982<code>name</code>\u63d0\u4f9b\u4e86\u4e00\u4e2a\u865a\u62df\u7684<code>name.full</code>\uff0c\u5c06\u5b9e\u9645\u5b58\u50a8\u7684<code>name.first</code>\u548c<code>name.last</code>\u5408\u5e76\u8d77\u6765\u3002</li><li>Underscore\u65b9\u6cd5\uff1b\u6bd4\u5982<code>password</code>\u57df\u63d0\u4f9b\u4e86\u4e00\u4e2a<code>password.compare</code>\u65b9\u6cd5\uff0c \u7528\u4e8e\u6bd4\u8f83\u52a0\u5bc6\u7684\u54c8\u5e0c\u503c</li><li>\u57df\u4e4b\u95f4\u5f7c\u6b64\u5173\u7cfb\u5982\u4f55\u7684\u5143\u6570\u636e\uff1b\u6bd4\u5982\u54ea\u4e2a\u57df\u4f9d\u8d56\u4e8e\u5176\u5b83\u57df\u4e2d\u7684\u67d0\u4e2a\u503c</li></ul><p>\u57fa\u672c\u6570\u636e\u7c7b\u578b\u8ddfKeystone\u7684\u57df\u7c7b\u578b\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\uff1a</p><table style="width:200px" class="table"><col/><col/><thead><th>\u6570\u636e\u7c7b\u578b</th><th>\u57df\u7c7b\u578b</th></thead><tr><td><code class="data-type">String</code></td><td><code class="data-type">Text</code></td></tr><tr><td><code class="data-type">Number</code></td><td><code class="data-type">Number</code></td></tr><tr><td><code class="data-type">Date</code></td><td><code class="data-type">DateTime</code></td></tr><tr><td><code class="data-type">Boolean</code></td><td><code class="data-type">Boolean</code></td></tr></table><a name="fields-options"></a><h3>\u57df\u53c2\u6570</h3><p>\u6240\u6709\u57df\u7c7b\u578b\u90fd\u652f\u6301\u51e0\u4e2a\u901a\u7528\u7684\u53c2\u6570\uff0c\u53ef\u4ee5\u6307\u5b9a\u6570\u636e\u5e93\u8bbe\u7f6e(\u6bd4\u5982<code>index</code>\u548c<code>default</code>)\uff0c\u6216\u8005\u4e3aKeystone\u7684\u7ba1\u7406\u754c\u9762\u63d0\u4f9b\u4fe1\u606f(\u6bd4\u5982 <code>label</code>)\u3002</p><p class="note">\u57df\u5728\u5bf9\u8c61\u5185\u90e8\u53ef\u4ee5\u5d4c\u5165\uff0c\u5c31\u50cf\u5728mongoose\u6a21\u5f0f\u4e2d\u4e00\u6837\u3002</p><p class="note">\u6240\u6709\u7684<a href="http://mongoosejs.com/docs/schematypes.html" target="_blank">mongoose\u6a21\u5f0f\u7c7b\u578b\u53c2\u6570</a> \u90fd\u662f\u4f20\u7ed9<a href="http://mongoosejs.com/docs/guide.html" target="_blank">mongoose\u6a21\u5f0f</a>\u7684\uff0c\u6240\u4ee5\u4f60\u4e5f\u53ef\u4ee5\u7528mongoose\u652f\u6301\u7684\u4efb\u4f55\u53c2\u6570\u3002</p><p>\u5e38\u7528\u7684\u57df\u53c2\u6570\u6709\uff1a</p><table class="table"><col width="210"/><col/><tr><td><code>label</code> <code class="data-type">String</code></td><td>\u6bcf\u4e2a\u57df\u7684\u6807\u7b7e\u90fd\u662f\u7531\u57df\u8def\u5f84\u751f\u6210\u7684\uff1b\u8bbe\u7f6e\u8fd9\u4e2a\u53c2\u6570\u4f1a\u8986\u76d6\u9ed8\u8ba4\u503c\u3002</td></tr><tr><td><code>required</code> <code class="data-type">Boolean</code></td><td>\u5728\u6761\u76ee\u4fdd\u5b58\u524d\u9a8c\u8bc1\u8fd9\u4e2a\u57df\u662f\u6709\u503c\u7684(<em>\u8fd8\u4f1a\u4f20\u7ed9mongoose\u5e76\u5f3a\u5236\u4f7f\u7528\u6570\u636e\u5e93\u7d22\u5f15</em>)\u3002</td></tr><tr><td><code>initial</code> <code class="data-type">Boolean</code></td><td>\u8ba9\u8fd9\u4e2a\u57df\u51fa\u73b0\u5728\u7ba1\u7406\u754c\u9762\u4e2d\u7684<strong>\u521b\u5efa\u6761\u76ee</strong>\u8868\u5355\u4e2d\u3002</td></tr><tr><td><code>noedit</code> <code class="data-type">Boolean</code></td><td>\u5728\u7ba1\u7406\u754c\u9762\u4e2d\u5c06\u8fd9\u4e2a\u57df\u6e32\u67d3\u4e3a\u53ea\u8bfb\u57df\u3002</td></tr><tr><td><code>note</code> <code class="data-type">String</code></td><td>\u5728\u7ba1\u7406\u754c\u9762\u4e2d\u8ddf\u7740\u57df\u663e\u793a\u3002</td></tr><tr><td><code>hidden</code> <code class="data-type">Boolean</code></td><td>\u5982\u679c\u8bbe\u4e3a<code class="default-value">true</code>\uff0c\u5219\u8be5\u57df\u5728\u7ba1\u7406\u754c\u9762\u4e2d\u4e00\u76f4\u662f\u9690\u85cf\u57df\u3002</td></tr></table><h3>\u6761\u4ef6\u57df</h3><p>\u4e3a\u4e86\u63d0\u9ad8\u7ba1\u7406\u754c\u9762\u7684\u53ef\u7528\u6027\uff0c\u53ef\u4ee5\u5728\u67d0\u4e9b\u57df\u6ca1\u6709\u503c\u65f6\u9690\u85cf\u5b83\u4eec\uff0c\u6216\u8005\u6839\u636e\u5176\u5b83\u57df\u7684\u53d6\u503c\u9690\u85cf\u3002</p><table class="table"><col width="210"/><col/><tr><td><code>collapse</code> <code class="data-type">Boolean</code></td><td>\u8be5\u57df\u6ca1\u6709\u503c\u65f6\u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e00\u4e2a<strong>+ <u>\u6dfb\u52a0</u></strong>\u94fe\u63a5\u3002\u5f53<code>noedit</code>\u4e5f\u88ab\u8bbe\u4e3a<code class="default-value">true</code>\u65f6\uff0c\u8be5\u57df\u6ca1\u503c\u65f6\u5219\u5b8c\u5168\u9690\u85cf\u3002</td></tr><tr><td><code>dependsOn</code> <code class="data-type">Object</code></td><td><p>\u53ea\u6709\u5bf9\u8c61\u4e2d\u6307\u5b9a\u7684\u8def\u5f84\u8ddf\u6761\u76ee\u7684\u5f53\u524d\u6570\u636e\u5339\u914d\u65f6\u624d\u4f1a\u663e\u793a<p>\u4f60\u53ef\u4ee5\u5728\u6bcf\u4e2a\u8def\u5f84\u4e0a\u7528\u6570\u7ec4\u5bf9\u51c6\u591a\u4e2a\u503c\u3002</p><div class="code-header"><h4>\u793a\u4f8b</h4></div><pre><code class="language-javascript">first: { type: String },\n// \u5982\u679cfirst === "value1", "1" \u6216 "2" \u65f6\u5c06\u4f1a\u663e\u793a\nsecond: { type: String, dependsOn: { first: [\'value1\', \'1\', 2] } },\n// \u5982\u679c first == "value1" \u65f6\u4f1a\u663e\u793a\nthird: { type: String, dependsOn: { first: \'value1\' } }</code></pre></p></td></tr></table><h3>\u751f\u6210\u7684\u503c\u53ca\u89c2\u6d4b\u57df</h3><p>Keystone\u7684\u57df\u53ef\u4ee5\u7528\u7b80\u5355\u7684\u8bed\u6cd5\u914d\u7f6e\u52a8\u6001\u66f4\u65b0\u7684\u57df\u3002\u4f60\u53ef\u4ee5\u5c06\u4e00\u4e2a\u57df\u8bbe\u7f6e\u4e3a\u5728\u4e0b\u9762\u8fd9\u4e9b\u60c5\u51b5\u4e0b\u66f4\u65b0\u5b83\u7684\u503c\uff1a</p><ul><li>\u6761\u76ee\u4fdd\u5b58\u65f6</li><li>\u4efb\u4f55\u5176\u5b83\u57df\u7684\u503c\u53d1\u751f\u53d8\u5316\u65f6</li><li>\u4efb\u4f55\u5176\u5b83\u57df\u7684\u503c\u53d8\u6210\u7279\u5b9a\u503c\u65f6</li></ul><p>\u8981\u4f7f\u7528\u89c2\u6d4b\u529f\u80fd\uff0c\u8bbe\u7f6e\u4e0b\u9762\u4e24\u4e2a\u53c2\u6570\uff1a</p><table class="table"><col width="210"/><col/><tr><td><code>watch</code> <code class="data-type">Boolean</code>\u6216<code class="data-type">String</code> \u6216<code class="data-type">Object</code>\u6216<code class="data-type">Function</code></td><td><p>\u4e3a<code class="default-value">true</code>\u65f6\uff0c\u6bcf\u6b21\u4fdd\u5b58\u6761\u76ee\u90fd\u4f1a\u91cd\u65b0\u8ba1\u7b97\u8fd9\u4e2a\u57df\u7684\u503c\u3002 <br></p><p>\u63d0\u4f9b\u4e00\u4e2a\u7528\u7a7a\u683c\u5206\u9694\u7684\u8def\u5f84\u6e05\u5355\uff0c\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u53d1\u751f\u53d8\u5316\u65f6\u5c31\u91cd\u65b0\u8ba1\u7b97\u8fd9\u4e2a\u57df\u7684\u503c\u3002 <br><strong>\u6bd4\u5982\uff1a</strong> <code class="default-value">\'author title state\'</code></p><p>\u63d0\u4f9b\u4e00\u4e2a\u952e/\u503c\u5bf9\u7684\u5bf9\u8c61\uff0c\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u8def\u5f84\u53d8\u6210\u6307\u5b9a\u7684\u503c\u65f6\u5c31\u91cd\u65b0\u8ba1\u7b97\u8fd9\u4e2a\u57df\u7684\u503c\u3002<br><strong>\u6bd4\u5982\uff1a</strong> <code class="default-value">{\'state\': \'published\', \'mainPost\': true}</code></p><p>\u63d0\u4f9b\u4e00\u4e2a\u53ef\u4ee5\u5728\u9700\u8981\u65f6\u8fd4\u56detrue/false\u7684\u51fd\u6570\u3002<br><strong>\u6bd4\u5982\uff1a</strong> <code class="default-value">function() { return this.author === this.editor; }</code></p></td></tr><tr><td><code>value</code> <code class="data-type">Function</code></td><td><p>\u5f53\u6240\u89c2\u6d4b\u7684\u8def\u5f84\u53d1\u751f\u53d8\u5316\u65f6\u751f\u6210\u8fd9\u4e2a\u57df\u7684\u503c\u7684\u51fd\u6570\u3002\u5fc5\u987b\u8fd4\u56de\u65b0\u7684\u503c\u3002</p><p>\u8fd9\u4e2a\u51fd\u6570\u7684<code>this</code>\u4e0a\u4e0b\u6587\u662f\u88ab\u4fdd\u5b58\u7684\u90a3\u4e2a\u6761\u76ee\u3002</p><p><strong>\u6bd4\u5982\uff1a</strong></p><pre><code class="language-javascript">function () {\n    return this.total<=this.totalreceived ? true:false;\n}</code></pre></td></tr></table><a name="fields-underscoremethods"></a><h3>Underscore\u65b9\u6cd5</h3><p>\u6709\u4e9b\u57df\u7c7b\u578b\u5305\u542b\u8f85\u52a9\u7684<strong>underscore\u65b9\u6cd5</strong>\uff0c\u5728\u6761\u76ee\u7684\u57df\u8def\u5f84\u524d\u9762\u653e\u4e00\u4e2a\u4e0b\u5212\u7ebf\u3002</p><p><strong>\u6bd4\u5982</strong>: \u50cf\u4e0b\u9762\u8fd9\u6837\u7528\u4e0a\u9762\u90a3\u4e2aPosts\u5217\u8868\u4e2d\u7684<code>createdAt</code> <code class="data-type">DateTime</code>\u57df\u7684underscore\u65b9\u6cd5<code>format</code> </p><pre><code class="language-javascript">var keystone = require(\'keystone\'),\n    Post = keystone.list(\'Post\');\n \nPost.model.findById(postId).exec(function(err, post) {\n   console.log(post._.createdAt.format(\'Do MMMM YYYY\')); // 2013\u5e748\u670825\u53f7\n});</code></pre><a name="relationships"></a><h2>\u5173\u7cfb</h2><p>Keystone\u52a0\u5f3a\u4e86MongoDB\u5728\u57df\u4e2d\u5b58\u50a8\u76f8\u5173\u6587\u6863\u7684ObjectID\u7684\u80fd\u529b (\u6216\u8005\u5728\u6570\u7ec4\u4e2d\u5f88\u591a\u7684ObjectID)\uff0c\u652f\u6301Relationship\u57df\u548c\u6a21\u578b\u4e2d\u7684\u5b9a\u4e49\u3002</p><a name="relationship-fields"></a><h3>\u5173\u7cfb\u57df</h3><h4><code class="data-type">ObjectId</code>\u6216<code class="data-type">Array</code> &mdash; \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a\u5e26\u6709\u81ea\u52a8\u63d0\u793a\u529f\u80fd\u7684\u8f93\u5165\u57df</h4><p>\u5c06\u5bf9\u53e6\u4e00\u4e2a\u6a21\u578b\u7684ObjectID\u5f15\u7528\u5b58\u5230\u4e00\u4e2aObjectID\u57df\u6216\u6570\u7ec4\u4e2d\u521b\u5efa\u4e00\u5bf9\u591a\u6216\u591a\u5bf9\u591a\u5173\u7cfb\u3002</p><p>\u7528<code>ref</code>\u53c2\u6570\u6307\u5b9a\u76f8\u5173\u6a21\u578b\u3002\u5bf9\u4e8e\u591a\u5bf9\u591a\u5173\u7cfb\u800c\u8a00\uff0c\u5c06<code>many</code>\u53c2\u6570\u8bbe\u4e3a<code class="default-value">true</code>\u3002</p><p>\u6bd4\u5982\u8bf4\uff0c\u5982\u679c\u4f60\u60f3\u5c06<strong>Post</strong>\u6a21\u578b\u94fe\u5230\u4e00\u4e2a<strong>Author</strong>\u548c\u591a\u4e2a<strong>PostCategories</strong>\u4e0a\u65f6\uff0c\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a</p><pre><code class="language-javascript">Post.add({\n    author: { type: Types.Relationship, ref: \'User\' },\n    categories: { type: Types.Relationship, ref: \'PostCategory\', many: true }\n});</code></pre><h5>\u5173\u7cfb\u8fc7\u6ee4\u5668</h5><p>\u4f60\u53ef\u4ee5\u7528<code>filters</code>\u53c2\u6570\u8fc7\u6ee4\u5173\u7cfb\u57df\u3002</p><p><code>filters</code>\u53c2\u6570\u662f\u4e00\u4e2a\u952e/\u503c\u5bf9\u5bf9\u8c61\uff0c\u5176\u4e2d\u952e\u5bf9\u5e94\u8981\u8fc7\u6ee4\u7684\u76f8\u5173\u6a21\u578b\u7684\u57df\uff0c\u5176\u4e2d\u7684\u503c\u6216\u8005\u662f\u5b57\u9762\u503c\uff0c\u6216\u8005\u662f\u5f53\u524d\u6a21\u578b\u7684\u57df\u540d\uff0c\u503c\u4f1a\u7528\u6765\u8fc7\u6ee4\u5173\u7cfb\u3002</p><p>\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c<code>author</code>\u57df\u53ea\u5141\u8bb8\u9009\u62e9<code>group</code>\u57df\u7b49\u4e8e\'admin\'\u7684<code>User</code>\u3002</p><pre><code class="language-javascript">Post.add({\n    title: { type: String, required: true },\n    category: { type: Types.Select, options: \'user, editor, admin\', default: \'user\' },\n    author: { type: Types.Relationship, ref: \'User\', filters: { group: \'admin\' } }\n});</code></pre><p>\u4f60\u4e5f\u53ef\u4ee5\u7528\u6a21\u578b\u4e2d\u5176\u5b83\u57df\u7684\u503c\u8fc7\u6ee4\u3002\u5c06\u8fc7\u6ee4\u5668\u7684\u503c\u8bbe\u4e3a\u90a3\u4e2a\u57df\u7684\u540d\u79f0\uff0c\u524d\u9762\u52a0\u4e0a\u5206\u53f7(:)\u3002</p><p>\u5728\u4e0b\u4f8b\u4e2d\uff0c<code>author</code>\u57df\u53ea\u80fd\u9009\u62e9<code>group</code>\u57df\u8ddf<code>Post</code>\u6a21\u578b\u7684<code>category</code>\u57df\u7684\u503c\u76f8\u7b49\u7684<code>User</code>\u3002</p><pre><code class="language-javascript">Post.add({\n    title: { type: String, required: true },\n    category: { type: Types.Select, options: \'user, editor, admin\', default: \'user\' },\n    author: { type: Types.Relationship, ref: \'User\', filters: { group: \':category\' } }\n});</code></pre><p>\u6700\u540e\uff0c\u4f60\u8fd8\u53ef\u4ee5\u7528\u5f53\u524d\u6a21\u578b\u7684<code>_id</code>\u57df\u8fc7\u6ee4\u3002</p><p>\u5728\u4e0b\u4f8b\u4e2d\uff0c<code>bestPost</code>\u57df\u53ea\u80fd\u9009\u62e9<code>author</code>\u57df\u7b49\u4e8e\u5f53\u524d\u6587\u6863\u7684<code>_id</code>\u7684<code>Post</code> \u3002</p><pre><code class="language-javascript">User.add({\n    name: { type: String, required: true },\n    group: { type: Types.Select, options: \'user, editor, admin\', default: \'user\' },\n    bestPost: { type: Types.Relationship, ref: \'Post\', filters: { author: \':_id\' } }\n});</code></pre><p class="note">\u4f60\u53ea\u80fd\u5728\u4e00\u5bf9\u591a\u5173\u7cfb(\u5373\u5f53<code>many</code>\u53c2\u6570\u4e0d\u4e3a<code class="default-value">true</code>\u65f6)\u4e2d\u8bbe\u7f6e\u8fc7\u6ee4\u5668\u3002</p><h5>\u5728\u67e5\u8be2\u4e2d\u7ec4\u88c5\u76f8\u5173\u6570\u636e</h5><p>\u611f\u8c22<a href="http://mongoosejs.com/docs/populate.html" target="_blank">Mongoose\u7684\u7ec4\u88c5\u529f\u80fd</a>\uff0c\u4f60\u53ef\u4ee5\u4e3a\u5173\u7cfb\u57df\u7ec4\u88c5\u76f8\u5173\u6570\u636e\u3002\u60f3\u5728\u52a0\u8f7d\u4e0a\u9762\u4f8b\u5b50\u4e2d\u7684Post\u65f6\u7ec4\u88c5author\u548ccategory\u6587\u6863\uff0c\u5e94\u8be5\u8fd9\u6837\u505a\uff1a</p><pre><code class="language-javascript">Post.model.findOne().populate(\'author categories\').exec(function(err, post) {\n    // author\u662f\u7ec4\u88c5\u5b8c\u6574\u7684User\u6587\u6863\n    console.log(post.author.name);\n});</code></pre><p class="note">\u6ce8\u610f\uff0c\u5982\u679c\u6ca1\u5b58ObjectId\uff0c\u6216\u8005\u4fdd\u5b58\u7684ObjectId\u65e0\u6548(\u6bd4\u5982\u6587\u6863\u88ab\u5220\u4e86)\uff0c\u4e0a\u4f8b\u4e2d\u7684<code>author</code>\u5c06\u53d8\u4e3a<code class="data-type">undefined</code>\u3002</p><a name="relationship-definitions"></a><h3>\u5173\u7cfb\u5b9a\u4e49</h3><p>\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5982\u679c\u4f60\u60f3\u770b\u5230\u6bcf\u4f4dAuthor\u7684Post\u6e05\u5355\u8be5\u600e\u4e48\u505a\uff1f\u56e0\u4e3a\u5173\u7cfb\u57df\u5728Post\u4e0a\uff0c\u4f60\u9700\u8981\u544a\u8bc9Author\uff08\u548cPostCategory\uff09\u6a21\u578b\u5b83\u662f\u88ab\u5f15\u7528\u7684\u3002\u8fd9\u6837\u7ba1\u7406\u754c\u9762\u5c31\u53ef\u4ee5\u4ece\u4e24\u4e2a\u65b9\u5411\u5448\u73b0\u8fd9\u4e00\u5173\u7cfb\u3002</p><p>\u4f60\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u6837\u5728<code>Model</code>\u4e0a\u8c03\u7528<code>relationship</code>\uff1a</p><pre><code class="language-javascript">User.relationship({ path: \'posts\', ref: \'Post\', refPath: \'author\' });</code></pre><div class="options"><h5>\u53c2\u6570</h5><p><code>path</code> <code class="data-type">String</code> - \u6a21\u578b\u4e0a\u7684\u5173\u7cfb\u5f15\u7528\u8def\u5f84</p><p><code>ref</code> <code class="data-type">String</code> - \u5f15\u7528\u65b9\u6a21\u578b\u7684\u952e (\u6709\u5173\u7cfb\u57df\u7684\u90a3\u4e00\u65b9)</p><p><code>refPath</code> <code class="data-type">String</code> - \u5f15\u7528\u65b9\u6a21\u578b\u4e0a\u7684\u5173\u7cfb\u5f15\u7528\u8def\u5f84</p></div><p>\u5982\u4f60\u6240\u89c1\uff0c\u63d0\u4f9b\u7ed9<code>relationship</code>\u65b9\u6cd5\u7684\u8fd9\u4e9b\u53c2\u6570\u662f\u5bf9\u5173\u7cfb\u57df\u7684\u955c\u50cf\u3002</p><p class="note">\u5173\u7cfb\u5b9a\u4e49\u662f\u53ef\u9009\u7684\uff1b\u5982\u679c\u4f60\u4e0d\u5b9a\u4e49\uff0c\u53ea\u662f\u5173\u7cfb\u7684\u53e6\u4e00\u4fa7\u4e0d\u4f1a\u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u8fd9\u4e00\u5173\u7cfb\u3002\u5173\u7cfb\u57df\u4ecd\u80fd\u5982\u671f\u5de5\u4f5c\u3002</p><a name="relationship-queries"></a><h3>\u52a0\u8f7d\u76f8\u5173\u6761\u76ee</h3><p>\u8fc7\u6ee4\u4e00\u5bf9\u591a\u7684\u76f8\u5173\u6761\u76ee\u5f88\u5bb9\u6613\uff1b\u53ea\u9700\u8981\u50cf\u5176\u5b83\u4efb\u4f55\u503c\u4e00\u6837\u6307\u5b9a\u4f60\u5e0c\u671b\u8fc7\u6ee4\u7684\u6761\u76ee\u7684ID\uff1a</p><pre><code class="language-javascript">Post.model.find().where(\'author\', author.id).exec(function(err, posts) {\n    // ...\n});</code></pre><p>\u8981\u8fc7\u6ee4\u591a\u5bf9\u591a\u7684\u76f8\u5173\u6761\u76ee\uff0c\u7528\u6761\u4ef6<code>in</code>\uff0c\u5e76\u7528\u6570\u7ec4\u6307\u5b9a\u4e00\u4e2a(\u6216\u591a\u4e2a)ID\uff1a</p><pre><code class="language-javascript">Post.model.find().where(\'categories\').in([category.id]).exec(function(err, posts) {\n    // ...\n});</code></pre><a name="fieldtypes"></a><h2>\u57df\u7c7b\u578b</h2><a name="fieldtypes-boolean"></a><h3><code>Boolean</code></h3><h4><code class="data-type">Boolean</code> &mdash; \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a\u4e00\u4e2a\u68c0\u67e5\u6846</h4><pre><code class="language-javascript">{ type: Types.Boolean }</code></pre><a name="fieldtypes-text"></a><h3><code>Text</code></h3><h4><code class="data-type">String</code> &mdash; \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a\u4e00\u4e2a\u6587\u672c\u63a7\u4ef6</h4><pre><code class="language-javascript">{ type: Types.Text }</code></pre><a name="fieldtypes-textarea"></a><h3><code>Textarea</code></h3><h4><code class="data-type">String</code> &mdash; \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a\u4e00\u4e2a\u6587\u672c\u6846</h4><pre><code class="language-javascript">{ type: Types.Textarea }</code></pre><div class="options"><h5>\u53c2\u6570</h5><p><code>height</code> <code class="data-type">Number</code> - \u6587\u672c\u6846\u7684\u9ad8\u5ea6(\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d)</p></div><a name="fieldtypes-email"></a><h3><code>Email</code></h3><h4><code class="data-type">String</code> &mdash; \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a\u4e00\u4e2a\u6587\u672c\u63a7\u4ef6</h4><p class="note">\u8f93\u5165\u770b\u8d77\u6765\u5fc5\u987b\u50cf\u4e00\u4e2a\u6709\u6548\u7684email\u5730\u5740(\u5982\u679c\u4e0d\u662f\u5fc5\u586b\u9879\uff0c\u53ef\u4ee5\u4e3a\u7a7a)</p><pre><code class="language-javascript">{ type: Types.Email, displayGravatar: true }</code></pre><div class="options"><h5>\u53c2\u6570</h5><p><code>displayGravatar</code> <code class="data-type">Boolean</code> - \u662f\u5426\u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793agravatar\u56fe\u7247</p><h5>Underscore\u65b9\u6cd5\uff1a</h5><p><code>gravatarUrl(input, size, defaultImage, rating)</code> - \u751f\u6210\u4e00\u4e2agravatar\u56fe\u7247\u7684\u8bf7\u6c42url</p><pre><code class="language-javascript">item.email = "demo@keystonejs.com";\nitem._.email.gravatarUrl(); // "//www.gravatar.com/avatar/74a0071e5f3a7107b570b7d4a1a7619d?s=80&d=identicon&r=g"\nitem._.email.gravatarUrl(200,\'mm\',\'r\'); // "//www.gravatar.com/avatar/74a0071e5f3a7107b570b7d4a1a7619d?s=200&d=mm&r=r"</code></pre></div><a name="fieldtypes-url"></a><h3><code>Url</code></h3><h4><code class="data-type">String</code> &mdash; \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a\u4e00\u4e2a\u6587\u672c\u63a7\u4ef6</h4><pre><code class="language-javascript">{ type: Types.Url }</code></pre><div class="options"><h5>Underscore\u65b9\u6cd5\uff1a</h5><p><code>format()</code> - \u53bb\u6389\u5b58\u50a8\u7684\u503c\u524d\u9762\u7684\u534f\u8bae(\u5982\u679c\u6709\u7684\u8bdd)</p><pre><code class="language-javascript">item.url = "http://keystonejs.com";\nitem._.url.format(); // "keystonejs.com"</code></pre></div><a name="fieldtypes-html"></a><h3><code>Html</code></h3><h4><code class="data-type">String</code> &mdash; \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a\u4e00\u4e2a\u6587\u672c\u63a7\u4ef6\u6216WYSIWYG\u7f16\u8f91\u5668\u3002</h4><pre><code class="language-javascript">{ type: Types.Html, wysiwyg: true }</code></pre><div class="options"><h5>\u53c2\u6570</h5><p><code>wysiwyg</code> <code class="data-type">Boolean</code> - \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u662f\u5426\u663e\u793aWYSIWYG\u7f16\u8f91\u5668 - \u8981\u5b9a\u5236\u7f16\u8f91\u5668\u8bf7\u53c2\u89c1<a href="/zh/docs/configuration/#options-ui">\u7ba1\u7406\u754c\u9762\u53c2\u6570</a>\u3002</p><p><code>height</code> <code class="data-type">Number</code> - \u8f93\u5165\u57df\u7684\u9ad8\u5ea6(\u4ee5\u50cf\u7d20\u4e3a\u5355\u4f4d)</p></div><p>\u53c2\u89c1<a href="/zh/docs/configuration#options-ui">\u7ba1\u7406\u754c\u9762\u53c2\u6570</a>\u4e86\u89e3\u7528\u4e8e\u5b9a\u5236WYSIWYG\u7f16\u8f91\u5668\u7684\u5168\u5c40\u914d\u7f6e\u53c2\u6570\u3002</p><a name="fieldtypes-color"></a><h3><code>Color</code></h3><h4><code class="data-type">Color</code> &mdash; \u663e\u793a\u4e3a\u5e26\u6709\u53d6\u8272\u5668\u7684\u6587\u672c\u63a7\u4ef6</h4><pre><code class="language-javascript">{ type: Types.Color }</code></pre><a name="fieldtypes-date"></a><h3><code>Date</code></h3><h4><code class="data-type">Date</code> &mdash; \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a\u65e5\u671f\u9009\u62e9\u63a7\u4ef6</h4><p class="note">\u8f93\u5165\u6216\u8005\u662f\u6709\u6548\u7684<strong>Date</strong>\uff0c\u6216\u8005\u662f\u683c\u5f0f\u4e3a<strong>YYYY-MM-DD</strong>\u7684\u5b57\u7b26\u4e32 (\u9664\u975e\u4e3a\u5fc5\u586b\u9879\uff0c\u5426\u5219\u53ef\u4ee5\u4e3a\u7a7a)</p><p class="note">\u8981\u5c06Date\u57df\u8bbe\u4e3a\u5f53\u524d\u65f6\u95f4\uff0c\u9700\u5c06<code>default</code>\u53c2\u6570\u8bbe\u4e3a<code class="default-value">Date.now</code></p><pre><code class="language-javascript">{ type: Types.Date }</code></pre><div class="options"><h5>\u53c2\u6570</h5><p><code>format</code> <code class="data-type">string</code> - \u9ed8\u8ba4\u7684\u683c\u5f0f\u6a21\u5f0f\uff0c\u9ed8\u8ba4\u4e3a<code class="default-value">Do MMM YYYY</code></p><p>\u53c2\u89c1<a href="http://momentjs.com/docs/#/displaying/format/" target="_blank">momentjs\u683c\u5f0f\u6587\u6863</a>\u4e86\u89e3\u6240\u652f\u6301\u7684\u683c\u5f0f\u548c\u53c2\u6570\u3002</p><h5>Underscore\u65b9\u6cd5</h5><p><code>format(string)</code> - \u7528<a href="http://momentjs.com" target="_blank">momentjs</a>\u683c\u5f0f\u5316\u5b58\u50a8\u7684\u503c</p><p><code>moment()</code> - \u8fd4\u56de\u4e00\u4e2a\u7528\u8be5\u57df\u7684\u503c\u521d\u59cb\u5316\u7684<a href="http://momentjs.com" target="_blank">momentjs</a>\u5bf9\u8c61</p><p><code>parse(input, format, ...)</code> - \u7528<a href="http://momentjs.com" target="_blank">momentjs</a>\u89e3\u6790input\uff0c\u5c06\u8be5\u57df\u7684\u503c\u8bbe\u4e3a\u8fd4\u56de\u7684moment\u5bf9\u8c61</p><p>\u53c2\u89c1<a href="http://momentjs.com/docs/#/parsing/" target="_blank">momentjs\u89e3\u6790\u6587\u6863</a>\u4e86\u89e3\u6240\u652f\u6301\u7684\u683c\u5f0f\u548c<code>parse</code>\u65b9\u6cd5\u7684\u53c2\u6570\u3002</p><pre><code class="language-javascript">item.createdDate = Date.now();\nitem._.createdDate.format(); // \u7528\u9ed8\u8ba4\u7684\u683c\u5f0f\u5b57\u7b26\u4e32\u8fd4\u56de\u5f53\u5929\u7684date\nitem._.createdDate.parse(\'2013-12-04\'); // \u7528\u88ab\u89e3\u6790\u7684\u65e5\u671f\u8fd4\u56de\u4e00\u4e2amoment\u5bf9\u8c61\nitem._.createdDate.format(\'YYYY-MM-DD\'); // \u8fd4\u56de\'2013-12-04\'</code></pre></div><a name="fieldtypes-datetime"></a><h3><code>Datetime</code></h3><h4><code class="data-type">Datetime</code> &mdash; \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a\u65e5\u671f\u65f6\u95f4\u9009\u62e9\u63a7\u4ef6</h4><p class="note">\u8f93\u5165\u6216\u8005\u662f\u6709\u6548\u7684<strong>Date</strong>\uff0c\u6216\u8005\u662f\u683c\u5f0f\u4e3a<strong>YYYY-MM-DD</strong>\u7684\u5b57\u7b26\u4e32 (\u9664\u975e\u4e3a\u5fc5\u586b\u9879\uff0c\u5426\u5219\u53ef\u4ee5\u4e3a\u7a7a)</p><p class="note">\u8981\u5c06Date\u57df\u8bbe\u4e3a\u5f53\u524d\u65f6\u95f4\uff0c\u9700\u5c06<code>default</code>\u53c2\u6570\u8bbe\u4e3a<code class="default-value">Date.now</code></p><pre><code class="language-javascript">{ type: Types.Datetime, default: Date.now }</code></pre><div class="options"><h5>\u53c2\u6570\uff1a</h5><p><code>format</code> <code class="data-type">string</code> - \u9ed8\u8ba4\u7684\u683c\u5f0f\u6a21\u5f0f\uff0c\u9ed8\u8ba4\u4e3a<code class="default-value">Do MMM YYYY hh:mm:ss a</code></p><p>\u53c2\u89c1<a href="http://momentjs.com/docs/#/displaying/format/" target="_blank">momentjs\u683c\u5f0f\u6587\u6863</a>\u4e86\u89e3\u6240\u652f\u6301\u7684\u683c\u5f0f\u548c\u53c2\u6570\u3002</p><h5>Underscore\u65b9\u6cd5\uff1a</h5><p><code>format(string)</code> -  \u7528<a href="http://momentjs.com" target="_blank">momentjs</a>\u683c\u5f0f\u5316\u5b58\u50a8\u7684\u503c</p><p><code>moment()</code> - \u8fd4\u56de\u4e00\u4e2a\u7528\u8be5\u57df\u7684\u503c\u521d\u59cb\u5316\u7684<a href="http://momentjs.com" target="_blank">momentjs</a>\u5bf9\u8c61</p><p><code>parse(input, format, ...)</code> - \u7528<a href="http://momentjs.com" target="_blank">momentjs</a>\u89e3\u6790input\uff0c\u5c06\u8be5\u57df\u7684\u503c\u8bbe\u4e3a\u8fd4\u56de\u7684moment\u5bf9\u8c61</p><p>\u53c2\u89c1<a href="http://momentjs.com/docs/#/parsing/" target="_blank">momentjs\u89e3\u6790\u6587\u6863</a>\u4e86\u89e3\u6240\u652f\u6301\u7684\u683c\u5f0f\u548c<code>parse</code>\u65b9\u6cd5\u7684\u53c2\u6570\u3002</p></div><a name="fieldtypes-key"></a><h3><code>Key</code></h3><h4><code class="data-type">String</code> &mdash; \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a\u4e00\u4e2a\u6587\u672c\u8f93\u5165\u57df</h4><p>\u81ea\u52a8\u5c06\u8f93\u5165\u8f6c\u4e3a\u6709\u6548\u7684\u952e(\u6ca1\u6709\u7a7a\u683c\u6216\u7279\u6b8a\u5b57\u7b26)\u3002\u7528\u5206\u9694\u7b26\u66ff\u6362\u7a7a\u683c\u3002</p><pre><code class="language-javascript">{ type: Types.Key }</code></pre><div class="options"><h5>\u53c2\u6570</h5><p><code>separator</code> <code class="data-type">String</code> - \u7528\u6765\u66ff\u6362\u8f93\u5165\u4e2d\u7a7a\u683c\u7684\u5206\u9694\u7b26\uff1b\u9ed8\u8ba4\u4e3a<code class="default-value">-</code></p></div><a name="fieldtypes-number"></a><h3><code>Number</code></h3><h4><code class="data-type">Number</code> &mdash; \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a\u4e00\u4e2a\u6570\u5b57\u8f93\u5165\u63a7\u4ef6</h4><p>\u8f93\u5165\u6216\u8005\u662f\u6709\u6548\u7684<strong>Number</strong>\uff0c\u6216\u8005\u662f\u53ef\u4ee5\u8f6c\u6362\u4e3a\u6570\u5b57\u7684\u5b57\u7b26\u4e32(\u9664\u975e\u4e3a\u5fc5\u586b\u9879\uff0c\u5426\u5219\u53ef\u4ee5\u4e3a\u7a7a)</p><pre><code class="language-javascript">{ type: Types.Number }</code></pre><div class="options"><h5>Underscore\u65b9\u6cd5\uff1a</h5><p><code>format(string)</code> - \u7528<a href="http://numeraljs.com" target="_blank">numeraljs</a>\u683c\u5f0f\u5316\u5b58\u50a8\u7684\u503c\u3002\u8bbe\u4e3a<code class="default-value">false</code>\u53ef\u4ee5\u7981\u7528\u81ea\u52a8\u683c\u5f0f\u5316\u3002</p><p>\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u9ed8\u8ba4\u4e3a<code class="default-value">0,0[.][000000000000]</code></p></div><a name="fieldtypes-money"></a><h3><code>Money</code></h3><h4><code class="data-type">Number</code> &mdash; \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a\u4e00\u4e2a\u6570\u5b57\u8f93\u5165\u63a7\u4ef6</h4><p>\u8f93\u5165\u6216\u8005\u662f\u6709\u6548\u7684<strong>Number</strong>\uff0c\u6216\u8005\u662f\u53ef\u4ee5\u8f6c\u6362\u4e3a\u6570\u5b57\u7684\u5b57\u7b26\u4e32(\u53ef\u4ee5\u6709\u524d\u7f6e\u7b26\u53f7\uff1b\u9664\u975e\u4e3a\u5fc5\u586b\u9879\uff0c\u5426\u5219\u53ef\u4ee5\u4e3a\u7a7a)\u3002\u91d1\u989d\u63a7\u4ef6\u4e0d\u80fd\u8bc6\u522b\u5e01\u79cd\u3002</p><pre><code class="language-javascript">{ type: Types.Money }</code></pre><div class="options"><h5>Underscore\u65b9\u6cd5\uff1a</h5><p><code>format(string)</code> - \u7528<a href="http://numeraljs.com" target="_blank">numeraljs</a>\u683c\u5f0f\u5316\u5b58\u50a8\u7684\u503c\u3002\u8bbe\u4e3a<code class="default-value">false</code>\u53ef\u4ee5\u7981\u7528\u81ea\u52a8\u683c\u5f0f\u5316\u3002</p><p>\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u9ed8\u8ba4\u4e3a<code class="default-value">$0,0.00</code></p></div><a name="fieldtypes-select"></a><h3><code>Select</code></h3><h4><code class="data-type">String</code>\u6216<code class="data-type">Number</code> &mdash; \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a\u9009\u62e9\u8f93\u5165\u63a7\u4ef6</h4><p class="note">\u7c7b\u4f3c\u4e8e\u5176\u4ed6\u6846\u67b6\u4e2d\u7684 <code>Enum</code>.</p><pre><code class="language-javascript">{ type: Types.Select, options: \'first, second, third\' }</code></pre><div class="options"><h5>\u53c2\u6570</h5><p><code>numeric</code> <code class="data-type">Boolean</code> \u4e3a<code class="default-value">true</code>\u65f6\uff0c\u4f1a\u5c06\u8be5\u57df\u7684\u503c\u5b58\u4e3a<code class="data-type">Number</code>\u800c\u4e0d\u662f<code class="data-type">String</code></p><pre><code class="language-javascript">{ type: Types.Select, numeric: true, options: [{ value: 1, label: \'One\' }, { value: 2, label: \'Two\' }] }</code></pre><p><code>emptyOption</code> <code class="data-type">Boolean</code> \u4e3a<code class="default-value">undefined || true</code>\u65f6\uff0c\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u767d\u7684\u9009\u62e9\u9879<code>&lt;select&gt;</code>\u4f5c\u4e3a\u8f93\u5165\u63a7\u4ef6\u4e2d\u7684\u7b2c\u4e00\u9879</p><pre><code class="language-javascript">{ type: Types.Select, required: true, options: \'first, second\', emptyOption: false }</code></pre><p><code>options</code> <code class="data-type">String</code>\u6216<code class="data-type">Array</code> - \u9009\u62e9\u8f93\u5165\u63a7\u4ef6\u7684\u9009\u62e9\u9879</p><p>\u9009\u62e9\u9879\u7684\u503c\u53ef\u4ee5\u662f\u7528\u9017\u53f7\u5206\u9694\u7684<code class="data-type">String</code>\u503c\u5217\u8868\uff0c\u5176\u4e2d\u7684\u5b57\u7b26\u4e32\u4f1a\u88ab\u5206\u5272\u4e3a<code class="data-type">Array</code>\u3002</p><p>\u5bf9\u4e8e\u9009\u62e9\u9879<code class="data-type">Array</code>\uff0c\u6bcf\u4e2a\u9009\u62e9\u9879\u6216\u8005\u662f</p><ul><li>\u8868\u793a\u9009\u62e9\u9879\u7684<code>value</code>\u7684<code class="data-type">String</code>\uff1b<code>label</code>\u662f\u81ea\u52a8\u751f\u6210\u7684</li><li>\u5e26\u6709<code>value</code>\u548c<code>label</code> <code class="data-type">String</code>\u5c5e\u6027\u7684<code class="data-type">Object</code></li></ul><p>\u4f60\u53ef\u4ee5\u5728<code>options</code> <code class="data-type">Array</code>\u4e2d\u6df7\u5408<code class="data-type">String</code>\u548c<code class="data-type">Object</code>\u6761\u76ee\uff1a</p><pre><code class="language-javascript">{ type: Types.Select, options: [\'first\', \'second\', { value: \'third\', label: \'The third one\' }] }</code></pre><p><code class="data-type">Object</code>\u9009\u62e9\u9879\u53ef\u4ee5\u6709\u989d\u5916\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u5728\u83b7\u53d6\u5f53\u524d\u9009\u62e9\u9879\u7684\u6570\u636e\uff0c\u6216\u57df\u53c2\u6570\u65f6\u8bbf\u95ee\u5230\u3002</p><pre><code class="language-javascript">{ type: Types.Select, options: [\n    { value: \'first\', label: \'The first option\', custom: \'value\' },\n    { value: \'second\', label: \'Second\' }\n]}</code></pre><h5>\u5c5e\u6027</h5><p><code>ops</code> <code class="data-type">Array</code> - \u8f93\u5165\u63a7\u4ef6\u7684<strong>options</strong>\u6570\u7ec4</p><p><code>values</code> <code class="data-type">Array</code> - \u5168\u90e8<code>option.value</code>\u5c5e\u6027</p><p><code>labels</code> <code class="data-type">Object</code> - \u5168\u90e8<code>option.label</code>\u5c5e\u6027\uff0c\u4ee5<code>option.value</code>\u4e3a\u952e</p><p><code>map</code> <code class="data-type">Object</code> - options\u7684\u6620\u5c04\uff0c\u4ee5<code>option.value</code>\u4e3a\u952e</p><h5>\u6a21\u5f0f</h5><p>\u5f53\u524d\u9009\u62e9\u9879\u7684\u503c\u4f1a\u5b58\u5728<code>{path}</code>\u4e0a\u3002\u6b64\u5916\u8fd8\u4f1a\u63d0\u4f9b\u8fd9\u4e9b\u865a\u62df\u57df\uff1a</p><p><code>pathLabel</code> <code class="data-type">String</code> - \u5f53\u524d\u9009\u62e9\u7684<strong>option</strong>\u7684\u6807\u7b7e</p><p><code>pathData</code> <code class="data-type">Object</code> - \u5f53\u524d\u9009\u62e9\u7684<strong>option</strong>\uff0c\u5305\u542b\u6240\u6709\u5b9a\u5236\u7684\u5c5e\u6027</p><p><code>pathOptions</code> <code class="data-type">Array</code> - \u8f93\u5165\u57df\u7684<strong>options</strong>\u6570\u7ec4</p><p><code>pathOptionsMap</code> <code class="data-type">Object</code> - options\u7684\u6620\u5c04\uff0c\u4ee5<code>option.value</code>\u4e3a\u952e</p><h5>Underscore\u65b9\u6cd5\uff1a</h5><p><code>pluck(property, default)</code> - \u8fd4\u56de\u5f53\u524d\u9009\u62e9\u7684<strong>option</strong>\u7684<code>property</code> \u503c\uff0c\u6216\u8005<code>default</code>\u3002\u7528\u4e8e\u8ddfoptions\u7684\u5b9a\u5236\u5c5e\u6027\u5408\u5e76\u65f6\u3002</p><pre><code class="language-javascript">MyList.add({ state: { type: Types.Select, options: \'draft, published, archived\', default: \'draft\' });\n \nMyList.fields.state.values == \'draft,published,archived\';\nMyList.fields.state.labels == { draft: \'Draft\', published: \'Published\', archived: \'Archived\' };\nMyList.fields.state.ops == [\n    { value: \'draft\', label: \'Draft\' },\n    { value: \'published\', label: \'Published\' },\n    { value: \'archived\', label: \'Archived\' }\n];\nMyList.fields.state.map == {\n    draft: { value: \'draft\', label: \'Draft\' },\n    published: { value: \'published\', label: \'Published\' },\n    archived: { value: \'archived\', label: \'Archived\' }\n};\n \nvar item = new MyList.model();\nitem.state == \'draft\';\nitem.stateLabel == \'Draft\';\nitem.stateData == { value: \'draft\', label: \'Draft\' };\nitem.stateOptions == MyList.fields.state.ops;\nitem.stateOptionsMap == MyList.fields.state.map;</code></pre></div><a name="fieldtypes-markdown"></a><h3><code>Markdown</code></h3><h4><code class="data-type">Object</code> &mdash; \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a\u4e00\u4e2a\u6587\u672c\u6846</h4><pre><code class="language-javascript">{ type: Types.Markdown }</code></pre><div class="options"><h5>\u53c2\u6570</h5><p><code>height</code> <code class="data-type">Number</code> - \u5b9a\u4e49 markdown \u7f16\u8f91\u5668\u9ad8\u5ea6\uff1b\u9ed8\u8ba4\u9ad8\u5ea6\u4e3a <code class="default-value">90</code>.</p><pre><code class="language-javascript">{ type: Types.Markdown, height: 200 }</code></pre><p><code>toolbarOptions</code> <code class="data-type">Object</code> - \u53ef\u4ee5\u5b9a\u5236\u5de5\u5177\u680f\u3002</p><p><code>toolbarOptions.hiddenButtons</code> <code class="data-type">String</code> - \u8981\u9690\u85cf\u7684\u6309\u94ae\u6e05\u5355\uff0c\u7528\u9017\u53f7\u5206\u9694\u3002</p><pre><code class="language-javascript">{ type: Types.Markdown, toolbarOptions: { hiddenButtons: \'H1,H6,Code\' } }</code></pre><h5>\u6a21\u5f0f</h5><p>\u5f53<code>md</code>\u5c5e\u6027\u53d1\u751f\u53d8\u5316\u65f6\uff0cmarkdown\u8f93\u5165\u57df\u4f1a\u81ea\u52a8\u5c06markdown\u8f6c\u6362\u4e3ahtml\uff0c\u8fd9\u662f\u901a\u8fc7<code>md</code>\u8def\u5f84\u4e0a\u7684\u8bbe\u5b9a\u5668\u5b8c\u6210\u7684\u3002</p><p><code>md</code> <code class="data-type">String</code> - markdown\u6e90\u6587\u672c</p><p><code>html</code> <code class="data-type">String</code> - \u751f\u6210\u7684html\u4ee3\u7801</p><pre><code class="language-javascript">Page.add({ content: Types.Markdown });\n \nvar page = new Page.model();\npage.content.md = "# Hello World";\npage.content.html == "&lt;h1&gt;Hello World&lt;/h1&gt;";\n \n// \u6216\u8005...\n \nPage.fields.content.updateItem(page, "* list item");\npage.fields.content.format(page) == "&lt;ul&gt;&lt;li&gt;list item&lt;/ul&gt;&lt;/li&gt;";</code></pre></div><a name="fieldtypes-name"></a><h3><code>Name</code></h3><h4><code class="data-type">Object</code> &mdash; \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a<strong>firstname</strong> <strong>lastname</strong>\u8f93\u5165\u63a7\u4ef6</h4><pre><code class="language-javascript">{ type: Types.Name }</code></pre><div class="options"><h5>\u6a21\u5f0f</h5><p>name\u57df\u5728\u6a21\u5f0f\u4e0a\u6dfb\u52a0\u4e86<code>first</code>\u548c<code>last</code> <code class="data-type">String</code>\u8def\u5f84\uff0c\u8fd8\u6709\u865a\u62df\u57df<code>full</code>\u7684getter\u548csetter\u3002</p><p><code>first</code> <code class="data-type">String</code> - \u59d3\u6c0f</p><p><code>last</code> <code class="data-type">String</code> - \u540d\u5b57</p><h5>\u865a\u62df\u57df</h5><p><code>full</code> <code class="data-type">String</code> - \u59d3\u548c\u540d\uff0c\u4e2d\u95f4\u52a0\u7a7a\u683c\u5408\u5e76(\u5982\u679c\u4e24\u4e2a\u90fd\u6709\u503c)\u3002</p><p><code>name.full</code> setter\u5728\u7b2c\u4e00\u4e2a\u7a7a\u683c\u5904\u5206\u5272\u8f93\u5165\u503c\u3002</p></div><a name="fieldtypes-password"></a><h3><code>Password</code></h3><h4><code class="data-type">String</code> &mdash; \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a\u4e00\u4e2a\u5bc6\u7801\u57df\uff0c\u5e26\u6709\u4e00\u4e2a\'\u4fee\u6539\'\u6309\u94ae\u3002</h4><p>\u5bc6\u7801\u662f\u81ea\u52a8\u7528bcrypt\u52a0\u5bc6\u7684\uff0c\u5e76\u4e14\u4f1a\u8f93\u51fa\u4e00\u4e2a\u65b9\u6cd5\u7528\u4e8e\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u8ddf\u52a0\u5bc6\u7684\u54c8\u5e0c\u503c\u8fdb\u884c\u6bd4\u8f83\u3002</p><p class="note">\u52a0\u5bc6\u662f\u6dfb\u52a0\u5728<strong>\u6a21\u5f0f</strong>\u4e0a\u7684\u4e00\u4e2a<strong>\u4fdd\u5b58\u524d\u94a9\u5b50</strong>\u5b8c\u6210\u7684\uff0c\u6240\u4ee5\u5bc6\u7801\u76f4\u5230\u6761\u76ee\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u4e2d\u65f6\u624d\u4f1a\u52a0\u5bc6\u3002</p><pre><code class="language-javascript">{ type: Types.Password }</code></pre><div class="options"><h5>\u53c2\u6570</h5><p><code>workFactor</code> <code class="data-type">Number</code> - \u751f\u6210\u54c8\u5e0c\u503c\u65f6\u7528\u7684\u52a0\u5bc6\u56e0\u5b50\uff0c\u6570\u503c\u8d8a\u5927\u8d8a\u6162\uff0c\u4f46\u4e5f\u66f4\u5b89\u5168(\u9ed8\u8ba4\u4e3a<code class="default-value">10</code>)</p><h5>Underscore\u65b9\u6cd5\uff1a</h5><p><code>compare(candidate, callback)</code> - \u5bf9\u5019\u9009\u503c\u52a0\u5bc6\uff0c\u5e76\u8ddf\u5df2\u52a0\u5bc6\u7684\u54c8\u5e0c\u503c\u8fdb\u884c\u6bd4\u8f83</p><ul><li><code>candidate</code> \u8981\u6bd4\u8f83\u7684<code class="data-type">String</code></li><li><code>callback(err, result)</code> - \u5982\u679c\u5019\u9009\u503c\u8ddf\u4fdd\u5b58\u7684\u5bc6\u7801\u76f8\u914d\uff0c\u5219<strong>result</strong>\u4e3a<code class="default-value">true</code>\uff0c\u5426\u5219\u4e3a<code class="default-value">false</code>\u3002</li></ul><h5>\u7279\u6b8a\u8def\u5f84</h5><p><code>{path}_compare</code> - \u63d0\u4f9b\u7ed9<strong>updateHandler</strong>\u65f6\uff0c\u5b83\u4f1a\u5bf9\u7167<code>{path}</code>\u8fdb\u884c\u68c0\u67e5\uff0c\u5982\u679c\u4e0d\u5339\u914d\u5219\u9a8c\u8bc1\u4f1a\u5931\u8d25\u3002</p></div><a name="fieldtypes-location"></a><h3><code>Location</code></h3><h4><code class="data-type">Object</code> &mdash; \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a\u4e00\u7ec4\u8f93\u5165\u63a7\u4ef6\u7684\u7ec4\u5408</h4><p>\u5305\u542b\u4e00\u7ec4\u6807\u51c6\u7684\u5b57\u7b26\u4e32\uff0c\u7528\u4e8e\u5b58\u50a8\u5730\u5740\uff0c\u5e26\u6709<code class="data-type">2dsphere</code>\u7d22\u5f15\u7684\u7ecf\u7eac\u5ea6\u3002</p><p>\u8fd8\u7528\u8c37\u6b4c\u7684Places API\u63d0\u4f9b\u8f93\u5165\u81ea\u52a8\u8865\u5145\u529f\u80fd (\u9700\u8981\u63d0\u4f9b\u8c37\u6b4c\u5730\u56feAPI\u952e\uff0c\u5e76\u4e14\u53ea\u80fd\u7528\u4e8e\u76f8\u5e94\u7684\u8c37\u6b4c\u670d\u52a1\u6761\u6b3e)\u3002</p><p>\u53c2\u89c1<a href="/zh/docs/configuration#services-google">\u8c37\u6b4c\u914d\u7f6e\u6587\u6863</a>\u4e86\u89e3\u5982\u4f55\u5728KeystoneJS\u4e2d\u8bbe\u7f6e\u8c37\u6b4c\u5730\u56fe\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002</p><pre><code class="language-javascript">{ type: Types.Location }</code></pre><p class="note">\u6ce8\u610f\uff1a\u6a21\u5f0f\u7684\u8def\u5f84\u662f\u57fa\u4e8e\u6fb3\u5927\u5229\u4e9a\u7684\u5730\u5740\u683c\u5f0f\uff0c\u5e76\u4e14\u5e94\u8be5\u66f4\u65b0\u4e3a\u5176\u5b83\u66f4\u52a0\u56fd\u9645\u5316\u7684\u683c\u5f0f\u3002\u5982\u679c\u4f60\u6709\u5982\u4f55\u8fdb\u884c\u56fd\u9645\u5316\u7ed3\u6784\u7684\u53cd\u9988\uff0c\u8bf7\u5f00\u4e00\u4e2a\u5de5\u5355\u3002</p><div class="options"><h5>\u6a21\u5f0f</h5><p><code>name</code> <code class="data-type">String</code> - \u5efa\u7b51\u7684\u540d\u79f0</p><p><code>number</code> <code class="data-type">String</code> - \u5355\u4f4d\u6216\u5e97\u94fa\u53f7</p><p><code>street1</code> <code class="data-type">String</code> - \u8857\u9053\u5730\u5740</p><p><code>street2</code> <code class="data-type">String</code> - \u8857\u9053\u5730\u5740\u7b2c2\u884c</p><p><code>suburb</code> <code class="data-type">String</code></p><p><code>state</code> <code class="data-type">String</code></p><p><code>postcode</code> <code class="data-type">String</code></p><p><code>country</code> <code class="data-type">String</code></p><p><code>geo</code> <code class="data-type">Array</code> <code class="default-value">longitude, latitude</code></p><p class="note"><strong>\u91cd\u8981\u63d0\u793a</strong>: \u6309\u7167MongoDB\u7684\u4f20\u7edf\uff0c<strong>geo</strong>\u6570\u7ec4\u7684\u987a\u5e8f\u5fc5\u987b\u662f<code class="default-value">lng, lat</code>\uff0c\u8ddf\u8c37\u6b4cAPI\u6240\u7528\u7684\u987a\u5e8f\u76f8\u53cd\u3002</p><h5>Underscore\u65b9\u6cd5\uff1a</h5><p><code>googleLookup(region, update, callback)</code> - \u4ece\u5b58\u50a8\u7684\u503c\u4e2d\u81ea\u52a8\u68c0\u6d4b\u5b8c\u6574\u7684\u5730\u5740\u548c\u7ecf\u7eac\u5ea6\u3002</p><ul><li><code>region</code> \u4e3a\u4e86\u8fdb\u884c\u533a\u57df\u6027\u504f\u79fb\u548c\u8fc7\u6ee4\u800c\u4f20\u7ed9Places API\u7684<code class="data-type">String</code>\u3002</li><li><code>update</code> <code class="data-type">String</code>\u4f20\u7ed9<code class="default-value">"overwrite"</code>\u4f1a\u81ea\u52a8\u7528\u7ed3\u679c\u8986\u76d6\u5df2\u6709\u6570\u636e\u3002<code class="default-value">true</code>\u4f1a\u5728\u8fd9\u4e2a\u57df\u4e0a\u7528\u7ed3\u679c\u8bbe\u5b9a\u7a7a\u767d\u5c5e\u6027\u3002</li><li><code>callback(err, location, result)</code> - \u4f20\u7ed9\u89e3\u6790\u8fc7\u7684<strong>location</strong>\u5bf9\u8c61\uff0c\u4ee5\u53ca\u6765\u81ea\u8c37\u6b4c\u7684\u539f\u59cb<strong>result</strong>\u3002</li></ul><p>\u5185\u90e8\u72b6\u6001\u7801\u6a21\u4eff\u8c37\u6b4cAPI\u7684\u72b6\u6001\u7801\u3002\u53c2\u89c1<a href="https://developers.google.com/maps/documentation/geocoding/" target="_blank">https://developers.google.com/maps/documentation/geocoding/</a>\u4e86\u89e3\u8be6\u60c5\u3002</p><p>\u4f7f\u7528\u8c37\u6b4cGeocoding API\u8981\u53d7\u5230\u6bcf\u5929\u4e0d\u8d85\u8fc72,500 geolocation\u8bf7\u6c42\u7684\u9650\u5236\uff0c\u9664\u975e\u6709\u4f01\u4e1a\u8bb8\u53ef\u3002</p><p>Geocoding API\u53ea\u80fd\u7528\u4e8e\u8c37\u6b4c\u5730\u56fe\uff1bgeocoding\u7ed3\u679c\u5fc5\u987b\u5728\u5730\u56fe\u4e0a\u663e\u793a\u3002\u8bf7\u786e\u4fdd\u4f60\u7684Keystone\u7a0b\u5e8f\u9075\u5b88\u8c37\u6b4c\u5730\u56feAPI\u7684\u8bb8\u53ef\u3002</p></div><a name="fieldtypes-cloudinaryimage"></a><h3><code>CloudinaryImage</code></h3><h4><code class="data-type">Object</code> &mdash; \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a\u4e00\u4e2a\u56fe\u7247\u4e0a\u4f20\u63a7\u4ef6\u3002</h4><p>\u81ea\u52a8\u7ba1\u7406\u5b58\u5728<a href="http://cloudinary.com" target="_blank">Cloudinary</a>\u4e2d\u7684\u56fe\u7247\uff0c\u5305\u62ec\u4e0a\u4f20\u3001\u7f29\u653e\u548c\u5220\u9664\u3002</p><p>\u53c2\u89c1<a href="/zh/docs/configuration#services-cloudinary">Cloudinary\u914d\u7f6e\u6587\u6863</a>\u4e86\u89e3\u5982\u4f55\u5728KeystoneJS\u4e2d\u8bbe\u7f6eCloudinary\u7684\u7ec6\u8282\u3002</p><pre><code class="language-javascript">{ type: Types.CloudinaryImage }</code></pre><div class="options"><h5>\u53c2\u6570</h5><p><code>publicID</code> <code class="data-type">String</code> \u7528\u4f5cCloudinary\u56fe\u7247 <code class="data-type">public_id</code>\u57df\u7684\u540d\u79f0\u3002</p><pre><code class="language-javascript">{ type: Types.CloudinaryImage, publicID: \'slug\' }</code></pre><p><code>folder</code> <code class="data-type">String</code> \u5f53<code class="default-value">cloudinary folders</code>\u8bbe\u4e3a<code class="default-value">true</code>\u65f6\uff0c\u7528\u6765\u4e3aCloudinary\u56fe\u7247<code class="data-type">public_id</code>\u6307\u5b9a\u6587\u4ef6\u5939/\u524d\u7f00</p><pre><code class="language-javascript">{ type: Types.CloudinaryImage, folder: \'path/to/image\' }</code></pre><p class="note">\u5982\u679c\u4f60\u5e0c\u671b Cloudinary \u5728 <code>cloudinary folders</code> \u8bbe\u7f6e\u4e3a <code class="default-value">true</code>  \u7684\u65f6\u5019\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u5939\uff0c \u786e\u8ba4\u5df2\u7ecf\u5728\u4f60\u7684 Cloudinary \u8d26\u6237\u4e2d\u542f\u7528 "Auto-create folders"\u3002</p><p><code>autoCleanup</code> <code class="data-type">Boolean</code> \u4e3a<code class="default-value">true</code>\u65f6\uff0c\u4f1a\u5c06Keystone\u7684\u9ed8\u8ba4\u884c\u4e3a\u4ece<code class="default-value">remove</code> (\u53ea\u662f\u4ece\u6570\u636e\u5e93\u4e2d\u53bb\u6389Cloudinary \u56fe\u7247)\u53d8\u6210<code class="default-value">delete</code> (\u4f1a\u540c\u65f6\u4ece\u6570\u636e\u5e93\u548cCloudinary\u5b58\u50a8\u4e2d\u53bb\u6389\u56fe\u7247)\u3002\u6b64\u5916\uff0c\u8fd9\u4e2a\u53c2\u6570\u8fd8\u4f1a\u5728\u4e0a\u4f20\u65f6\u66ff\u6362\u6389\u5df2\u6709\u56fe\u7247(\u5982\u679c\u56fe\u7247\u5df2\u5b58\u5728\u7684\u8bdd)\u3002</p><pre><code class="language-javascript">{ type: Types.CloudinaryImage, autoCleanup : true }</code></pre><p><code>select</code> <code class="data-type">Boolean</code> \u4e3a<code class="default-value">true</code> \u65f6\uff0c\u4f1a\u663e\u793a\u4e00\u4e2a\u4e0b\u62c9\u5217\u8868\u57df\uff0c\u5176\u4e2d\u662f\u5f53\u524d\u4fdd\u5b58\u5728Cloudinary\u5b58\u50a8\u4e2d\u7684\u56fe\u7247\u3002\u5f53\u6307\u5b9a<code>selectPrefix</code>\u65f6\uff0c\u53ea\u6709ID\u4ee5<code>selectPrefix</code>\u5f00\u5934\u7684\u56fe\u7247\u624d\u4f1a\u663e\u793a\u3002\u5426\u5219\uff0c\u663e\u793aID\u4ee5<code>folder</code>\u5f00\u5934\u7684\u56fe\u7247\u3002\u5982\u679c\u65e2\u6ca1\u6709\u914d\u7f6e<code>selectPrefix</code>\uff0c\u4e5f\u6ca1\u914d\u7f6e<code>folder</code>\uff0c\u5219\u53ea\u663e\u793aID\u4ee5<code class="data-type">[{prefix}]/{list.path}/{field.path}/</code>\u5f00\u5934\u7684\u56fe\u7247\u3002</p><pre><code class="language-javascript">{ type: Types.CloudinaryImage, select : true }</code></pre><p><code>selectPrefix</code> <code class="data-type">String</code> \u5f53<code>select</code>\u53c2\u6570\u4e3a<code class="default-value">true</code>\u65f6\u6307\u5b9a\u53ef\u4f9b\u9009\u62e9\u7684\u56fe\u7247\u7684\u524d\u7f00\u3002</p><pre><code class="language-javascript">{ type: Types.CloudinaryImage, select: true, selectPrefix: \'path/to/images\' }</code></pre><h5>\u6a21\u5f0f</h5><p><code>public_id</code> <code class="data-type">String</code></p><p><code>version</code> <code class="data-type">Number</code></p><p><code>signature</code> <code class="data-type">String</code></p><p><code>format</code> <code class="data-type">String</code></p><p><code>resource_type</code> <code class="data-type">String</code></p><p><code>url</code> <code class="data-type">String</code></p><p><code>width</code> <code class="data-type">Number</code></p><p><code>height</code> <code class="data-type">Number</code></p><p><code>secure_url</code> <code class="data-type">String</code></p><h5>\u865a\u62df\u57df</h5><code>exists</code> <code class="data-type">Boolean</code> - \u662f\u5426\u4fdd\u5b58\u6709\u56fe\u7247<h5>\u7279\u6b8a\u8def\u5f84</h5><p><code>{path}_upload</code> - \u5f53\u7ed9<strong>updateHandler</strong>\u63d0\u4f9b\u4e86<code class="data-type">file</code>\u65f6\uff0c\u5b83\u4f1a\u88ab\u4e0a\u4f20\u5230cloudinary\uff0c\u5e76\u4e14\u8be6\u7ec6\u4fe1\u606f\u4f1a\u5b58\u5728\u8be5\u57df\u4e2d\u3002</p><h5>Underscore\u65b9\u6cd5\uff1a</h5><p><code>src(options)</code> <code class="data-type">String</code> - \u8fd4\u56de\u56fe\u7247\u7684url\uff0c\u63a5\u53d7cloudinary\u652f\u6301\u7684\u6240\u6709\u53c2\u6570</p><p><code>tag(options)</code> <code class="data-type">String</code> - \u8fd4\u56de\u4e00\u4e2a<code class="default-value">&lt;img&gt;</code>\u6807\u7b7e</p><p><code>scale(width, height, options)</code> <code class="data-type">String</code> - \u5c06\u56fe\u7247\u7f29\u653e\u5230\u6070\u5f53\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff0c\u6bd4\u4f8b\u4fdd\u6301\u4e0d\u53d8\u3002</p><p><code>fit(width, height, options)</code> <code class="data-type">String</code> - \u5728\u6307\u5b9a\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u5185\u7f29\u653e\u56fe\u7247\uff0c\u6bd4\u4f8b\u4fdd\u6301\u4e0d\u53d8\u3002</p><p><code>lfit(width, height, options)</code> <code class="data-type">String</code> - \u7f29\u653e\u56fe\u7247\u4ee5\u9002\u5e94\u6307\u5b9a\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff0c\u6bd4\u4f8b\u4fdd\u6301\u4e0d\u53d8(\u4e0d\u8d85\u51fa\u539f\u59cb\u7ef4\u5ea6)</p><p><code>limit(width, height, options)</code> <code class="data-type">String</code> - \u7f29\u653e\u56fe\u7247(\u4ec5\u5411\u4e0b)\u4ee5\u9002\u5e94\u6307\u5b9a\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\uff0c\u6bd4\u4f8b\u4fdd\u6301\u4e0d\u53d8</p><p><code>fill(width, height, options)</code> <code class="data-type">String</code> - \u7f29\u653e\u56fe\u7247\u4ee5\u586b\u5145\u6307\u5b9a\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6</p><p><code>crop(width, height, options)</code> <code class="data-type">String</code> - \u88c1\u526a\u56fe\u7247\u4ee5\u586b\u5145\u6307\u5b9a\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6</p><p><code>pad(width, height, options)</code> <code class="data-type">String</code> - \u8865\u767d\u56fe\u7247\u4ee5\u586b\u5145\u6307\u5b9a\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6</p><p><code>lpad(width, height, options)</code> <code class="data-type">String</code> - \u8865\u767d\u56fe\u7247\u4ee5\u586b\u5145\u6307\u5b9a\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6(\u4e0d\u8d85\u51fa\u539f\u59cb\u7ef4\u5ea6)</p><p><code>thumbnail(width, height, options)</code> <code class="data-type">String</code> - \u88c1\u526a\u56fe\u7247\u4ee5\u586b\u5145\u6307\u5b9a\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6</p><p>\u6240\u6709\u65b9\u6cd5\u4e2d\u7684<code class="default-value">options</code>\u90fd\u662f\u53ef\u9009\u7684<code class="data-type">Object</code>\u3002 \u53c2\u89c1<a href="http://cloudinary.com/documentation/image_transformations" target="_blank">Cloudinary\u7684\u8f6c\u6362\u6587\u6863</a>\u4e86\u89e3\u6240\u652f\u6301\u7684\u53c2\u6570\u548c\u8f6c\u6362\u3002 </p></div><p class="note">\u8bb0\u4f4f\uff0c\u5982\u679c\u7528HTML\u8868\u5355\u4e0a\u4f20\u56fe\u7247\u5230<code>CloudinaryImage</code>\u57df\uff0c\u9700\u8981\u5728<code>form</code>\u6807\u7b7e\u4e2d\u6307\u5b9a<code>enctype="multipart/form-data"</code>\u3002</p><a name="fieldtypes-cloudinaryimages"></a><h3><code>CloudinaryImages</code></h3><h4><code class="data-type">Array</code> &mdash; \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a\u4e00\u7cfb\u5217\u56fe\u7247\uff0c\u4ee5\u53ca\u4e00\u4e2a\u4e0a\u4f20\u63a7\u4ef6\u3002</h4><p>\u5c06\u6570\u7ec4\u4e2d\u7684\u591a\u4e2a\u56fe\u7247\u5b58\u4e3a\u5d4c\u5957\u7684<code class="data-type">Schema</code>\uff0c\u6bcf\u4e2a\u90fd\u4f1a\u8f93\u51fa\u8ddf<code class="data-type">cloudinaryimage</code>\u57df\u4e00\u6837\u7684\u65b9\u6cd5\u3002</p><pre><code class="language-javascript">{ type: Types.CloudinaryImages }</code></pre><div class="options"><h5>\u53c2\u6570</h5><p><code>folder</code> <code class="data-type">String</code> \u5f53<code class="default-value">cloudinary folders</code>\u8bbe\u4e3a<code class="default-value">true</code>\u65f6\uff0c\u7528\u6765\u4e3aCloudinary\u56fe\u7247<code class="data-type">public_id</code>\u6307\u5b9a\u6587\u4ef6\u5939/\u524d\u7f00\u3002</p><pre><code class="language-javascript">{ type: Types.CloudinaryImages, folder: \'path/to/image\' }</code></pre><p class="note">\u5982\u679c\u4f60\u5e0c\u671b Cloudinary \u5728 <code>cloudinary folders</code> \u8bbe\u7f6e\u4e3a <code class="default-value">true</code>  \u7684\u65f6\u5019\u81ea\u52a8\u521b\u5efa\u6587\u4ef6\u5939\uff0c \u786e\u8ba4\u5df2\u7ecf\u5728\u4f60\u7684 Cloudinary \u8d26\u6237\u4e2d\u542f\u7528 "Auto-create folders"\u3002</p></div><a name="fieldtypes-localfile"></a><h3><code>LocalFile</code></h3><div class="alert alert-warning">\u8fd9\u4e2a\u57df\u7c7b\u578b\u8ddfHeroku\u4e4b\u7c7b\u7684PAAS Hosts\u4e0d\u517c\u5bb9\uff0c\u56e0\u4e3a\u5b83\u8981\u4f9d\u8d56\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u3002</div><h4><code class="data-type">Object</code> &mdash; \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a\u4e00\u4e2a\u6587\u4ef6\u4e0a\u4f20\u63a7\u4ef6\u3002 </h4><p>\u5728\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u4e2d\u5b58\u653e\u6587\u4ef6\u3002</p><pre><code class="language-javascript">{ type: Types.LocalFile }</code></pre><div class="options"><h5>\u53c2\u6570</h5><p><code>dest</code> <code class="data-type">String</code> - \u5fc5\u586b\u9879\uff0c\u5b58\u653e\u4e0a\u4f20\u6587\u4ef6\u7684\u8def\u5f84\u3002</p><p><code>prefix</code> <code class="data-type">String</code> - \u6d4f\u89c8\u5668\u4e2d\u7684\u8def\u5f84\u524d\u7f00\uff0c\u5982\u679c\u8ddf<code>dest</code>\u4e0d\u540c\u7684\u8bdd</p><p><code>datePrefix</code> <code class="data-type">String</code> - \u5982\u679c\u8bbe\u4e86\uff0c\u4ee5\u8fd9\u79cd\u683c\u5f0f\u7684\u5f53\u524d\u65e5\u671f\u4f5c\u4e3a\u6587\u4ef6\u540d\u7684\u524d\u7f00(\u53c2\u89c1 <a href="http://momentjs.com" target="_blank">moment.js</a>\u4e86\u89e3\u683c\u5f0f\u53c2\u6570)</p><p><code>allowedTypes</code> \u5305\u542b<code class="data-type">String</code>\u7684<code class="data-type">Array</code>  - \u53ef\u4ee5\u4e0a\u4f20\u7684\u6587\u4ef6mime\u7c7b\u578b\u767d\u540d\u5355</p><p><code>filename</code> <code class="data-type">Function</code> - \u4ee5\u5f53\u524d\u6a21\u578b\u548c\u5ba2\u6237\u7aef\u6587\u4ef6\u540d\u4e3a\u53c2\u6570\u7684\u51fd\u6570\uff0c\u8fd4\u56de\u8981\u4e0a\u4f20\u6587\u4ef6\u7684\u65b0\u6587\u4ef6\u540d\u3002</p><p><code>format</code> <code class="data-type">Function</code> - \u5e26\u4e24\u4e2a\u53c2\u6570\u7684\u51fd\u6570\uff1a\u5f53\u524d\u6a21\u578b\u548c\u6587\u4ef6\u5bf9\u8c61\uff0c\u8fd4\u56de\u8fd9\u4e2a\u6587\u4ef6\u5728\u7ba1\u7406\u754c\u9762\u4e2d\u7684\u8868\u793a\u3002<pre><code class="language-javascript">{\n	type: Types.LocalFile,\n	dest: \'/data/files\',\n	prefix: \'/files/\',\n	format: function(item, file){\n		return \'&lt;img src="/files/\'+file.filename+\'" style="max-width: 300px"&gt;\'\n	}\n}\n</code></pre></p><h5>\u6a21\u5f0f</h5><p><code>filename</code> <code class="data-type">String</code></p><p><code>path</code> <code class="data-type">String</code></p><p><code>size</code> <code class="data-type">Number</code></p><p><code>filetype</code> <code class="data-type">String</code></p><h5>\u865a\u62df\u57df</h5><code>exists</code> <code class="data-type">Boolean</code> - \u662f\u5426\u4fdd\u5b58\u4e86\u8fd9\u6837\u4e00\u4e2a\u6587\u4ef6<h5>Underscore\u65b9\u6cd5\uff1a</h5><p><code>uploadFile(file, update, callback)</code> - \u5c06\u6587\u4ef6\u4e0a\u4f20\u5230\u672c\u5730\u5b58\u50a8\uff0c\u5728\u8be5\u57df\u4e2d\u4fdd\u5b58\u6587\u4ef6\u7ec6\u8282\u4fe1\u606f\uff0c\u5e76\u5c06\u6587\u4ef6\u6570\u636e\u63d0\u4f9b\u7ed9\u56de\u8c03\u51fd\u6570\u3002</p><ul><li><code>file</code> <code class="data-type">File</code> \u6587\u4ef6\u4e0a\u4f20\u65f6\u5e94\u8be5\u662f\u7531express\u63d0\u4f9b\u7684\u6587\u4ef6\uff0c\u5373<code class="default-value">req.files.path</code></li><li><code>update</code> <code class="data-type">Boolean</code> \u6587\u4ef6\u4e0a\u4f20\u5b8c\u540e\u662f\u5426\u7528\u6587\u4ef6\u7684\u7ec6\u8282\u4fe1\u606f\u66f4\u65b0\u8be5\u57df\u3002</li><li><code>callback(err, fileData)</code> - \u4f20\u9012\u5c06\u4f1a\u5b58\u50a8\u5728\u8be5\u57df\u4e2d\u7684\u5bf9\u8c61(\u89c1\u4e0a\u9762\u7684\u6a21\u5f0f)</li></ul></div><a name="fieldtypes-s3file"></a><h3><code>S3 File</code></h3><h4><code class="data-type">Object</code> &mdash; \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a\u4e00\u4e2a\u6587\u4ef6\u4e0a\u4f20\u63a7\u4ef6\u3002</h4><p> \u81ea\u52a8\u7ba1\u7406\u5b58\u5728<a href="http://aws.amazon.com/s3" target="_blank">\u4e9a\u9a6c\u900aS3</a>\u4e0a\u7684\u6587\u4ef6\uff0c\u5305\u62ec\u4e0a\u4f20\u548c\u5220\u9664\u3002</p><pre><code class="language-javascript">{ type: Types.S3File }</code></pre><div class="options"><h5>\u53c2\u6570</h5><p><code>s3path</code> <code class="data-type">String</code> - \u5728S3\u7684\u6876\u4e2d\u5b58\u653e\u4e0a\u4f20\u6587\u4ef6\u7684\u8def\u5f84\u3002</p><p><code>datePrefix</code> <code class="data-type">String</code> - \u5982\u679c\u8bbe\u4e86\uff0c\u4ee5\u8fd9\u79cd\u683c\u5f0f\u7684\u5f53\u524d\u65e5\u671f\u4f5c\u4e3a\u6587\u4ef6\u540d\u7684\u524d\u7f00(\u53c2\u89c1 <a href="http://momentjs.com" target="_blank">moment.js</a>\u4e86\u89e3\u683c\u5f0f\u53c2\u6570)</p><p><code>allowedTypes</code> \u5305\u542b<code class="data-type">String</code>\u7684<code class="data-type">Array</code>  - \u53ef\u4ee5\u4e0a\u4f20\u7684\u6587\u4ef6mime\u7c7b\u578b\u767d\u540d\u5355</p><p><code>filename</code> <code class="data-type">Function</code> - \u4ee5\u5f53\u524d\u6a21\u578b\u548c\u5ba2\u6237\u7aef\u6587\u4ef6\u540d\u4e3a\u53c2\u6570\u7684\u51fd\u6570\uff0c\u8fd4\u56de\u8981\u4e0a\u4f20\u6587\u4ef6\u7684\u65b0\u6587\u4ef6\u540d\u3002<pre><code class="language-javascript">{\n	type: Types.S3File,\n	filename: function(item, filename){\n		// \u7528object id\u4f5c\u4e3a\u6587\u4ef6\u540d\u7684\u524d\u7f00\n		return item._id + \'-\' + filename;\n	}\n}</code></pre></p><p><code>headers</code> <code class="data-type">Object</code>\uff0c<code class="data-type">Array</code> \u6216\u8005 <code class="data-type">Function</code> - \u8bbe\u7f6e S3 \u5bf9\u8c61\u8bf7\u6c42\u5934</p><p>\u8bf7\u6c42\u5934\u53ef\u4ee5\u63d0\u4f9b <code class="data-type">Object</code> \u7c7b\u578b\uff0c \u952e\u503c\u5bf9\u7684\u952e\u88ab\u7528\u6765\u5b9a\u4e49\u8bf7\u6c42\u5934\u540d\u79f0\uff0c\u503c\u7528\u6765\u8bbe\u7f6e\u8bf7\u6c42\u5934\u7684\u503c\u3002<pre><code class="language-javascript">{\n	type: Types.S3File, \n		headers: {\n		\'x-amz-meta-Cache-Control\' : \'max-age=\' + (60 * 15),\n		\'x-amz-meta-X-Custom-Header\' : \'Object Option\'\n	} \n}</code></pre></p><p>\u5f53\u7528 <code class="data-type">Array</code> \u8bbe\u7f6e\u8bf7\u6c42\u5934\uff0c \u6570\u7ec4\u5185\u7684\u6bcf\u4e00\u4e2a\u8bf7\u6c42\u5934\u5143\u7d20\u5e94\u8be5\u662f\u4e00\u4e2a <code class="data-type">Object</code> \u7c7b\u578b\u5305\u542b <code>name</code>\u548c <code>value</code> <code class="data-type">String</code> \u5c5e\u6027\u3002<pre><code class="language-javascript">{ \n	type: Types.S3File, \n		headers: [\n		{ name: \'x-amz-meta-Cache-Control\', value: \'max-age=\' + (60 * 15) },\n		{ name: \'x-amz-meta-X-Custom-Header\', value: \'Array Option\' }\n	]\n}</code></pre></p><p>\u5f53\u7528 <code class="data-type">Function</code> \u8bbe\u7f6e\u8bf7\u6c42\u5934\uff0c\u4ee5\u5f53\u524d\u6a21\u578b\u548c\u5ba2\u6237\u7aef\u6587\u4ef6\u540d\u4e3a\u53c2\u6570\u7684\u51fd\u6570\uff1b\u8be5\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6709\u6548\u7684\u8bf7\u6c42\u5934\u5bf9\u8c61\u6216\u8005\u4e00\u4e2a\u7b80\u5355 <code class="data-type">Object</code> \u7c7b\u578b\u5bf9\u8c61\u3002<pre><code class="language-javascript">{ \n	type: Types.S3File, \n		headers: function (item, file){\n		var headers = [];\n		headers.push({ name: \'x-amz-meta-Cache-Control\', value: \'max-age=\' + item.maxAge });\n		headers.push({ name: \'x-amz-meta-X-Custom-Header\', value: \'Computed Option (Array)\' });\n		return headers;\n	}\n}\n// \u6216 \n{\n	type: Types.S3File,\n		headers: function (item, file){\n		var headers = {};\n		headers[\'x-amz-meta-Cache-Control\'] = \'max-age=\' + item.maxAge;\n		headers[\'x-amz-meta-X-Custom-Header\'] = \'Computed Option (Object)\';\n		return headers;\n	}\n}	</code></pre></p><p><code>format</code> <code class="data-type">Function</code> - \u4ee5\u5f53\u524d\u6a21\u578b\u548c\u5ba2\u6237\u7aef\u6587\u4ef6\u540d\u4e3a\u53c2\u6570\u7684\u51fd\u6570\uff0c\u8fd4\u56de\u8981\u4e0a\u4f20\u6587\u4ef6\u7684\u65b0\u6587\u4ef6\u540d\u3002<pre><code class="language-javascript">{\n	type: Types.S3File,\n	format: function(item, file){\n		return \'&lt;pre&gt;\'+JSON.stringify(file, false, 2)+\'&lt;/pre&gt;\'+\n					\'&lt;img src="\'+file.url+\'" style="max-width: 300px"&gt;\'\n	}\n}\n</code></pre></p><h5>\u6a21\u5f0f</h5><p><code>filename</code> <code class="data-type">String</code></p><p><code>type</code> <code class="data-type">String</code></p><p><code>filesize</code> <code class="data-type">Number</code></p><p><code>url</code> <code class="data-type">String</code></p><h5>\u865a\u62df\u57df</h5><code>exists</code> <code class="data-type">Boolean</code> - \u662f\u5426\u4fdd\u5b58\u4e86\u8fd9\u6837\u4e00\u4e2a\u6587\u4ef6<h5>\u7279\u6b8a\u8def\u5f84</h5><p><code>{path}_upload</code> - \u5f53\u63d0\u4f9b\u7ed9<strong>updateHandler</strong>\u4e00\u4e2a<code class="data-type">file</code>\u65f6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5c06\u4f1a\u88ab\u4e0a\u4f20\u5230s3\u4e0a\uff0c\u5e76\u4e14\u5176\u7ec6\u8282\u4fe1\u606f\u4f1a\u4fdd\u5b58\u5728\u8be5\u57df\u4e2d\u3002</p><h5>Underscore\u65b9\u6cd5\uff1a</h5><p><code>uploadFile(file, update, callback)</code> - \u5c06\u6587\u4ef6\u4e0a\u4f20\u5230s3\u7684\u6876\u4e2d\uff0c\u5728\u8be5\u57df\u4e2d\u4fdd\u5b58\u6587\u4ef6\u7ec6\u8282\u4fe1\u606f\uff0c\u5e76\u5c06\u6587\u4ef6\u6570\u636e\u63d0\u4f9b\u7ed9\u56de\u8c03\u51fd\u6570\u3002</p><ul><li><code>file</code> <code class="data-type">File</code> \u6587\u4ef6\u4e0a\u4f20\u65f6\u5e94\u8be5\u662f\u7531express\u63d0\u4f9b\u7684\u6587\u4ef6\uff0c\u5373<code class="default-value">req.files.path</code></li><li><code>update</code> <code class="data-type">Boolean</code> \u6587\u4ef6\u4e0a\u4f20\u5b8c\u540e\u662f\u5426\u7528\u6587\u4ef6\u7684\u7ec6\u8282\u4fe1\u606f\u66f4\u65b0\u8be5\u57df\u3002</li><li><code>callback(err, fileData)</code> - \u4f20\u9012\u5c06\u4f1a\u5b58\u50a8\u5728\u8be5\u57df\u4e2d\u7684\u5bf9\u8c61(\u89c1\u4e0a\u9762\u7684\u6a21\u5f0f)</li></ul></div><a name="fieldtypes-azurefile"></a><h3><code>AzureFile</code></h3><h4><code class="data-type">Object</code> &mdash; \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a\u4e00\u4e2a\u6587\u4ef6\u4e0a\u4f20\u63a7\u4ef6\u3002</h4><p>\u81ea\u52a8\u7ba1\u7406\u5b58\u5728<a href="http://www.windowsazure.com/" target="_blank">Windows Azure Storage</a>\u4e2d\u7684\u6587\u4ef6\uff0c\u5305\u62ec\u4e0a\u4f20\u548c\u5220\u9664\u3002</p><pre><code class="language-javascript">{ type: Types.AzureFile }</code></pre><div class="options"><h5>\u53c2\u6570</h5><p><code>filenameFormatter</code> <code class="data-type">Callback</code> - \u4ee5\u5f53\u524d\u6a21\u578b\u548c\u5ba2\u6237\u7aef\u6587\u4ef6\u540d\u4e3a\u53c2\u6570\u7684\u51fd\u6570\uff0c\u8fd4\u56de\u8981\u4e0a\u4f20\u6587\u4ef6\u7684\u65b0\u6587\u4ef6\u540d\u3002</p><pre><code class="language-javascript">{ type: Types.AzureFile, filenameFormatter: function(item, filename) {\n	return item._id + require(\'path\').extname(filename);\n} }</code></pre><p><code>containerFormatter</code> <code class="data-type">Callback</code> - \u4ee5\u5f53\u524d\u6a21\u578b\u548c\u5ba2\u6237\u7aef\u6587\u4ef6\u540d\u4e3a\u53c2\u6570\u7684\u51fd\u6570\uff0c\u8fd4\u56de\u65b0\u7684\u5bb9\u5668\u540d(\u5bb9\u5668\u662fAzure\u5b58\u50a8\u8d26\u53f7\u4e2d\u7684\u6839\u6587\u4ef6\u5939)\u3002</p><pre><code class="language-javascript">{ type: Types.AzureFile, containerFormatter: containerFormatter: function(item, filename) {\n	return item.modelProperty;\n} }</code></pre><h5>\u6a21\u5f0f</h5><p><code>filename</code> <code class="data-type">String</code></p><p><code>type</code> <code class="data-type">String</code></p><p><code>filesize</code> <code class="data-type">Number</code></p><p><code>url</code> <code class="data-type">String</code></p><p><code>etag</code> <code class="data-type">String</code></p><h5>\u865a\u62df\u57df</h5><code>exists</code> <code class="data-type">Boolean</code> - \u662f\u5426\u4fdd\u5b58\u4e86\u8fd9\u6837\u4e00\u4e2a\u6587\u4ef6<h5>Underscore\u65b9\u6cd5\uff1a</h5><p><code>uploadFile(file, update, callback)</code> - \u5c06\u6587\u4ef6\u4e0a\u4f20\u5230Azure\u5b58\u50a8\u8d26\u53f7\uff0c\u5728\u8be5\u57df\u4e2d\u4fdd\u5b58\u6587\u4ef6\u7ec6\u8282\u4fe1\u606f\uff0c\u5e76\u5c06\u6587\u4ef6\u6570\u636e\u63d0\u4f9b\u7ed9\u56de\u8c03\u51fd\u6570\u3002</p><ul><li><code>file</code> <code class="data-type">File</code> \u6587\u4ef6\u4e0a\u4f20\u65f6\u5e94\u8be5\u662f\u7531express\u63d0\u4f9b\u7684\u6587\u4ef6\uff0c\u5373<code class="default-value">req.files.path</code></li><li><code>update</code> <code class="data-type">Boolean</code> \u6587\u4ef6\u4e0a\u4f20\u5b8c\u540e\u662f\u5426\u7528\u6587\u4ef6\u7684\u7ec6\u8282\u4fe1\u606f\u66f4\u65b0\u8be5\u57df\u3002</li><li><code>callback(err, fileData)</code> - \u4f20\u9012\u5c06\u4f1a\u5b58\u50a8\u5728\u8be5\u57df\u4e2d\u7684\u5bf9\u8c61(\u89c1\u4e0a\u9762\u7684\u6a21\u5f0f)</li></ul></div><a name="fieldtypes-embedly"></a><h3><code>Embedly</code></h3><h4><code class="data-type">Object</code> &mdash; \u5728\u7ba1\u7406\u754c\u9762\u4e2d\u663e\u793a\u4e3a\u53ea\u8bfb\u6570\u636e\u3002</h4><p>\u81ea\u52a8\u4ece<a href="http://embed.ly" target="_blank">Embedly</a> API\u83b7\u53d6\u8ddf\u53e6\u4e00\u4e2a\u57df\u7684\u503c\u76f8\u5173\u7684\u4fe1\u606f(\u7531<code>from</code> \u53c2\u6570\u6307\u5b9a)\u3002</p><p>\u5b83\u5b58\u50a8\u83b7\u53d6\u7684\u6570\u636e(\u5305\u62ec\u63d0\u4f9b\u8005\u3001\u5a92\u4f53\u7c7b\u578b\u3001\u5b8c\u6574\u7684URL\u3001HTML\u5d4c\u5165\u4ee3\u7801\u3001\u5bbd\u5ea6\u3001\u9ad8\u5ea6\u3001\u7f29\u7565\u56fe\u53ca\u66f4\u591a\u4fe1\u606f)\u3002</p><p>\u83b7\u53d6\u6570\u636e\u7684api\u8c03\u7528\u662f\u4f5c\u4e3a\u4fdd\u5b58\u524d\u7f6e\u94a9\u5b50\u5b9e\u73b0\u7684\uff0c\u5e76\u4e14\u53ea\u5728<strong>from\u8def\u5f84</strong>\u7684\u503c\u53d1\u751f\u53d8\u5316\u65f6\u624d\u4f1a\u89e6\u53d1\u3002</p><p>\u53c2\u89c1<a href="/zh/docs/configuration#services-embedly">Embed.ly\u914d\u7f6e\u6587\u6863</a>\u4e86\u89e3\u5982\u4f55\u5728KeystoneJS\u4e2d\u8bbe\u7f6eEmbed.ly\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002 </p><pre><code class="language-javascript">{ type: Types.Embedly, from: \'path\' }</code></pre><div class="options"><h5>\u53c2\u6570</h5><p><code>from</code> <code class="data-type">String</code> - \u6a21\u5f0f\u4e2d\u4f20\u7ed9Embedly API\u7684\u53e6\u4e00\u4e2a\u57df\u7684\u8def\u5f84\u3002\u53e6\u4e00\u4e2a\u57df\u4e2d\u5fc5\u987b\u5305\u542b\u4e00\u4e2a<code class="data-type">String</code>\u503c\u3002</p><p><code>options</code> <code class="data-type">Object</code> (optional) - \u8ddf<code>from</code>\u57df\u7684\u503c\u4e00\u8d77\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9embedly API\u3002</p><p>\u53c2\u89c1<a href="http://embed.ly/docs/embed/api/endpoints/1/oembed" target="_blank">Embedly\u7684oEmbed API \u6587\u6863</a>\u4e86\u89e3\u53c2\u6570\u53ca\u8fd4\u56de\u6570\u636e\u7684\u66f4\u591a\u4fe1\u606f\u3002</p><h5>\u6a21\u5f0f</h5><p><code>exists</code> <code class="data-type">Boolean</code></p><p><code>type</code> <code class="data-type">String</code></p><p><code>title</code> <code class="data-type">String</code></p><p><code>url</code> <code class="data-type">String</code></p><p><code>width</code> <code class="data-type">Number</code></p><p><code>height</code> <code class="data-type">Number</code></p><p><code>version</code> <code class="data-type">String</code></p><p><code>description</code> <code class="data-type">String</code></p><p><code>html</code> <code class="data-type">String</code></p><p><code>authorName</code> <code class="data-type">String</code></p><p><code>authorUrl</code> <code class="data-type">String</code></p><p><code>providerName</code> <code class="data-type">String</code></p><p><code>providerUrl</code> <code class="data-type">String</code></p><p><code>thumbnailUrl</code> <code class="data-type">String</code></p><p><code>thumbnailWidth</code> <code class="data-type">Number</code></p><p><code>thumbnailHeight</code> <code class="data-type">Number</code></p></div><h2>\u66f4\u591a\u8303\u4f8b</h2><p>\u53c2\u89c1\u9879\u76ee\u7684<a href="/zh/examples">\u8303\u4f8b</a>\u9875\u9762\uff0c\u4e86\u89e3\u5404\u79cd\u5217\u8868\u53c2\u6570\u548c\u57df\u7c7b\u578b\u7684\u771f\u5b9e\u7528\u6cd5\u3002</p></div></div></div></div>');
}.call(this,"docsnav"in f?f.docsnav:"undefined"!=typeof docsnav?docsnav:void 0,"docssection"in f?f.docssection:"undefined"!=typeof docssection?docssection:void 0),d.join("")},"zh/pages/docs/getting-started":function(a){var c,d=[],e={},f=a||{};return function(a,f){e.docsnav=c=function(e){this&&this.block,this&&this.attributes||{};d.push('<div class="visible-xs"><ul class="nav-toggle">'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}}}.call(this),d.push('</ul></div><nav class="docs-sidebar hidden-xs"><ul class="sidebar-nav"><li'+b.cls(["introduction"==e.value?"active":null],[!0])+'><a href="/zh/docs" class="nav-heading">\u6b22\u8fce</a></li>'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}}}.call(this),d.push("</ul>"),"introduction"!=e.value&&(d.push('<hr/><ul class="sidebar-nav">'),function(){var b=a;if("number"==typeof b.length)for(var c=0,f=b.length;f>c;c++){var g=b[c];g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">\u4ecb\u7ecd</a></li><li><a href="#introduction-prerequisites">\u524d\u63d0\u6761\u4ef6</a></li><li><a href="#introduction-productionvsdevelopment">\u751f\u4ea7 vs \u5f00\u53d1</a></li><li class="nav-label"><a href="#gettingstarted">\u5165\u95e8</a></li><li><a href="#gettingstarted-usingyeoman">\u4f7f\u7528Yeoman\u751f\u6210\u5668</a></li><li><a href="#gettingstarted-startinganewproject">\u5f00\u59cb\u4e00\u4e2a\u65b0\u9879\u76ee</a></li><li><a href="#gettingstarted-projectstructure">\u9879\u76ee\u7ed3\u6784</a></li><li class="nav-label"><a href="#models">\u6a21\u578b</a></li><li><a href="#models-authentication">\u8ba4\u8bc1\u4e0e\u4f1a\u8bdd\u7ba1\u7406</a></li><li class="nav-label"><a href="#routesviews">\u8def\u7531 &amp; \u89c6\u56fe</a></li><li><a href="#routesviews-settingup">\u8bbe\u7f6e\u8def\u7531\u548c\u4e2d\u95f4\u4ef6</a></li><li><a href="#routesviews-middleware">\u5e38\u7528\u8def\u7531\u4e2d\u95f4\u4ef6</a></li><li><a href="#routesviews-firstview">\u4f60\u7684\u7b2c\u4e00\u4e2a\u89c6\u56fe</a></li><li><a href="#routesviews-templates">\u6a21\u677f</a></li><li><a href="#routesviews-publicassets">\u516c\u5171\u8d44\u4ea7</a></li><li class="nav-label"><a href="#runningyourapp">\u8fd0\u884cApp</a></li><li><a href="#runningyourapp-writingupdates">\u7f16\u5199\u66f4\u65b0</a></li><li><a href="#runningyourapp-startingkeystone">\u542f\u52a8Keystone</a></li><li><a href="#runningyourapp-nextstep">\u4e0b\u4e00\u6b65</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone \u53c2\u6570</a></li><li><a href="#options-concepts">\u8bbe\u7f6e\u53c2\u6570</a></li><li><a href="#options-project">\u9879\u76ee\u53c2\u6570</a></li><li><a href="#options-server">Web\u670d\u52a1\u5668\u53c2\u6570</a></li><li><a href="#options-ssl">SSL\u53c2\u6570</a></li><li><a href="#options-database">\u6570\u636e\u5e93\u4e0e\u7528\u6237\u8ba4\u8bc1\u53c2\u6570</a></li><li><a href="#options-unix-socket">Unix Socket\u53c2\u6570</a></li><li><a href="#options-ui">\u7ba1\u7406\u5458\u754c\u9762\u53c2\u6570</a></li><li class="nav-label"><a href="#services">\u670d\u52a1</a></li><li><a href="#services-google-analytics">\u8c37\u6b4c\u5206\u6790</a></li><li><a href="#services-google-maps">\u8c37\u6b4c\u5730\u56fe</a></li><li><a href="#services-amazons3">\u4e9a\u9a6c\u900a S3</a></li><li><a href="#services-azure">\u5fae\u8f6fAzure\u5b58\u50a8</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">\u5e94\u7528\u7a0b\u5e8f\u66f4\u65b0</a></li><li class="nav-label"><a href="#headless">\u7981\u7528\u7ba1\u7406\u5458\u754c\u9762</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">\u6982\u5ff5</a></li><li class="nav-label"><a href="#lists">\u5217\u8868</a></li><li><a href="#lists-usage">\u7528\u6cd5</a></li><li><a href="#lists-example">\u793a\u4f8b</a></li><li><a href="#lists-options">List\u53c2\u6570</a></li><li><a href="#lists-plugins">Schema\u63d2\u4ef6</a></li><li><a href="#lists-querying">\u67e5\u8be2\u6570\u636e</a></li><li><a href="#lists-paginate">\u5206\u9875\u67e5\u8be2</a></li><li><a href="#lists-creating">\u521b\u5efa\u6761\u76ee</a></li><li><a href="#lists-deleting">\u5220\u9664\u6761\u76ee</a></li><li class="nav-label"><a href="#headings">\u6807\u9898</a></li><li class="nav-label"><a href="#fields">\u57df</a></li><li><a href="#fields-overview">\u6982\u89c8</a></li><li><a href="#fields-options">\u57df\u53c2\u6570</a></li><li><a href="#fields-conditional">\u57df\u6761\u4ef6</a></li><li><a href="#fields-watching">\u57df\u76d1\u542c</a></li><li><a href="#fields-underscoremethods">Underscore\u65b9\u6cd5</a></li><li class="nav-label"><a href="#relationships">\u5173\u7cfb</a></li><li><a href="#relationship-fields">\u5173\u7cfb\u57df</a></li><li><a href="#relationship-definitions">\u5173\u7cfb\u5b9a\u4e49</a></li><li><a href="#relationship-queries">\u52a0\u8f7d\u76f8\u5173\u6761\u76ee</a></li><li class="nav-label"><a href="#fieldtypes">\u57df\u7c7b\u578b</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li></ul>')}else{var f=0;for(var c in b){f++;var g=b[c];g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">\u4ecb\u7ecd</a></li><li><a href="#introduction-prerequisites">\u524d\u63d0\u6761\u4ef6</a></li><li><a href="#introduction-productionvsdevelopment">\u751f\u4ea7 vs \u5f00\u53d1</a></li><li class="nav-label"><a href="#gettingstarted">\u5165\u95e8</a></li><li><a href="#gettingstarted-usingyeoman">\u4f7f\u7528Yeoman\u751f\u6210\u5668</a></li><li><a href="#gettingstarted-startinganewproject">\u5f00\u59cb\u4e00\u4e2a\u65b0\u9879\u76ee</a></li><li><a href="#gettingstarted-projectstructure">\u9879\u76ee\u7ed3\u6784</a></li><li class="nav-label"><a href="#models">\u6a21\u578b</a></li><li><a href="#models-authentication">\u8ba4\u8bc1\u4e0e\u4f1a\u8bdd\u7ba1\u7406</a></li><li class="nav-label"><a href="#routesviews">\u8def\u7531 &amp; \u89c6\u56fe</a></li><li><a href="#routesviews-settingup">\u8bbe\u7f6e\u8def\u7531\u548c\u4e2d\u95f4\u4ef6</a></li><li><a href="#routesviews-middleware">\u5e38\u7528\u8def\u7531\u4e2d\u95f4\u4ef6</a></li><li><a href="#routesviews-firstview">\u4f60\u7684\u7b2c\u4e00\u4e2a\u89c6\u56fe</a></li><li><a href="#routesviews-templates">\u6a21\u677f</a></li><li><a href="#routesviews-publicassets">\u516c\u5171\u8d44\u4ea7</a></li><li class="nav-label"><a href="#runningyourapp">\u8fd0\u884cApp</a></li><li><a href="#runningyourapp-writingupdates">\u7f16\u5199\u66f4\u65b0</a></li><li><a href="#runningyourapp-startingkeystone">\u542f\u52a8Keystone</a></li><li><a href="#runningyourapp-nextstep">\u4e0b\u4e00\u6b65</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone \u53c2\u6570</a></li><li><a href="#options-concepts">\u8bbe\u7f6e\u53c2\u6570</a></li><li><a href="#options-project">\u9879\u76ee\u53c2\u6570</a></li><li><a href="#options-server">Web\u670d\u52a1\u5668\u53c2\u6570</a></li><li><a href="#options-ssl">SSL\u53c2\u6570</a></li><li><a href="#options-database">\u6570\u636e\u5e93\u4e0e\u7528\u6237\u8ba4\u8bc1\u53c2\u6570</a></li><li><a href="#options-unix-socket">Unix Socket\u53c2\u6570</a></li><li><a href="#options-ui">\u7ba1\u7406\u5458\u754c\u9762\u53c2\u6570</a></li><li class="nav-label"><a href="#services">\u670d\u52a1</a></li><li><a href="#services-google-analytics">\u8c37\u6b4c\u5206\u6790</a></li><li><a href="#services-google-maps">\u8c37\u6b4c\u5730\u56fe</a></li><li><a href="#services-amazons3">\u4e9a\u9a6c\u900a S3</a></li><li><a href="#services-azure">\u5fae\u8f6fAzure\u5b58\u50a8</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">\u5e94\u7528\u7a0b\u5e8f\u66f4\u65b0</a></li><li class="nav-label"><a href="#headless">\u7981\u7528\u7ba1\u7406\u5458\u754c\u9762</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">\u6982\u5ff5</a></li><li class="nav-label"><a href="#lists">\u5217\u8868</a></li><li><a href="#lists-usage">\u7528\u6cd5</a></li><li><a href="#lists-example">\u793a\u4f8b</a></li><li><a href="#lists-options">List\u53c2\u6570</a></li><li><a href="#lists-plugins">Schema\u63d2\u4ef6</a></li><li><a href="#lists-querying">\u67e5\u8be2\u6570\u636e</a></li><li><a href="#lists-paginate">\u5206\u9875\u67e5\u8be2</a></li><li><a href="#lists-creating">\u521b\u5efa\u6761\u76ee</a></li><li><a href="#lists-deleting">\u5220\u9664\u6761\u76ee</a></li><li class="nav-label"><a href="#headings">\u6807\u9898</a></li><li class="nav-label"><a href="#fields">\u57df</a></li><li><a href="#fields-overview">\u6982\u89c8</a></li><li><a href="#fields-options">\u57df\u53c2\u6570</a></li><li><a href="#fields-conditional">\u57df\u6761\u4ef6</a></li><li><a href="#fields-watching">\u57df\u76d1\u542c</a></li><li><a href="#fields-underscoremethods">Underscore\u65b9\u6cd5</a></li><li class="nav-label"><a href="#relationships">\u5173\u7cfb</a></li><li><a href="#relationship-fields">\u5173\u7cfb\u57df</a></li><li><a href="#relationship-definitions">\u5173\u7cfb\u5b9a\u4e49</a></li><li><a href="#relationship-queries">\u52a0\u8f7d\u76f8\u5173\u6761\u76ee</a></li><li class="nav-label"><a href="#fieldtypes">\u57df\u7c7b\u578b</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li></ul>')}}}.call(this),d.push("</ul>")),d.push("</nav>")},d.push('<div class="page-header"><div class="container"><h1>\u5165\u95e8\u6307\u5357</h1><p class="lead">\u8fd9\u4e2a\u6307\u5357\u4f1a\u9010\u6b65\u6307\u5bfc\u4f60\u5982\u4f55\u6784\u5efaKeystoneJS\u7f51\u7ad9\u3002<a href="/zh/getting-started">\u8fd9\u91cc\u8fd8\u6709\u4e2a\u751f\u6210\u5668\u3002</a></p></div></div><div class="container"><div class="row"><div class="col-sm-3">'),e.docsnav(f),d.push('</div><div class="col-sm-9"><div class="docs-content"><h2><a name="introduction"></a>\u7b80\u4ecb</h2><div class="alert alert-warning">\u8fd9\u4e2a\u6307\u5357\u76ee\u524d\u6b63\u5728\u66f4\u65b0\u4e2d\uff0c\u4ee5\u4f53\u73b0\u65b0\u7684Yeoman\u751f\u6210\u5668\u3002</div><p>KeystoneJS\u4f7f\u5f97\u5728node.js\u4e2d\u642d\u5efa\u6570\u636e\u5e93\u9a71\u52a8\u7684\u7f51\u7ad9\u3001\u5e94\u7528\u7a0b\u5e8f\u548cAPI\u53d8\u5f97\u5bb9\u6613\u4e86\u3002</p><p>KeystoneJS\u5728\u5e95\u5c42\u4f7f\u7528\u4e86<a href="http://expressjs.com" target="_blank">express.js</a> web\u670d\u52a1\u5668\u6846\u67b6\uff0c\u5e76\u901a\u8fc7\u5bf9\u8c61\u5efa\u6a21\u6846\u67b6<a href="mongoosejs.com" target="_blank">mongoose</a>\u4f7f\u7528<a href="http://mongodb.com" target="_blank">MongoDB</a>\u6570\u636e\u5e93\u3002</p><div class="contextual-note"><h4>\u7b80\u5355 vs. \u7075\u6d3b</h4><p>\u8bbe\u8ba1Keystone\u7684\u76ee\u7684\u662f\u8981\u628a\u590d\u6742\u7684\u4e8b\u60c5\u53d8\u7b80\u5355\uff0c\u4e0d\u4f1a\u9650\u5236node.js\u6216\u4ee5\u5176\u4e3a\u57fa\u7840\u7684\u6846\u67b6\u7684\u80fd\u91cf\u6216\u7075\u6d3b\u6027\u3002</p><p>\u8fd9\u4e2a\u6307\u5357\u4f1a\u544a\u8bc9\u4f60\u5982\u4f55\u7528\u9ed8\u8ba4\u7684\u9879\u76ee\u7ed3\u6784\u53ca\u9009\u9879\u642d\u5efa\u4e00\u4e2aKeystoneJS\u7f51\u7ad9\u3002 </p><p>\u8981\u60f3\u6df1\u5165\u4e86\u89e3\u5e95\u5c42\u7684\u8fd0\u884c\u673a\u5236\uff0c\u4ee5\u53ca\u5982\u4f55\u6269\u5c55\u6216\u66ff\u6362\u67d0\u4e9b\u529f\u80fd\uff0c\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u4f60\u8bfb\u4e00\u8bfb<a href="https://github.com/keystonejs/keystone" target="_blank">\u6e90\u7801</a>\u3002</p></div><a name="introduction-prerequisites"></a><h3>\u524d\u63d0\u6761\u4ef6</h3><ol class="fancy-list"><li>\u5f00\u59cb\u4e4b\u524d\uff0c\u5148\u786e\u4fdd\u4f60\u88c5\u4e86<a href="http://nodejs.org/download" target="_blank">Node.js</a>\u548c<a href="http://www.mongodb.org/downloads" target="_blank">MongoDB</a>\u3002</li><li>\u8981\u4f7f\u7528KeystoneJS\uff0c\u4f60\u9700\u8981\u638c\u63e1\u5408\u7406\u7684Javascript\u77e5\u8bc6\uff0c\u5e76\u719f\u6089\u6570\u636e\u5e93\u6982\u5ff5\u4e4b\u7c7b\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u4f1a\u7528 node / npm \u7b49\u3002</li><li>\u8fd9\u4e2a\u6307\u5357\u4e2d\u8fd8\u4f1a\u7528<a href="http://jade-lang.com" target="_blank">Jade</a>\u4f5c\u4e3a\u89c6\u56fe\u6a21\u677f\uff0c<a href="http://lesscss.org" target="_blank">LESS</a>\u4f5cCSS\u6a21\u677f\u3002\u4f60\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\u4f7f\u7528\u4efb\u4f55\u6a21\u677f\u8bed\u8a00\uff1b\u53c2\u9605<a href="#templates_other">\u4f7f\u7528\u5176\u5b83\u6a21\u677f\u8bed\u8a00</a> (\u4e0b\u9762)\u4e86\u89e3\u8be6\u60c5\u3002</li></ol><a name="introduction-productionvsdevelopment"></a><h3>\u751f\u4ea7 vs. \u5f00\u53d1</h3><p>Keystone\u5728\u751f\u4ea7\u548c\u5f00\u53d1\u6a21\u5f0f\u4e0b\u4f1a\u4f7f\u7528\u4e0d\u540c\u7684\u8bbe\u5b9a\u3002\u9ed8\u8ba4\u73af\u5883\u4e3a<code>development</code>\uff0c\u4e3a\u4e86\u63d0\u5347\u6027\u80fd\uff0c\u4f60\u5e94\u8be5\u5728\u751f\u4ea7\u670d\u52a1\u5668\u4e0a\u5c06\u73af\u5883\u53d8\u91cf<code>NODE_ENV</code>\u8bbe\u4e3a<code>production</code>\u3002</p><p>\u8c03\u7528<code>keystone.get(\'env\')</code>\u53ef\u4ee5\u68c0\u6d4b\u51fa\u7a0b\u5e8f\u8fd0\u884c\u5728\u54ea\u79cd\u73af\u5883\u4e0b\u3002</p><a name="gettingstarted"></a><h2>\u5165\u95e8</h2><a name="gettingstarted-usingyeoman"></a><h3>\u4f7f\u7528Yeoman\u751f\u6210\u5668</h3><p>\u5f00\u59cbKeystoneJS\u4e4b\u65c5\u6700\u5bb9\u6613\u7684\u65b9\u5f0f\u662f\u4f7f\u7528\u6211\u4eec\u65b0\u7684Yeoman\u751f\u6210\u5668\u3002</p><p>\u6211\u4eec\u4ecd\u5728\u66f4\u65b0\u8fd9\u4e2a\u5165\u95e8\u6307\u5357\uff0c\u4ee5\u4f53\u73b0\u8fd9\u4e2a\u751f\u6210\u5668\u7684\u7528\u6cd5\uff1b\u73b0\u5728\u8bf7\u5230<a href="https://github.com/keystonejs/generator-keystone" target="_blank">KeystoneJS Yeoman\u751f\u6210\u5668</a>\u9875\u9762\u9075\u7167\u90a3\u91cc\u7684\u6307\u793a\u884c\u4e8b\u3002</p><p>\u8fd0\u884c<code>yo keystone</code>\u4f1a\u505a\u597d\u4e0b\u9762\u6240\u8bb2\u7684\u5168\u90e8\u5de5\u4f5c\uff0c\u6240\u4ee5\u4f60\u4e00\u65e6\u5f97\u5230\u81ea\u5df1\u7684\u65b0\u9879\u76ee\uff0c\u8bf7\u7ee7\u7eed\u8bfb\u4e0b\u53bb\u4ee5\u4fbf\u4e86\u89e3\u5b83\u505a\u4e86\u4ec0\u4e48\u3002</p><a name="gettingstarted-startinganewproject"></a><h3>\u5f00\u59cb\u4e00\u4e2a\u65b0\u9879\u76ee</h3><p>\u7ed9\u4f60\u7684\u9879\u76ee\u521b\u5efa\u4e00\u4e2a\u65b0\u76ee\u5f55\uff0c\u7136\u540e\u6dfb\u52a0\u4e0b\u9762\u4e24\u4e2a\u6587\u4ef6\uff0c\u5b83\u4eec\u8981\u8d1f\u8d23\u9879\u76ee\u7684\u8bbe\u7f6e\u548c\u542f\u52a8\u4f60\u7684web\u670d\u52a1\u5668\u3002</p><div class="code-header"><h4>package.json</h4><p>\u8fd9\u662f\u7ed9npm\u7684\u9879\u76ee\u63cf\u8ff0\u6587\u4ef6\uff0c\u5305\u62ec\u5b83\u57fa\u4e8e<code>keystone</code>\u8fd9\u4e2a\u4e8b\u5b9e\u3002</p></div><pre><code class="language-javascript">{\n  "name": "my-project",\n  "version": "0.0.1",\n  "private": true,\n  "dependencies": {\n    "keystone": "latest",\n    "underscore": "latest"\n  },\n  "engines": {\n    "node": "0.10.x",\n    "npm": "1.3.x"\n  },\n  "scripts": {\n    "start": "web.js"\n  }\n}</code></pre><p class="note">\u6ce8\u610f\uff0c\u6211\u4eec\u8fd8\u5f15\u5165\u4e86<a href="http://underscorejs.org">underscore\u5e93</a>\uff0c\u56e0\u4e3a\u7a0d\u540e\u4f1a\u7528\u5230\u5b83\u7684\u4e00\u4e9b\u529f\u80fd\u3002\u4f60\u53ef\u4ee5\u5c06<a href="https://npmjs.org">npm</a>\u4e2d\u7684\u4efb\u4f55\u5305\u6dfb\u52a0\u5230<code>package.json</code>\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002</p><div class="code-header"><h4>web.js</h4><p>\u8fd9\u662f\u8fd0\u884c\u6211\u4eec\u7684keystone\u7f51\u7ad9\u7684\u811a\u672c\u3002</p></div><pre><code class="language-javascript">var keystone = require(\'keystone\');\nkeystone.init({\n  \n  \'name\': \'My Project\',\n  \n  \'favicon\': \'public/favicon.ico\',\n  \'less\': \'public\',\n  \'static\': [\'public\'],\n  \n  \'views\': \'templates/views\',\n  \'view engine\': \'jade\',\n  \n  \'auto update\': true,\n  \'mongo\': \'mongodb://localhost/my-project\',\n  \n  \'session\': true,\n  \'auth\': true,\n  \'user model\': \'User\',\n  \'cookie secret\': \'(your secret here)\'\n  \n});\n \nrequire(\'./models\');\n \nkeystone.set(\'routes\', require(\'./routes\'));\n \nkeystone.start();</code></pre><p>\u73b0\u5728\u5728\u4f60\u7684\u63a7\u5236\u53f0\u4e2d\u8fdb\u5165\u9879\u76ee\u6839\u76ee\u5f55\uff08package.json\u6240\u5728\u7684\u4f4d\u7f6e\uff09\uff0c\u8fd0\u884c<code>npm install</code>\u6765\u5b89\u88c5Keystone\u3002</p><p class="note">\u8981\u4e86\u89e3Keystone\u652f\u6301\u7684\u66f4\u591a\u9009\u9879\uff0c\u8bf7\u53c2\u89c1<a href="/zh/docs/configuration">\u914d\u7f6e\u6307\u5357</a>\u3002</p><p class="note">\u6ce8\u610f\uff1a\u4f60\u7684web\u811a\u672c\u8fd8\u4e0d\u80fd\u8fd0\u884c\uff0c\u56e0\u4e3a\u5176\u4e2d\u5305\u542b\u7684\u6a21\u578b\u548c\u8def\u7531\u90fd\u8fd8\u6ca1\u505a\u597d\u3002\u5b83\u5047\u5b9a\u4f60\u4f1a\u9075\u7167\u8fd9\u4e2a\u6307\u5357\u4e2d\u7684\u6307\u793a\u3002</p><div class="contextual-note"><h4>\u81ea\u5e26Express\u548cMongoose</h4><p>\u5982\u679c\u4f60\u60f3\u5728\u9879\u76ee\u4e2d\u5f15\u5165Express\u6216Mongoose\uff0c\u4e0d\u7528\u5b8c\u5168\u7531Keystone\u63d0\u4f9b\u548c\u914d\u7f6e\u7684\uff0c\u4e5f\u53ef\u4ee5\u3002</p><p>\u628a\u5b83\u4eec\u653e\u5728\u9879\u76ee\u7684dependencies\u5217\u8868\u4e2d\uff0c\u7136\u540e\u5206\u522b\u7528 <code>app</code> \u548c <code>mongoose</code> \u53c2\u6570\u63d0\u4f9b\u7ed9Keystone\u3002</p><pre>var express = require(\'express\'),\n    mongoose = require(\'mongoose\'),\n    app = express(),\n    keystone = require(\'keystone\');\n    \n    keystone.set(\'app\', app);\n    keystone.set(\'mongoose\', mongoose);</pre></div><p class="note">\u4e4b\u524d\u7528\u6765\u8bbe\u7f6e\u81ea\u5e26Express\u548cMongoose\u7684 <code>keystone.connect()</code> \u65b9\u6cd5\uff0c\u73b0\u5df2\u8fc7\u671f\u5e76\u4e14\u4f1a\u5728\u672a\u6765\u7684Keystone\u7248\u672c\u4e2d\u79fb\u9664\u3002\u7531\u4e8e\u5347\u7ea7\u81f3Express 4\uff0c`keystone.connect()` \u4e0d\u518d\u5982\u9884\u671f\u822c\u5de5\u4f5c\u3002 \u8bf7\u4f7f\u7528Keystone\u4e2d\u7684 <code>app</code> \u548c <code>mongoose</code> \u53c2\u6570\u6765\u66ff\u4ee3\u3002</p><a name="gettingstarted-projectstructure"></a><h3>\u9879\u76ee\u7ed3\u6784</h3><p>\u5728\u5305\u548cweb\u811a\u672c\u5230\u4f4d\u540e\uff0c\u53ef\u4ee5\u5f00\u59cb\u67b6\u6784\u7a0b\u5e8f\u5269\u4f59\u90e8\u5206\u7684\u5bb9\u5668\u3002\u521b\u5efa\u4e0b\u9762\u8fd9\u4e2a\u76ee\u5f55\u7ed3\u6784\uff1a</p><pre>|--lib\n|  <span>\u5b9a\u5236\u7684\u5e93\u548c\u4ee3\u7801</span>\n|--models\n|  <span>\u7a0b\u5e8f\u7684\u6570\u636e\u5e93\u6a21\u578b</span>\n|--public\n|  <span>\u516c\u5f00\u7684\u9759\u6001\u6587\u4ef6 (css\u3001js\u3001images\u7b49)</span>\n|--routes\n|  |--api\n|  |  <span>\u7a0b\u5e8f\u7684api\u63a7\u5236\u5668</span>\n|  |--views\n|  |  <span>\u7a0b\u5e8f\u7684\u89c6\u56fe\u63a7\u5236\u5668</span>\n|  |--index.js\n|  |  <span>\u521d\u59cb\u5316\u7a0b\u5e8f\u7684\u8def\u7531\u548c\u89c6\u56fe</span>\n|  |--middleware.js\n|  |  <span>\u4e3a\u8def\u7531\u5b9a\u5236\u7684\u4e2d\u95f4\u4ef6</span>\n|--templates\n|  |--includes\n|  |  <span>\u901a\u7528\u7684 .jade \u7ec4\u4ef6\u653e\u8fd9\u91cc</span>\n|  |--layouts\n|  |  <span>\u57fa\u7840 .jade \u5e03\u5c40\u653e\u8fd9\u91cc</span>\n|  |--mixins\n|  |  <span>\u901a\u7528\u7684 .jade mixins\u653e\u8fd9\u91cc</span>\n|  |--views\n|  |  <span>\u7a0b\u5e8f\u7684\u89c6\u56fe\u6a21\u677f</span>\n|--updates\n|  <span>\u6570\u636e\u7ec4\u88c5\u548c\u8fc1\u79fb\u811a\u672c</span>\n|--package.json\n|  <span>\u7ed9npm\u7684\u9879\u76ee\u914d\u7f6e</span>\n|--web.js\n|  <span>\u542f\u52a8\u7a0b\u5e8f\u7684\u4e3b\u811a\u672c</span></pre><p>\u6211\u4eec\u5efa\u8bae\u5c3d\u53ef\u80fd\u5730\u5c06<code>routes/views</code>\u548c<code>templates/views</code>\u76ee\u5f55\u7684\u5185\u90e8\u7ed3\u6784\u505a\u955c\u50cf\u5f0f\u7684\u5bf9\u5e94\uff0c\u8fd9\u6837\u7a0b\u5e8f\u7684\u642d\u5efa\u548c\u7ef4\u62a4\u4f1a\u66f4\u7b80\u5355\u3002</p><div class="contextual-note"><h4>\u7ed3\u6784</h4><p>\u8be5\u6307\u5357\u5047\u5b9a\u4f60\u4f1a\u9075\u5b88\u4e0a\u9762\u7684\u5efa\u8bae\uff0c\u7136\u800cKeystone\u5b9e\u9645\u4e0a\u5bf9\u7ed3\u6784\u6ca1\u6709\u4efb\u4f55\u5f3a\u5236\u6027\u7684\u8981\u6c42\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u968f\u610f\u4fee\u6539\uff0c\u4f7f\u5176\u66f4\u52a0\u9002\u5408\u4f60\u7684\u9879\u76ee\u3002</p></div><a name="models"></a><h2>\u6a21\u578b</h2><p>\u5728\u53ef\u4ee5\u542f\u52a8Keystone\u7a0b\u5e8f\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u4e00\u4e9b\u6570\u636e\u6a21\u578b\u3002</p><p>\u6211\u4eec\u51c6\u5907\u4ece<code>User</code>\u6a21\u578b\u5f00\u59cb\uff0c\u5b83\u5f88\u7279\u522b - \u6709\u4e86\u5b83Keystone\u624d\u80fd\u505a\u8ba4\u8bc1\u548c\u4f1a\u8bdd\u7ba1\u7406\u3002</p><p>\u5728<code>/models</code>\u6587\u4ef6\u5939\u4e0b\u521b\u5efa\u4e0b\u9762\u8fd9\u4e24\u4e2a\u6587\u4ef6\uff1a</p><div class="code-header"><h4>models/index.js</h4><p>\u5728\u8fd9\u4e2a\u811a\u672c\u91cc\u5305\u542b\u4f60\u7684\u6a21\u578b\u3002\u5b83\u4e0d\u9700\u8981\u8f93\u51fa\u4efb\u4f55\u4e1c\u897f\u3002</p></div><pre><code class="language-javascript">require(\'./users.js\');</code></pre><div class="code-header"><h4>models/users.js</h4><p>\u8fd9\u4e2a\u811a\u672c\u521d\u59cb\u5316<code>User</code>\u6a21\u578b\u3002\u5b83\u4e0d\u9700\u8981\u8f93\u51fa\u4efb\u4f55\u4e1c\u897f\uff0c\u4f46\u6a21\u578b<em>\u5fc5\u987b</em>\u7528Keystone\u6ce8\u518c\u3002</p></div><pre><code class="language-javascript">var keystone = require(\'keystone\'),\n    Types = keystone.Field.Types;\n \nvar User = new keystone.List(\'User\');\n \nUser.add({\n    name: { type: Types.Name, required: true, index: true },\n    email: { type: Types.Email, initial: true, required: true, index: true },\n    password: { type: Types.Password, initial: true },\n    canAccessKeystone: { type: Boolean, initial: true }\n});\n \nUser.register();</code></pre><a name="models-authentication"></a><h3>\u8ba4\u8bc1\u548c\u4f1a\u8bdd\u7ba1\u7406</h3><p>\u8981\u8ba9Keystone\u4e3a\u7a0b\u5e8f\u63d0\u4f9b\u8ba4\u8bc1\u548c\u4f1a\u8bdd\u7ba1\u7406\uff0c\u5b83\u9700\u8981\u77e5\u9053\u51e0\u4ef6\u4e8b\u60c5\uff08\u6211\u4eec\u73b0\u5728\u8981\u914d\u7f6e\u7684\uff09</p><p>\u6982\u62ec\u4e00\u4e0b\uff1a</p><ul class="list"><li>\u53c2\u6570<code>user model</code>\u5fc5\u987b\u662fKeystone\u5728\u5176\u4e2d\u67e5\u627e\u7528\u6237\u7684\u6a21\u578b\u540d\u79f0\u3002\u5982\u679c\u4f60\u7684\u6a21\u578b\u7528\u4e86\u5176\u5b83\u540d\u79f0\uff0c\u4e00\u5b9a\u786e\u4fdd\u6b63\u786e\u8bbe\u5b9a\u8fd9\u4e2a\u53c2\u6570\u3002</li><li>\u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u8981\u652f\u6301\u4f1a\u8bdd\u7ba1\u7406\uff0c\u5c06\u53c2\u6570<code>session</code>\u8bbe\u4e3a<strong>true</strong>\u3002\u52a0\u8f7d\u4f1a\u8bdd\u4f1a\u6709\u70b9\u5c0f\u5f00\u9500\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u4e0d\u9700\u8981\u4f1a\u8bdd\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e2a\u5173\u4e86\u3002</li><li>Keystone\u6709\u5185\u7f6e\u7684\u767b\u5f55\u548c\u9000\u51fa\u89c6\u56fe\u3002\u53ef\u4ee5\u5c06\u53c2\u6570<code>auth</code>\u8bbe\u4e3a<strong>true</strong>\u542f\u7528\u5b83\u4eec\u3002\u4f60\u4e5f\u53ef\u4ee5\u5728\u7a0b\u5e8f\u89c6\u56fe\u4e2d\u5b9a\u5236\u767b\u5f55\u548c\u9000\u51fa\u754c\u9762\u3002</li><li>\u4f1a\u8bdd\u662f\u7528\u5b58\u6709\u7528\u6237ID\u7684\u52a0\u5bc6cookie\u6301\u4e45\u5316\u7684\u3002\u4e00\u5b9a\u8981\u5c06\u53c2\u6570<code>cookie secret</code>\u8bbe\u6210\u4e00\u4e2a\u957f\u957f\u7684\u968f\u673a\u5b57\u7b26\u4e32\u3002</li><li>\u7528\u6237\u6a21\u578b\u5fc5\u987b\u6709\u4e2a<code>canAccessKeystone</code>\u5c5e\u6027\uff08\u53ef\u4ee5\u662f\u865a\u62df\u65b9\u6cd5\u6216\u5b58\u50a8\u7684boolean\u578b\u57df\uff09\u6307\u51fa\u7528\u6237\u662f\u5426\u53ef\u4ee5\u8bbf\u95eeKeystone\u7684\u7ba1\u7406\u754c\u9762\u3002</li></ul><h4>\u518d\u8c08\u6570\u636e\u6a21\u578b</h4><p>\u8981\u5b66\u4e60\u5982\u4f55\u8bbe\u7f6e\u7a0b\u5e8f\u7684\u6a21\u578b\uff0c\u4ee5\u53ca\u5217\u8868\u548c\u57df\u7684\u5b8c\u6574\u6587\u6863\uff0c\u8bf7\u53c2\u89c1<a href="/zh/docs/database">\u6570\u636e\u5e93\u6307\u5357</a>\u3002</p><a name="routesviews"></a><h2>\u8def\u7531 &amp; \u89c6\u56fe</h2><p>\u4e00\u822c\u6765\u8bf4\uff0c\u5728\u914d\u7f6e\u7a0b\u5e8f\u4e2d\u7684\u4e0d\u540c\u8def\u7531\uff08\u6216\u89c6\u56fe\uff09\u65f6\uff0c\u5e94\u8be5\u628a\u6240\u6709\u7ed1\u5b9a\u653e\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u7136\u540e\u901a\u7528\u903b\u8f91\uff08\u6216\u4e2d\u95f4\u4ef6\uff09\u653e\u5728\u53e6\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u8fd9\u662f\u6700\u5bb9\u6613\u4e5f\u662f\u6700\u6e05\u723d\u7684\u65b9\u5f0f\u3002</p><p>\u7136\u540e\uff0c\u7ed9\u6bcf\u4e2a\u8def\u7531\u7ed1\u5b9a\u7684\u63a7\u5236\u5668\u5728\u5404\u81ea\u7684\u6587\u4ef6\u4e2d\uff0c\u8ddf\u7ec4\u7ec7\u6e32\u67d3\u89c6\u56fe\u7684\u6a21\u677f\u7684\u65b9\u5f0f\u7c7b\u4f3c\u3002</p><p>Keystone\u7684<code>importer</code>\u548cExpress\u4e2d\u95f4\u4ef6\u7684\u652f\u6301\u4f7f\u5f97\u8fd9\u5f88\u5bb9\u6613\u8bbe\u7f6e\u3002</p><a name="routesviews-settingup"></a><h3>\u8bbe\u7f6e\u8def\u7531\u548c\u4e2d\u95f4\u4ef6</h3><h4>index\u8def\u7531\u63a7\u5236\u5668</h4><p>\u9996\u5148\u521b\u5efa\u4e00\u4e2a<code>routes/index.js</code>\u6587\u4ef6\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u5c06\u7a0b\u5e8f\u7684URL\u6a21\u5f0f\u7ed1\u5b9a\u5230\u63a7\u5236\u5668\u4e0a\uff0c\u4ece\u800c\u5728\u6536\u5230\u8bf7\u6c42\u540e\u8ba9\u63a7\u5236\u5668\u52a0\u8f7d\u548c\u5904\u7406\u6570\u636e\uff0c\u5e76\u6e32\u67d3\u76f8\u5e94\u7684\u6a21\u677f\u3002</p><div class="code-header"><h4>routes/index.js</h4><p>\u8fd9\u6bb5\u811a\u672c\u5f15\u5165\u8def\u7531\u63a7\u5236\u5668\uff0c\u5e76\u5c06\u5b83\u4eec\u7ed1\u5b9a\u5230URL\u4e0a\u3002</p></div><pre><code class="language-javascript">var keystone = require(\'keystone\'),\n    middleware = require(\'./middleware\'),\n    importRoutes = keystone.importer(__dirname);\n \n// \u5e38\u7528\u4e2d\u95f4\u4ef6\nkeystone.pre(\'routes\', middleware.initErrorHandlers);\nkeystone.pre(\'routes\', middleware.initLocals);\nkeystone.pre(\'render\', middleware.flashMessages);\n \n// \u5904\u7406404\u9519\u8bef\nkeystone.set(\'404\', function(req, res, next) {\n    res.notfound();\n});\n \n// \u5904\u7406\u5176\u5b83\u9519\u8bef\nkeystone.set(\'500\', function(err, req, res, next) {\n    var title, message;\n    if (err instanceof Error) {\n        message = err.message;\n        err = err.stack;\n    }\n    res.err(err, title, message);\n});\n \n// \u52a0\u8f7d\u8def\u7531\nvar routes = {\n    views: importRoutes(\'./views\')\n};\n \n// \u7ed1\u5b9a\u8def\u7531\nexports = module.exports = function(app) {\n    \n    app.get(\'/\', routes.views.index);\n    \n}</code></pre><h4>\u9010\u6b65\u89e3\u91caindex\u8def\u7531\u63a7\u5236\u5668</h4><ul><li>\u52a0\u8f7d<code>keystone</code>\u3001<code>middleware.js</code> \u6587\u4ef6 (\u89c1\u4e0b\u65b9)\uff0c\u5e76\u4e3a\u5f53\u524d\u76ee\u5f55\u521b\u5efa\u4e00\u4e2a<code>importer</code></li><li>\u7ed1\u5b9a\u4e2d\u95f4\u4ef6 (\u89c1\u4e0b\u65b9) <ul><li>\u521d\u59cb\u5316\u57fa\u672c\u7684\u9519\u8bef\u5904\u7406\u5668</li><li>\u4e3a\u89c6\u56fe\u6a21\u677f\u521d\u59cb\u5316\u901a\u7528\u7684local\u53d8\u91cf</li><li>\u5728\u89c6\u56fe\u76ee\u6807\u6e32\u67d3\u4e4b\u524d\u4ece\u4f1a\u8bdd\u4e2d\u83b7\u53d6\u63d0\u793a\u6d88\u606f</li></ul></li><li>\u544a\u8bc9Keystone\u5982\u4f55\u5904\u7406<code>404</code>\u548c<code>500</code>\u9519\u8bef</li><li>\u7528importer\u52a0\u8f7d<code>/routes/views</code>\u76ee\u5f55\u4e2d\u7684\u6240\u6709\u8def\u7531\u63a7\u5236\u5668</li><li>\u8f93\u51fa\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5c06index\u8def\u7531\u63a7\u5236\u5668\u7ed1\u5b9a\u5230\u6839url\u2018<code>/</code>\u2019\u7684<code>GET</code>\u8bf7\u6c42\u4e0a<ul><li>\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u7684\u53c2\u6570<code>app</code>\u5c31\u662fexpress\u7684app\uff0c\u6240\u4ee5\u5728express\u4e2d\u7ed1\u5b9a\u8def\u7531\u80fd\u505a\u7684\u4e8b\u60c5\uff0c\u5728\u8fd9\u91cc\u90fd\u53ef\u4ee5\u505a\u3002</li></ul></li></ul><p>\u5e94\u8be5\u5728\u6839\u63a7\u5236\u5668\u4e0b\u9762\u7528<code>app.get</code>\u3001<code>app.post</code> \u6216 <code>app.all</code> \u5c06\u5176\u5b83\u8def\u7531\u63a7\u5236\u5668\u6dfb\u52a0\u5230\u7a0b\u5e8f\u4e2d\u3002</p><a name="routesviews-middleware"></a><h3>\u901a\u7528\u8def\u7531\u4e2d\u95f4\u4ef6</h3><p>\u628a\u4f60\u7684\u901a\u7528\u8def\u7531\u4e2d\u95f4\u4ef6\u653e\u5728\u5355\u72ec\u7684<code>routes/middleware.js</code>\u6587\u4ef6\u4e2d\uff0c\u4ee5\u4fdd\u6301\u8def\u7531index\u7684\u5e72\u51c0\u6574\u6d01\u3002 \u5982\u679c\u4e2d\u95f4\u4ef6\u6587\u4ef6\u592a\u5927\uff0c\u6700\u597d\u628a\u6240\u6709\u91cd\u5927\u529f\u80fd\u91cd\u6784\u5230\u5b9a\u5236\u7684\u6a21\u5757\u4e2d\uff0c\u653e\u5728\u9879\u76ee\u7684<code>/lib</code>\u6587\u4ef6\u5939\u4e0b\u3002</p><p>\u73b0\u5728\u6211\u4eec\u8981\u6dfb\u52a0\u57fa\u672c\u7684\u4e2d\u95f4\u4ef6\uff0c\u5728\u7a0b\u5e8f\u542f\u52a8\u540e\u8fd0\u884c\u9ed8\u8ba4\u7684\u884c\u4e3a\uff1a</p><div class="code-header"><h4>routes/middleware.js</h4><p>\u8fd9\u4e2a\u811a\u672c\u5e94\u8be5\u5305\u542b\u7a0b\u5e8f\u8def\u7531\u7684\u901a\u7528\u4e2d\u95f4\u4ef6</p></div><pre><code class="language-javascript">var _ = require(\'underscore\'),\n    keystone = require(\'keystone\');\n \n/**\n    \u521d\u59cb\u5316\u6807\u51c6\u7684\u89c6\u56felocals\u3002\n    \u5305\u542b\u5e94\u8be5\u5728\u8def\u7531\u63a7\u5236\u5668\u6267\u884c\u4e4b\u524d\u521d\u59cb\u5316\u7684\u6240\u6709\u4e1c\u897f\u3002\n*/\nexports.initLocals = function(req, res, next) {\n    \n    var locals = res.locals;\n    \n    locals.user = req.user;\n    \n    // \u5728\u8fd9\u91cc\u6dfb\u52a0\u4f60\u81ea\u5df1\u7684local\u53d8\u91cf\n    \n    next();\n    \n};\n \n/**\n    \u521d\u59cb\u5316\u9519\u8bef\u5904\u7406\u51fd\u6570\u5230`res`\u4e2d\n*/\nexports.initErrorHandlers = function(req, res, next) {\n    \n    res.err = function(err, title, message) {\n        res.status(500).render(\'errors/500\', {\n            err: err,\n            errorTitle: title,\n            errorMsg: message\n        });\n    }\n    \n    res.notfound = function(title, message) {\n        res.status(404).render(\'errors/404\', {\n            errorTitle: title,\n            errorMsg: message\n        });\n    }\n    \n    next();\n    \n};\n \n/**\n    \u5728\u89c6\u56fe\u6e32\u67d3\u4e4b\u524d\u83b7\u53d6\u5e76\u6e05\u7406flashMessages\n*/\nexports.flashMessages = function(req, res, next) {\n    \n    var flashMessages = {\n        info: req.flash(\'info\'),\n        success: req.flash(\'success\'),\n        warning: req.flash(\'warning\'),\n        error: req.flash(\'error\')\n    };\n    \n    res.locals.messages = _.any(flashMessages, function(msgs) { return msgs.length }) ? flashMessages : false;\n    \n    next();\n    \n};</code></pre><h4>\u4e2d\u95f4\u4ef6\u51fd\u6570</h4><p>Keystone\u5e0c\u671b\u4e2d\u95f4\u4ef6\u51fd\u6570\u63a5\u53d7\u4e0b\u9762\u8fd9\u4e9b\u53c2\u6570\uff1a</p><ul class="options"><li><code>req</code> - express\u8bf7\u6c42\u5bf9\u8c61</li><li><code>res</code> - express\u54cd\u5e94\u5bf9\u8c61</li><li><code>next</code> - \u4e2d\u95f4\u4ef6\u7ed3\u675f\u8fd0\u884c\u65f6\u8c03\u7528\u7684\u65b9\u6cd5 (\u5305\u62ec\u4efb\u4f55\u5185\u90e8\u56de\u8c03)</li></ul><h4>\u652f\u6301\u63d0\u793a\u6d88\u606f\uff08Flash Messages\uff09 (\u4e0d, \u4e0d\u662f\u90a3\u4e2aflash)</h4><p>Keystone\u901a\u8fc7\u4f1a\u8bdd\u652f\u6301\u7ed9\u8bbf\u95ee\u8005\u7684\'flashing\'\u6d88\u606f\u3002\u4e0a\u9762\u7684\u9ed8\u8ba4\u8bbe\u7f6e\u652f\u63014\u79cd\u6d88\u606f\uff0c\u5168\u90fd\u53ef\u4ee5\u505a\u6210\u4e0d\u540c\u7684\u6837\u5f0f\uff1a</p><ul class="options"><li><code>info</code></li><li><code>success</code></li><li><code>warning</code></li><li><code>error</code></li></ul><p>\u4f60\u53ef\u4ee5\u901a\u8fc7\u66f4\u65b0\u4e2d\u95f4\u4ef6\u548c\u6e32\u67d3\u5b83\u4eec\u7684.jade\u6a21\u677f\u8f7b\u677e\u652f\u6301\u5176\u5b83\u7c7b\u578b\u7684\u6d88\u606f\u3002(\u4e0b\u9762\u4f1a\u8bb2\u5230)\u3002</p><p>\u8981\u5728\u8def\u7531\u63a7\u5236\u5668\u4e2d\u4f7f\u7528\u63d0\u793a\u6d88\u606f\uff0c\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a</p><p><code>req.flash(\'info\', \'Some information!\');</code></p><p>\u6d88\u606f\u4f7f\u7528\u4f1a\u8bdd\uff0c\u6240\u4ee5\u5728\u8f6c\u53d1\u540e\u5b83\u4eec\u4e5f\u80fd\u7559\u5b58\u4e0b\u6765\uff0c\u5e76\u4e14\u53ea\u4f1a\u663e\u793a\u7ed9\u7528\u6237\u4e00\u6b21\uff0c\u7279\u522b\u9002\u5408\u7528\u6765\u505a\u72b6\u6001\u6d88\u606f (\u6bd4\u5982 "\u60a8\u7684\u4fee\u6539\u5df2\u7ecf\u4fdd\u5b58") \u6216\u8868\u5355\u6821\u9a8c (\u6bd4\u5982 "\u8bf7\u8f93\u5165\u6709\u6548\u7684email\u5730\u5740")\u3002</p><p>\u4e00\u4e9bKeystone\u529f\u80fd(\u6bd4\u5982\u66f4\u65b0\u5904\u7406\u5668)\u53ef\u4ee5\u81ea\u52a8\u751f\u6210\u63d0\u793a\u6d88\u606f\uff0c \u5e76\u671f\u671b\u6709\u4e0a\u9762\u7684\u90a3\u4e9b\u7c7b\u522b\u3002</p><a name="routesviews-firstview"></a><h3>\u4f60\u7684\u7b2c\u4e00\u4e2a\u89c6\u56fe</h3><p>\u73b0\u5728\u6211\u4eec\u51c6\u5907\u8bbe\u7f6e\u4f60\u7684\u7b2c\u4e00\u4e2a\u8def\u7531\u63a7\u5236\u5668 (\u7ed9index\u9875\u9762)\uff0c\u4ee5\u53ca\u5b83\u8981\u6e32\u67d3\u7684\u6a21\u677f\u3002</p><p>importer (\u4e0a\u9762\u90a3\u4e2a) \u671f\u671b\u4f60\u63d0\u4f9b\u7ed9\u5b83\u7684\u76ee\u5f55\u4e2d\u5305\u542b\u7684 <code>.js</code> \u6216 <code>.coffee</code> \u6587\u4ef6\u8f93\u51fa\u7684\u5355\u4e2a\u65b9\u6cd5\u63a5\u53d7\u4e0b\u9762\u8fd9\u4e9b\u53c2\u6570\uff1a</p><ul class="options"><li><code>req</code> - express\u8bf7\u6c42\u5bf9\u8c61</li><li><code>res</code> - express\u54cd\u5e94\u5bf9\u8c61</li></ul><p>\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u89c6\u56fe\u63a7\u5236\u5668\u975e\u5e38\u7b80\u5355 - \u53ea\u662f\u6e32\u67d3\u4e00\u4e2a\u6a21\u677f\u3002\u521b\u5efa\u50cf\u4e0b\u9762\u8fd9\u6837\u7684<code>routes/views/index.js</code>\u6587\u4ef6\uff1a</p><div class="code-header"><h4>routes/views/index.js</h4><p>home\u9875\u9762\u89c6\u56fe\u7684\u8def\u7531\u63a7\u5236\u5668</p></div><pre><code class="language-javascript">var keystone = require(\'keystone\');\n \nexports = module.exports = function(req, res) {\n    \n    var view = new keystone.View(req, res);\n    \n    view.render(\'index\');\n    \n}</code></pre><a name="routesviews-templates"></a><h3>\u6a21\u677f</h3><p>\u73b0\u5728\u505a\u8def\u7531\u8981\u6e32\u67d3\u7684\u6a21\u677f\u3002<code>render</code>\u65b9\u6cd5\u4f1a\u5728<code>web.js</code>\u4e2d\u6307\u5b9a\u7684<code>views</code>\u76ee\u5f55\u4e0b\u627e\u5bfb\u6a21\u677f\uff0c\u6211\u4eec\u5c06\u5176\u8bbe\u4e3a\u4e86<code>/templates/views</code>\u3002</p><p>\u5728\u8fd9\u4e2a\u6307\u5357\u4e2d\uff0c\u6211\u4eec\u51c6\u5907\u7528<strong>Jade</strong> \u4f5c\u4e3a\u6a21\u677f\u5f15\u64ce\u3002\u8981\u4e86\u89e3Jade\uff0c\u8bf7\u8bbf\u95ee<a href="http://jade-lang.com" target="_blank">jade-lang.org</a>\uff0c\u6216\u8005\u68c0\u51fa\u4f18\u79c0\u7684<a href="http://naltatis.github.io/jade-syntax-docs/" target="_blank">\u6d3b\u7684\u8bed\u6cd5\u6587\u6863</a>\u901a\u8fc7\u4f8b\u5b50\u5b66\u4e60\u3002</p><p>\u5148\u6765\u521b\u5efa<code>templates/views/index.jade</code>\uff1a</p><div class="code-header"><h4>templates/views/index.jade</h4><p>home\u9875\u9762\u89c6\u56fe\u7684\u6a21\u677f</p></div><pre>extends ../layouts/base\n \nblock content\n    h1 Hello World</pre><p>Jade\u6709\u4e9b\u5f88\u68d2\u7684\u529f\u80fd\u53ef\u4ee5\u7b80\u5316\u6a21\u677f - \u5305\u62ec\u7528\u5e03\u5c40\u5b9a\u4e49\u533a\u57df\u3002\u6211\u4eec\u51c6\u5907\u7528\u4e00\u4e2a<code>../common/templates/layout/base.jade</code>\u5e03\u5c40\uff0c\u5728\u4e0a\u9762\u90a3\u4e2a\u6587\u4ef6\u4e2d\u7684\u7b2c\u4e00\u884c\u91cc\uff1a</p><div class="code-header"><h4>templates/layouts/base.jade</h4><p>\u89c6\u56fe\u6a21\u677f\u7684\u57fa\u672c\u5e03\u5c40</p></div><pre><code>include ../mixins/flash-messages\n \ndoctype html\nhtml\n    head\n        meta(charset="utf-8")\n        meta(name="viewport", content="initial-scale=1.0,user-scalable=no,maximum-scale=1,width=device-width")\n        \n        title= title || \'My Keystone Website\'\n        link(rel="shortcut icon", href="/favicon.ico", type="image/x-icon")\n        link(href="/styles/site.min.css", rel="stylesheet")\n        \n        block css\n        block head\n    body\n        \n        #header My Keystone Website\n        \n        #body\n            \n            block intro\n            \n            +flash-messages(messages)\n            \n            block content\n        \n        #footer Powered by &lt;a href=\'http://keystonejs.com\', target=\'_blank\'&gt;KeystoneJS&lt;/a&gt;.\n    \n    script(src=\'/js/lib/jquery/jquery-1.10.2.min.js\')\n    \n    block js</code></pre><p>\u6211\u4eec\u8fd8\u8981\u521b\u5efa\u4e00\u4e2a\u5305\u542bmixin <code>flash-messages</code>\u7684\u6a21\u677f<code>templates/mixins/flash-messages.jade</code>\u3002\u5728\u5e03\u5c40\u6216\u89c6\u56fe\u6a21\u677f\u4e2d\u5305\u542bmixins\u53ef\u4ee5\u4fdd\u6301\u5e03\u5c40\u548c\u89c6\u56fe\u6587\u4ef6\u7684\u6574\u6d01\uff0c\u5e76\u4e14mixin\u53ef\u4ee5\u5728\u591a\u4e2a\u89c6\u56fe\u4e2d\u91cd\u7528\u3002</p><div class="code-header"><h4>templates/mixins/flash-messages.jade</h4><p>\u6211\u4eec\u7684flash-messages mixin</p></div><pre><code>mixin flash-messages(messages)\n    if messages\n        #flash-messages.container\n            each message in messages.info\n                +flash-message(message, \'info\')\n            each message in messages.success\n                +flash-message(message, \'success\')\n            each message in messages.warning\n                +flash-message(message, \'warning\')\n            each message in messages.error\n                +flash-message(message, \'danger\')\n                \nmixin flash-message(message, type)\n    div(class=\'alert alert-\' + type)\n        if utils.isObject(message)\n            if message.title\n                h4= message.title\n            if message.detail\n                p= message.detail\n            if message.list\n                ul\n                    each item in message.list\n                        li= item\n        else\n            = message</code></pre><a name="templates_other"></a><div class="contextual-note"><h4>\u4f7f\u7528\u5176\u5b83\u6a21\u677f\u8bed\u8a00</h4><p>KeystoneJS\u652f\u6301<a href=\'http://expressjs.com/api.html#app.engine\', target=\'_blank\'>express\u652f\u6301\u7684\u6240\u6709\u6a21\u677f\u8bed\u8a00</a>\u3002</p><p>\u7528\u53c2\u6570<code>view engine</code>\u6307\u660e\u4f60\u8981\u7528\u7684\u6a21\u677f\u8bed\u8a00(\u9ed8\u8ba4\u4e3a <code class="data-type">jade</code>)\u3002</p><p>\u5982\u679c\u4f60\u60f3\u7528\u5b9a\u5236\u7684\u6a21\u677f\u5f15\u64ce\uff0c\u4e5f\u8981\u8bbe\u5b9a<code>custom engine</code> \u53c2\u6570\u3002\u6bd4\u5982\u8bf4\uff0cexpress\u662f\u652f\u6301<a href="http://embeddedjs.com/">ejs</a>\u7684\uff0c \u4f46\u4f60\u53ef\u80fd\u60f3\u7528<a href="https://github.com/RandomEtc/ejs-locals">ejs.locals</a> \u4f5c\u4e3a\u6a21\u677f\u5f15\u64ce\uff0c\u4ee5\u5229\u7528\u5176\u6269\u5c55\u7684\u529f\u80fd\u3002</p><pre><code class="language-javascript">// \u4fee\u6539 web.js \u4f7f\u7528\u5b9a\u5236\u7684\u6a21\u677f\u5f15\u64ceejs-locals\u3002\nvar keystone = require(\'keystone\');\nvar engine   = require(\'ejs-locals\');\nkeystone.init({\n  ...\n  \'custom engine\': engine,\n  \'view engine\': \'ejs\',\n  ...\n});</code></pre></div><a name="routesviews-publicassets"></a><h3>\u516c\u5171\u8d44\u4ea7</h3><p>\u4f60\u60f3\u6dfb\u52a0\u81ea\u5df1\u7684css\u3001javascript\u3001\u56fe\u7247\u548c\u5176\u5b83\u6587\u4ef6\u5230\u9879\u76ee\u4e2d\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5f15\u5165\u4e86<code>/styles/site.min.css</code>\u548c<code>/js/lib/jquery-1.10.2.min.js</code>\u3002</p><p>Keystone\u53ef\u4ee5\u5bf9\u5916\u63d0\u4f9b\u6240\u6709\u653e\u5728<code>public</code>\u76ee\u5f55\u4e0b\u7684\u9759\u6001\u8d44\u6e90\u3002\u8fd9\u4e2a\u8def\u5f84\u662f\u5728<code>web.js</code>\u4e2d\u7531<code>static</code>\u53c2\u6570\u6307\u5b9a\u7684\u3002</p><p>\u5982\u679c\u5728<code>public</code>\u6587\u4ef6\u5939\u4e0b\u6709<code>.less</code>\u6587\u4ef6\uff0c\u5b83\u8fd8\u4f1a\u81ea\u52a8\u751f\u6210\u76f8\u5e94\u7684<code>.css</code>\u6216\u7f29\u5c0f\u5316\u7684<code>.min.css</code>\u6587\u4ef6\uff0c \u8fd9\u4e2a\u5728<code>web.js</code>\u4e2d\u7531<code>less</code>\u53c2\u6570\u6307\u5b9a\u3002\u8981\u6df1\u5165\u4e86\u89e3LESS\uff0c\u8bf7\u53c2\u89c1<a href="http://lesscss.org" target="_blank">lesscss.org</a>\u3002</p><a name="runningyourapp"></a><h2>\u8fd0\u884c\u7a0b\u5e8f</h2><p>\u73b0\u5728(\u51e0\u4e4e)\u5df2\u7ecf\u51c6\u5907\u597d\u8fd0\u884c\u4f60\u7684\u7a0b\u5e8f\u4e86\uff01\u7136\u800c\u5728\u8fd0\u884c\u4e4b\u524d\uff0c\u6211\u4eec\u5e94\u8be5\u6dfb\u52a0\u4e00\u4e2a<strong>User</strong>\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u767b\u5f55\u5230Keystone\u7684\u7ba1\u7406\u754c\u9762\u4e2d\u3002</p><a name="runningyourapp-writingupdates"></a><h3>\u7f16\u5199\u66f4\u65b0</h3><p>\u4e3a\u6b64\u6211\u4eec\u5c06\u8981\u521b\u5efa\u4e00\u4e2a\u66f4\u65b0\u811a\u672c\uff0cKeystone\u4f1a\u5728\u542f\u52a8web\u670d\u52a1\u5668\u4e4b\u524d\u81ea\u52a8\u8fd0\u884c\u5b83\u3002</p><p>\u5728<code>web.js</code>\u4e2d\u8bbe\u5b9a\u53c2\u6570<code>auto update</code>\u5c31\u53ef\u4ee5\u542f\u7528Keystone\u7684\u81ea\u52a8\u66f4\u65b0\u529f\u80fd\u3002</p><p>\u5f53\u8fd9\u4e2a\u53c2\u6570\u88ab\u8bbe\u4e3a<code>true</code>\u65f6\uff0cKeystone\u4f1a\u626b\u63cf<code>updates</code>\u76ee\u5f55\u5bfb\u627e<code>.js</code>\u6587\u4ef6\uff0c\u6bcf\u4e2a\u6587\u4ef6\u90fd\u5e94\u8be5\u8f93\u51fa\u4e00\u4e2a\u5355\u53c2\u65b9\u6cd5\uff1a</p><ul><li><code>next</code> - \u66f4\u65b0\u7ed3\u675f\u540e\u8c03\u7528\u7684\u65b9\u6cd5 (\u5305\u62ec\u6240\u6709\u5185\u90e8\u8c03\u7528)</li></ul><p>\u66f4\u65b0\u662f\u7528<a href="http://semver.org" target="_blank">\u8bed\u4e49\u7248\u672c</a>\u6392\u5e8f\u7684\uff0c\u5e76\u4e14Keystone\u53ea\u4f1a\u8fd0\u884c\u5b83\u4eec\u4e00\u6b21 (\u6210\u529f\u6267\u884c\u7684\u66f4\u65b0\u4f1a\u5b58\u5728\u4f60\u7684\u6570\u636e\u5e93\u91cc\uff0c\u4e00\u4e2a\u540d\u4e3a<code>app_updates</code>\u7684\u96c6\u5408\u4e2d)\u3002</p><p>\u66f4\u65b0\u6587\u4ef6\u540d\u5e94\u8be5\u7b26\u5408<code>x.x.x-description.js</code>\u7684\u6a21\u5f0f - \u6240\u6709\u8ddf\u5728\u7b2c\u4e00\u4e2a\u8fde\u5b57\u7b26\u4e4b\u540e\u7684\u5b57\u7b26\u4e32\u90fd\u4f1a\u88ab\u5ffd\u7565\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5728\u90a3\u91cc\u63cf\u8ff0\u8fd9\u4e2a\u66f4\u65b0\u3002</p><p>\u6240\u4ee5\uff0c\u4e3a\u4e86\u5728\u7a0b\u5e8f\u7b2c\u4e00\u6b21\u542f\u7528\u65f6\u81ea\u52a8\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u7ba1\u7406\u5458\u7528\u6237\uff0c\u6211\u4eec\u8981\u521b\u5efa\u4e00\u4e2a<code>updates/0.0.1-admin.js</code>\u6587\u4ef6\uff1a</p><div class="code-header"><h4>updates/0.0.1-admin.js</h4><p>\u6dfb\u52a0\u7b2c\u4e00\u4e2a\u7ba1\u7406\u5458\u7684\u66f4\u65b0\u811a\u672c (\u6539\u6210\u4f60\u81ea\u5df1\u7684\u7528\u6237\u540d\u3001email\u548c\u5bc6\u7801)</p></div><pre><code class="language-javascript">var keystone = require(\'keystone\'),\n    User = keystone.list(\'User\');\n \nexports = module.exports = function(done) {\n    \n    new User.model({\n        name: { first: \'Admin\', last: \'User\' },\n        email: \'admin@keystonejs.com\',\n        password: \'admin\',\n        canAccessKeystone: true\n    }).save(done);\n    \n};</code></pre><p class="note">\u4f60\u53ef\u80fd\u4e0d\u60f3\u628a\u771f\u5b9e\u5bc6\u7801\u653e\u5728\u4ee3\u7801\u4e2d\uff0c\u6240\u4ee5\u6700\u597d\u5c06\u9ed8\u8ba4\u5bc6\u7801\u8bbe\u7684\u7b80\u5355\u70b9\uff0c\u7136\u540e\u5728\u542f\u52a8\u7a0b\u5e8f\u540e\u767b\u5f55\u5230Keystone\u7684\u7ba1\u7406\u754c\u9762\u4e2d\u53bb\u4fee\u6539\u5bc6\u7801\u3002</p><a name="runningyourapp-startingkeystone"></a><h3>\u542f\u52a8Keystone</h3><p>\u73b0\u5728\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u5728\u9879\u76ee\u4e3b\u6587\u4ef6\u5939\u4e0b\u6267\u884c\u8fd9\u4e2a\u547d\u4ee4\u8fd0\u884c\u4f60\u7684\u7a0b\u5e8f\u5427\uff1a</p><p><code>node web</code></p><p>Keystone\u4f1a\u81ea\u52a8\u5e94\u7528\u8fd9\u4e9b\u66f4\u65b0\uff0c\u7136\u540e\u5728\u9ed8\u8ba4\u7aef\u53e33000\u4e0a\u542f\u52a8web\u670d\u52a1\u5668\u3002</p><p>\u6253\u5f00\u6d4f\u89c8\u5668\u8bbf\u95ee\u4f60\u7684\u9996\u9875<a href="http://localhost:3000" target="_blank">localhost:3000</a>\u3002\u4f60\u5e94\u8be5\u80fd\u770b\u5230\u6211\u4eec\u7684<strong>Hello World!</strong>\u6d88\u606f\u3002</p><p>\u8981\u767b\u5f55Keystone\u7684\u7ba1\u7406\u754c\u9762\uff0c\u8bf7\u8bbf\u95ee<a href="http://localhost:3000/keystone" target="_blank">localhost:3000/keystone</a>\u3002\u7528\u4f60\u653e\u5728\u4e0a\u9762\u7684\u66f4\u65b0\u811a\u672c\u91cc\u7684email\u548c\u5bc6\u7801\u767b\u5f55\uff0c\u4f60\u5c31\u80fd\u8fdb\u5165Keystone\u7ba1\u7406\u754c\u9762\u7684\u9996\u9875\u4e86\u3002</p><a name="runningyourapp-nextstep"></a><h3>\u4e0b\u4e00\u6b65</h3><p>... \u641e\u5b9a\u4e86\uff01\u597d\u5427\uff0c\u5b9e\u9645\u4e0a\u8fd8\u6ca1\u6709\u3002\u73b0\u5728\u8be5\u5f00\u59cb\u642d\u5efa\u4f60\u7684\u7a0b\u5e8f\u4e86\u3002\u8981\u4e86\u89e3Keystone\u652f\u6301\u7684\u5217\u8868\u53c2\u6570\u548c\u57df\u7c7b\u578b\uff0c\u8bf7\u8bbf\u95ee<a href="/zh/docs/database">\u6570\u636e\u5e93\u6307\u5357</a>\u3002</p><p>\u4f60\u8fd8\u5e94\u8be5<a href="https://twitter.com/keystonejs" target="_blank">\u5728Twitter\u4e0a\u5173\u6ce8@KeystoneJS</a>\uff0c\u4ee5\u4fbf\u53ca\u65f6\u4e86\u89e3\u76f8\u5173\u65b0\u95fb\u548c\u66f4\u65b0\uff0c<a href="https://github.com/keystonejs/keystone/" target="_blank">\u5728GitHub\u6807\u8bb0 KeystoneJS</a>\uff0c\u5e76\u5728<a href="https://groups.google.com/d/forum/keystonejs" target="_blank">KeystoneJS\u8c37\u6b4c\u7fa4\u7ec4</a>\u8ba8\u8bba\u8fd9\u4e2a\u6307\u5357(\u6216\u8005\u4e0eKeystoneJS\u6709\u5173\u7684\u4e00\u5207)\u3002</p><p>\u5728\u8303\u4f8b\u9875\u9762\u4e0a\u8fd8\u6709\u66f4\u591a\u7684<a href="/zh/examples">\u8303\u4f8b\u548c\u6837\u672c\u4ee3\u7801</a>\u3002</p><p>\u4eab\u53d7\u4f7f\u7528KeystoneJS\u7684\u8fc7\u7a0b\u5427\uff01</p></div></div></div></div>');
}.call(this,"docsnav"in f?f.docsnav:"undefined"!=typeof docsnav?docsnav:void 0,"docssection"in f?f.docssection:"undefined"!=typeof docssection?docssection:void 0),d.join("")},"zh/pages/docs/index":function(a){var c,d=[],e={},f=a||{};return function(a,f){e.docsnav=c=function(e){this&&this.block,this&&this.attributes||{};d.push('<div class="visible-xs"><ul class="nav-toggle">'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}}}.call(this),d.push('</ul></div><nav class="docs-sidebar hidden-xs"><ul class="sidebar-nav"><li'+b.cls(["introduction"==e.value?"active":null],[!0])+'><a href="/zh/docs" class="nav-heading">\u6b22\u8fce</a></li>'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}}}.call(this),d.push("</ul>"),"introduction"!=e.value&&(d.push('<hr/><ul class="sidebar-nav">'),function(){var b=a;if("number"==typeof b.length)for(var c=0,f=b.length;f>c;c++){var g=b[c];g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">\u4ecb\u7ecd</a></li><li><a href="#introduction-prerequisites">\u524d\u63d0\u6761\u4ef6</a></li><li><a href="#introduction-productionvsdevelopment">\u751f\u4ea7 vs \u5f00\u53d1</a></li><li class="nav-label"><a href="#gettingstarted">\u5165\u95e8</a></li><li><a href="#gettingstarted-usingyeoman">\u4f7f\u7528Yeoman\u751f\u6210\u5668</a></li><li><a href="#gettingstarted-startinganewproject">\u5f00\u59cb\u4e00\u4e2a\u65b0\u9879\u76ee</a></li><li><a href="#gettingstarted-projectstructure">\u9879\u76ee\u7ed3\u6784</a></li><li class="nav-label"><a href="#models">\u6a21\u578b</a></li><li><a href="#models-authentication">\u8ba4\u8bc1\u4e0e\u4f1a\u8bdd\u7ba1\u7406</a></li><li class="nav-label"><a href="#routesviews">\u8def\u7531 &amp; \u89c6\u56fe</a></li><li><a href="#routesviews-settingup">\u8bbe\u7f6e\u8def\u7531\u548c\u4e2d\u95f4\u4ef6</a></li><li><a href="#routesviews-middleware">\u5e38\u7528\u8def\u7531\u4e2d\u95f4\u4ef6</a></li><li><a href="#routesviews-firstview">\u4f60\u7684\u7b2c\u4e00\u4e2a\u89c6\u56fe</a></li><li><a href="#routesviews-templates">\u6a21\u677f</a></li><li><a href="#routesviews-publicassets">\u516c\u5171\u8d44\u4ea7</a></li><li class="nav-label"><a href="#runningyourapp">\u8fd0\u884cApp</a></li><li><a href="#runningyourapp-writingupdates">\u7f16\u5199\u66f4\u65b0</a></li><li><a href="#runningyourapp-startingkeystone">\u542f\u52a8Keystone</a></li><li><a href="#runningyourapp-nextstep">\u4e0b\u4e00\u6b65</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone \u53c2\u6570</a></li><li><a href="#options-concepts">\u8bbe\u7f6e\u53c2\u6570</a></li><li><a href="#options-project">\u9879\u76ee\u53c2\u6570</a></li><li><a href="#options-server">Web\u670d\u52a1\u5668\u53c2\u6570</a></li><li><a href="#options-ssl">SSL\u53c2\u6570</a></li><li><a href="#options-database">\u6570\u636e\u5e93\u4e0e\u7528\u6237\u8ba4\u8bc1\u53c2\u6570</a></li><li><a href="#options-unix-socket">Unix Socket\u53c2\u6570</a></li><li><a href="#options-ui">\u7ba1\u7406\u5458\u754c\u9762\u53c2\u6570</a></li><li class="nav-label"><a href="#services">\u670d\u52a1</a></li><li><a href="#services-google-analytics">\u8c37\u6b4c\u5206\u6790</a></li><li><a href="#services-google-maps">\u8c37\u6b4c\u5730\u56fe</a></li><li><a href="#services-amazons3">\u4e9a\u9a6c\u900a S3</a></li><li><a href="#services-azure">\u5fae\u8f6fAzure\u5b58\u50a8</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">\u5e94\u7528\u7a0b\u5e8f\u66f4\u65b0</a></li><li class="nav-label"><a href="#headless">\u7981\u7528\u7ba1\u7406\u5458\u754c\u9762</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">\u6982\u5ff5</a></li><li class="nav-label"><a href="#lists">\u5217\u8868</a></li><li><a href="#lists-usage">\u7528\u6cd5</a></li><li><a href="#lists-example">\u793a\u4f8b</a></li><li><a href="#lists-options">List\u53c2\u6570</a></li><li><a href="#lists-plugins">Schema\u63d2\u4ef6</a></li><li><a href="#lists-querying">\u67e5\u8be2\u6570\u636e</a></li><li><a href="#lists-paginate">\u5206\u9875\u67e5\u8be2</a></li><li><a href="#lists-creating">\u521b\u5efa\u6761\u76ee</a></li><li><a href="#lists-deleting">\u5220\u9664\u6761\u76ee</a></li><li class="nav-label"><a href="#headings">\u6807\u9898</a></li><li class="nav-label"><a href="#fields">\u57df</a></li><li><a href="#fields-overview">\u6982\u89c8</a></li><li><a href="#fields-options">\u57df\u53c2\u6570</a></li><li><a href="#fields-conditional">\u57df\u6761\u4ef6</a></li><li><a href="#fields-watching">\u57df\u76d1\u542c</a></li><li><a href="#fields-underscoremethods">Underscore\u65b9\u6cd5</a></li><li class="nav-label"><a href="#relationships">\u5173\u7cfb</a></li><li><a href="#relationship-fields">\u5173\u7cfb\u57df</a></li><li><a href="#relationship-definitions">\u5173\u7cfb\u5b9a\u4e49</a></li><li><a href="#relationship-queries">\u52a0\u8f7d\u76f8\u5173\u6761\u76ee</a></li><li class="nav-label"><a href="#fieldtypes">\u57df\u7c7b\u578b</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li></ul>')}else{var f=0;for(var c in b){f++;var g=b[c];g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">\u4ecb\u7ecd</a></li><li><a href="#introduction-prerequisites">\u524d\u63d0\u6761\u4ef6</a></li><li><a href="#introduction-productionvsdevelopment">\u751f\u4ea7 vs \u5f00\u53d1</a></li><li class="nav-label"><a href="#gettingstarted">\u5165\u95e8</a></li><li><a href="#gettingstarted-usingyeoman">\u4f7f\u7528Yeoman\u751f\u6210\u5668</a></li><li><a href="#gettingstarted-startinganewproject">\u5f00\u59cb\u4e00\u4e2a\u65b0\u9879\u76ee</a></li><li><a href="#gettingstarted-projectstructure">\u9879\u76ee\u7ed3\u6784</a></li><li class="nav-label"><a href="#models">\u6a21\u578b</a></li><li><a href="#models-authentication">\u8ba4\u8bc1\u4e0e\u4f1a\u8bdd\u7ba1\u7406</a></li><li class="nav-label"><a href="#routesviews">\u8def\u7531 &amp; \u89c6\u56fe</a></li><li><a href="#routesviews-settingup">\u8bbe\u7f6e\u8def\u7531\u548c\u4e2d\u95f4\u4ef6</a></li><li><a href="#routesviews-middleware">\u5e38\u7528\u8def\u7531\u4e2d\u95f4\u4ef6</a></li><li><a href="#routesviews-firstview">\u4f60\u7684\u7b2c\u4e00\u4e2a\u89c6\u56fe</a></li><li><a href="#routesviews-templates">\u6a21\u677f</a></li><li><a href="#routesviews-publicassets">\u516c\u5171\u8d44\u4ea7</a></li><li class="nav-label"><a href="#runningyourapp">\u8fd0\u884cApp</a></li><li><a href="#runningyourapp-writingupdates">\u7f16\u5199\u66f4\u65b0</a></li><li><a href="#runningyourapp-startingkeystone">\u542f\u52a8Keystone</a></li><li><a href="#runningyourapp-nextstep">\u4e0b\u4e00\u6b65</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone \u53c2\u6570</a></li><li><a href="#options-concepts">\u8bbe\u7f6e\u53c2\u6570</a></li><li><a href="#options-project">\u9879\u76ee\u53c2\u6570</a></li><li><a href="#options-server">Web\u670d\u52a1\u5668\u53c2\u6570</a></li><li><a href="#options-ssl">SSL\u53c2\u6570</a></li><li><a href="#options-database">\u6570\u636e\u5e93\u4e0e\u7528\u6237\u8ba4\u8bc1\u53c2\u6570</a></li><li><a href="#options-unix-socket">Unix Socket\u53c2\u6570</a></li><li><a href="#options-ui">\u7ba1\u7406\u5458\u754c\u9762\u53c2\u6570</a></li><li class="nav-label"><a href="#services">\u670d\u52a1</a></li><li><a href="#services-google-analytics">\u8c37\u6b4c\u5206\u6790</a></li><li><a href="#services-google-maps">\u8c37\u6b4c\u5730\u56fe</a></li><li><a href="#services-amazons3">\u4e9a\u9a6c\u900a S3</a></li><li><a href="#services-azure">\u5fae\u8f6fAzure\u5b58\u50a8</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">\u5e94\u7528\u7a0b\u5e8f\u66f4\u65b0</a></li><li class="nav-label"><a href="#headless">\u7981\u7528\u7ba1\u7406\u5458\u754c\u9762</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">\u6982\u5ff5</a></li><li class="nav-label"><a href="#lists">\u5217\u8868</a></li><li><a href="#lists-usage">\u7528\u6cd5</a></li><li><a href="#lists-example">\u793a\u4f8b</a></li><li><a href="#lists-options">List\u53c2\u6570</a></li><li><a href="#lists-plugins">Schema\u63d2\u4ef6</a></li><li><a href="#lists-querying">\u67e5\u8be2\u6570\u636e</a></li><li><a href="#lists-paginate">\u5206\u9875\u67e5\u8be2</a></li><li><a href="#lists-creating">\u521b\u5efa\u6761\u76ee</a></li><li><a href="#lists-deleting">\u5220\u9664\u6761\u76ee</a></li><li class="nav-label"><a href="#headings">\u6807\u9898</a></li><li class="nav-label"><a href="#fields">\u57df</a></li><li><a href="#fields-overview">\u6982\u89c8</a></li><li><a href="#fields-options">\u57df\u53c2\u6570</a></li><li><a href="#fields-conditional">\u57df\u6761\u4ef6</a></li><li><a href="#fields-watching">\u57df\u76d1\u542c</a></li><li><a href="#fields-underscoremethods">Underscore\u65b9\u6cd5</a></li><li class="nav-label"><a href="#relationships">\u5173\u7cfb</a></li><li><a href="#relationship-fields">\u5173\u7cfb\u57df</a></li><li><a href="#relationship-definitions">\u5173\u7cfb\u5b9a\u4e49</a></li><li><a href="#relationship-queries">\u52a0\u8f7d\u76f8\u5173\u6761\u76ee</a></li><li class="nav-label"><a href="#fieldtypes">\u57df\u7c7b\u578b</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li></ul>')}}}.call(this),d.push("</ul>")),d.push("</nav>")},d.push('<div class="page-header"><div class="container"><h1>\u6587\u6863</h1><p class="lead">\u5b66\u4e60\u5982\u4f55\u5728Node.js\u4e2d\u642d\u5efa\u6570\u636e\u5e93\u9a71\u52a8\u7684\u7f51\u7ad9\u3001\u5e94\u7528\u7a0b\u5e8f\u548cAPI\u3002</p></div></div><div class="container"><div class="row"><div class="col-sm-3">'),e.docsnav(f),d.push('</div><div class="col-sm-9"><div class="docs-content"><h2>\u6b22\u8fce</h2><h3>\u6211\u4eec\u5f00\u59cb\u5427</h3><p class="lead text-muted">\u7528\u5de6\u4fa7\u7684\u5bfc\u822a\u680f\u9009\u62e9\u6587\u6863\u7684\u4e09\u4e2a\u4e3b\u8981\u90e8\u5206\uff1a\u5165\u95e8\u3001\u914d\u7f6e\u548c\u6570\u636e\u5e93\u3002</p><div class="row"><div class="col-sm-12 col-md-4"><div class="feature-panel"><div class="feature-content"><h4><a href="/zh/docs/getting-started">\u5165\u95e8</a></h4><p>\u5165\u95e8\u6307\u5357\u4f1a\u9010\u6b65\u4ecb\u7ecd\u5982\u4f55\u624b\u52a8\u642d\u5efa\u4e00\u4e2aKeystoneJS\u7f51\u7ad9\u3002\u8fd9\u91cc\u662f\u5f88\u597d\u7684\u8d77\u70b9\u3002</p></div></div></div><div class="col-sm-12 col-md-4"><div class="feature-panel"><div class="feature-content"><h4><a href="/zh/docs/configuration">\u914d\u7f6e</a></h4><p>\u5728\u4f60\u719f\u6089\u4e86KeystoneJS\u4e4b\u540e\uff0c\u53ef\u4ee5\u5f00\u59cb\u914d\u7f6e\u4e86\u3002\u6709\u5f88\u591a\u53ef\u80fd\u7684\u8bbe\u5b9a\u548c\u670d\u52a1\u8ba9\u4f60\u642d\u5efa\u81ea\u5df1\u7684\u5e94\u7528\u6216\u7f51\u7ad9\u3002</p></div></div></div><div class="col-sm-12 col-md-4"><div class="feature-panel"><div class="feature-content"><h4><a href="/zh/docs/database">\u6570\u636e\u5e93</a></h4><p>KeystoneJS\u4ee5Mongoose\u7684\u6a21\u5f0f\u4e3a\u57fa\u7840\u521b\u5efa\u4e86"\u5217\u8868"\uff0c\u5176\u4e2d\u5305\u542b\u6761\u76ee\u3002\u5728\u7ba1\u7406\u754c\u9762\u4e2d\u53ef\u4ee5\u8bbf\u95ee\u5230\u5217\u8868\u3002</p></div></div></div></div></div></div></div></div>')}.call(this,"docsnav"in f?f.docsnav:"undefined"!=typeof docsnav?docsnav:void 0,"docssection"in f?f.docssection:"undefined"!=typeof docssection?docssection:void 0),d.join("")},"zh/pages/docs/views":function(a){var c,d=[],e={},f=a||{};return function(a,f){e.docsnav=c=function(e){this&&this.block,this&&this.attributes||{};d.push('<div class="visible-xs"><ul class="nav-toggle">'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.labelsm)?"":c)+"</a></li>")}}}.call(this),d.push('</ul></div><nav class="docs-sidebar hidden-xs"><ul class="sidebar-nav"><li'+b.cls(["introduction"==e.value?"active":null],[!0])+'><a href="/zh/docs" class="nav-heading">\u6b22\u8fce</a></li>'),function(){var f=a;if("number"==typeof f.length)for(var g=0,h=f.length;h>g;g++){var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}else{var h=0;for(var g in f){h++;var i=f[g];d.push("<li"+b.cls([e.value==i.value?"active":null],[!0])+"><a"+b.attr("href",i.path,!0,!1)+' class="nav-heading">'+b.escape(null==(c=i.label)?"":c)+"</a></li>")}}}.call(this),d.push("</ul>"),"introduction"!=e.value&&(d.push('<hr/><ul class="sidebar-nav">'),function(){var b=a;if("number"==typeof b.length)for(var c=0,f=b.length;f>c;c++){var g=b[c];g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">\u4ecb\u7ecd</a></li><li><a href="#introduction-prerequisites">\u524d\u63d0\u6761\u4ef6</a></li><li><a href="#introduction-productionvsdevelopment">\u751f\u4ea7 vs \u5f00\u53d1</a></li><li class="nav-label"><a href="#gettingstarted">\u5165\u95e8</a></li><li><a href="#gettingstarted-usingyeoman">\u4f7f\u7528Yeoman\u751f\u6210\u5668</a></li><li><a href="#gettingstarted-startinganewproject">\u5f00\u59cb\u4e00\u4e2a\u65b0\u9879\u76ee</a></li><li><a href="#gettingstarted-projectstructure">\u9879\u76ee\u7ed3\u6784</a></li><li class="nav-label"><a href="#models">\u6a21\u578b</a></li><li><a href="#models-authentication">\u8ba4\u8bc1\u4e0e\u4f1a\u8bdd\u7ba1\u7406</a></li><li class="nav-label"><a href="#routesviews">\u8def\u7531 &amp; \u89c6\u56fe</a></li><li><a href="#routesviews-settingup">\u8bbe\u7f6e\u8def\u7531\u548c\u4e2d\u95f4\u4ef6</a></li><li><a href="#routesviews-middleware">\u5e38\u7528\u8def\u7531\u4e2d\u95f4\u4ef6</a></li><li><a href="#routesviews-firstview">\u4f60\u7684\u7b2c\u4e00\u4e2a\u89c6\u56fe</a></li><li><a href="#routesviews-templates">\u6a21\u677f</a></li><li><a href="#routesviews-publicassets">\u516c\u5171\u8d44\u4ea7</a></li><li class="nav-label"><a href="#runningyourapp">\u8fd0\u884cApp</a></li><li><a href="#runningyourapp-writingupdates">\u7f16\u5199\u66f4\u65b0</a></li><li><a href="#runningyourapp-startingkeystone">\u542f\u52a8Keystone</a></li><li><a href="#runningyourapp-nextstep">\u4e0b\u4e00\u6b65</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone \u53c2\u6570</a></li><li><a href="#options-concepts">\u8bbe\u7f6e\u53c2\u6570</a></li><li><a href="#options-project">\u9879\u76ee\u53c2\u6570</a></li><li><a href="#options-server">Web\u670d\u52a1\u5668\u53c2\u6570</a></li><li><a href="#options-ssl">SSL\u53c2\u6570</a></li><li><a href="#options-database">\u6570\u636e\u5e93\u4e0e\u7528\u6237\u8ba4\u8bc1\u53c2\u6570</a></li><li><a href="#options-unix-socket">Unix Socket\u53c2\u6570</a></li><li><a href="#options-ui">\u7ba1\u7406\u5458\u754c\u9762\u53c2\u6570</a></li><li class="nav-label"><a href="#services">\u670d\u52a1</a></li><li><a href="#services-google-analytics">\u8c37\u6b4c\u5206\u6790</a></li><li><a href="#services-google-maps">\u8c37\u6b4c\u5730\u56fe</a></li><li><a href="#services-amazons3">\u4e9a\u9a6c\u900a S3</a></li><li><a href="#services-azure">\u5fae\u8f6fAzure\u5b58\u50a8</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">\u5e94\u7528\u7a0b\u5e8f\u66f4\u65b0</a></li><li class="nav-label"><a href="#headless">\u7981\u7528\u7ba1\u7406\u5458\u754c\u9762</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">\u6982\u5ff5</a></li><li class="nav-label"><a href="#lists">\u5217\u8868</a></li><li><a href="#lists-usage">\u7528\u6cd5</a></li><li><a href="#lists-example">\u793a\u4f8b</a></li><li><a href="#lists-options">List\u53c2\u6570</a></li><li><a href="#lists-plugins">Schema\u63d2\u4ef6</a></li><li><a href="#lists-querying">\u67e5\u8be2\u6570\u636e</a></li><li><a href="#lists-paginate">\u5206\u9875\u67e5\u8be2</a></li><li><a href="#lists-creating">\u521b\u5efa\u6761\u76ee</a></li><li><a href="#lists-deleting">\u5220\u9664\u6761\u76ee</a></li><li class="nav-label"><a href="#headings">\u6807\u9898</a></li><li class="nav-label"><a href="#fields">\u57df</a></li><li><a href="#fields-overview">\u6982\u89c8</a></li><li><a href="#fields-options">\u57df\u53c2\u6570</a></li><li><a href="#fields-conditional">\u57df\u6761\u4ef6</a></li><li><a href="#fields-watching">\u57df\u76d1\u542c</a></li><li><a href="#fields-underscoremethods">Underscore\u65b9\u6cd5</a></li><li class="nav-label"><a href="#relationships">\u5173\u7cfb</a></li><li><a href="#relationship-fields">\u5173\u7cfb\u57df</a></li><li><a href="#relationship-definitions">\u5173\u7cfb\u5b9a\u4e49</a></li><li><a href="#relationship-queries">\u52a0\u8f7d\u76f8\u5173\u6761\u76ee</a></li><li class="nav-label"><a href="#fieldtypes">\u57df\u7c7b\u578b</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li></ul>')}else{var f=0;for(var c in b){f++;var g=b[c];g.value==e.value&&"getting-started"==g.value&&d.push('<ul><li class="nav-label"><a href="#introduction">\u4ecb\u7ecd</a></li><li><a href="#introduction-prerequisites">\u524d\u63d0\u6761\u4ef6</a></li><li><a href="#introduction-productionvsdevelopment">\u751f\u4ea7 vs \u5f00\u53d1</a></li><li class="nav-label"><a href="#gettingstarted">\u5165\u95e8</a></li><li><a href="#gettingstarted-usingyeoman">\u4f7f\u7528Yeoman\u751f\u6210\u5668</a></li><li><a href="#gettingstarted-startinganewproject">\u5f00\u59cb\u4e00\u4e2a\u65b0\u9879\u76ee</a></li><li><a href="#gettingstarted-projectstructure">\u9879\u76ee\u7ed3\u6784</a></li><li class="nav-label"><a href="#models">\u6a21\u578b</a></li><li><a href="#models-authentication">\u8ba4\u8bc1\u4e0e\u4f1a\u8bdd\u7ba1\u7406</a></li><li class="nav-label"><a href="#routesviews">\u8def\u7531 &amp; \u89c6\u56fe</a></li><li><a href="#routesviews-settingup">\u8bbe\u7f6e\u8def\u7531\u548c\u4e2d\u95f4\u4ef6</a></li><li><a href="#routesviews-middleware">\u5e38\u7528\u8def\u7531\u4e2d\u95f4\u4ef6</a></li><li><a href="#routesviews-firstview">\u4f60\u7684\u7b2c\u4e00\u4e2a\u89c6\u56fe</a></li><li><a href="#routesviews-templates">\u6a21\u677f</a></li><li><a href="#routesviews-publicassets">\u516c\u5171\u8d44\u4ea7</a></li><li class="nav-label"><a href="#runningyourapp">\u8fd0\u884cApp</a></li><li><a href="#runningyourapp-writingupdates">\u7f16\u5199\u66f4\u65b0</a></li><li><a href="#runningyourapp-startingkeystone">\u542f\u52a8Keystone</a></li><li><a href="#runningyourapp-nextstep">\u4e0b\u4e00\u6b65</a></li></ul>'),g.value==e.value&&"configuration"==g.value&&d.push('<ul><li class="nav-label"><a href="#options">Keystone \u53c2\u6570</a></li><li><a href="#options-concepts">\u8bbe\u7f6e\u53c2\u6570</a></li><li><a href="#options-project">\u9879\u76ee\u53c2\u6570</a></li><li><a href="#options-server">Web\u670d\u52a1\u5668\u53c2\u6570</a></li><li><a href="#options-ssl">SSL\u53c2\u6570</a></li><li><a href="#options-database">\u6570\u636e\u5e93\u4e0e\u7528\u6237\u8ba4\u8bc1\u53c2\u6570</a></li><li><a href="#options-unix-socket">Unix Socket\u53c2\u6570</a></li><li><a href="#options-ui">\u7ba1\u7406\u5458\u754c\u9762\u53c2\u6570</a></li><li class="nav-label"><a href="#services">\u670d\u52a1</a></li><li><a href="#services-google-analytics">\u8c37\u6b4c\u5206\u6790</a></li><li><a href="#services-google-maps">\u8c37\u6b4c\u5730\u56fe</a></li><li><a href="#services-amazons3">\u4e9a\u9a6c\u900a S3</a></li><li><a href="#services-azure">\u5fae\u8f6fAzure\u5b58\u50a8</a></li><li><a href="#services-cloudinary">Cloudinary</a></li><li><a href="#services-embedly">Embed.ly</a></li><li><a href="#services-mandrill">Mandrill</a></li><li class="nav-label"><a href="#updates">\u5e94\u7528\u7a0b\u5e8f\u66f4\u65b0</a></li><li class="nav-label"><a href="#headless">\u7981\u7528\u7ba1\u7406\u5458\u754c\u9762</a></li></ul>'),g.value==e.value&&"database"==g.value&&d.push('<ul><li class="nav-label"><a href="#concepts">\u6982\u5ff5</a></li><li class="nav-label"><a href="#lists">\u5217\u8868</a></li><li><a href="#lists-usage">\u7528\u6cd5</a></li><li><a href="#lists-example">\u793a\u4f8b</a></li><li><a href="#lists-options">List\u53c2\u6570</a></li><li><a href="#lists-plugins">Schema\u63d2\u4ef6</a></li><li><a href="#lists-querying">\u67e5\u8be2\u6570\u636e</a></li><li><a href="#lists-paginate">\u5206\u9875\u67e5\u8be2</a></li><li><a href="#lists-creating">\u521b\u5efa\u6761\u76ee</a></li><li><a href="#lists-deleting">\u5220\u9664\u6761\u76ee</a></li><li class="nav-label"><a href="#headings">\u6807\u9898</a></li><li class="nav-label"><a href="#fields">\u57df</a></li><li><a href="#fields-overview">\u6982\u89c8</a></li><li><a href="#fields-options">\u57df\u53c2\u6570</a></li><li><a href="#fields-conditional">\u57df\u6761\u4ef6</a></li><li><a href="#fields-watching">\u57df\u76d1\u542c</a></li><li><a href="#fields-underscoremethods">Underscore\u65b9\u6cd5</a></li><li class="nav-label"><a href="#relationships">\u5173\u7cfb</a></li><li><a href="#relationship-fields">\u5173\u7cfb\u57df</a></li><li><a href="#relationship-definitions">\u5173\u7cfb\u5b9a\u4e49</a></li><li><a href="#relationship-queries">\u52a0\u8f7d\u76f8\u5173\u6761\u76ee</a></li><li class="nav-label"><a href="#fieldtypes">\u57df\u7c7b\u578b</a></li><li><a href="#fieldtypes-boolean">Boolean</a></li><li><a href="#fieldtypes-text">Text</a></li><li><a href="#fieldtypes-textarea">Textarea</a></li><li><a href="#fieldtypes-email">Email</a></li><li><a href="#fieldtypes-url">Url</a></li><li><a href="#fieldtypes-html">Html</a></li><li><a href="#fieldtypes-color">Color</a></li><li><a href="#fieldtypes-date">Date</a></li><li><a href="#fieldtypes-datetime">Datetime</a></li><li><a href="#fieldtypes-key">Key</a></li><li><a href="#fieldtypes-number">Number</a></li><li><a href="#fieldtypes-money">Money</a></li><li><a href="#fieldtypes-select">Select</a></li><li><a href="#fieldtypes-markdown">Markdown</a></li><li><a href="#fieldtypes-name">Name</a></li><li><a href="#fieldtypes-password">Password</a></li><li><a href="#fieldtypes-location">Location</a></li><li><a href="#fieldtypes-cloudinaryimage">CloudinaryImage</a></li><li><a href="#fieldtypes-cloudinaryimages">CloudinaryImages</a></li><li><a href="#fieldtypes-localfile">LocalFile</a></li><li><a href="#fieldtypes-s3file">S3 File</a></li><li><a href="#fieldtypes-azurefile">AzureFile</a></li><li><a href="#fieldtypes-embedly">Embedly</a></li></ul>')}}}.call(this),d.push("</ul>")),d.push("</nav>")},d.push('<div class="page-header"><div class="container"><h1>\u89c6\u56fe</h1><p class="lead">\u4f7f\u7528keystone\u5e94\u7528\u7a0b\u5e8f\u7684\u89c6\u56fe</p></div></div><div class="container"><div class="row"><div class="col-sm-3">'),e.docsnav(f),d.push('</div><div class="col-sm-9"><div class="docs-content"><h2><a name="concepts"></a>\u6982\u5ff5</h2><p>\u501f\u52a9View\u7c7b\uff0c\u4f60\u4e0d\u7528\u8fc7\u4e8e\u62c5\u5fc3\u5f02\u6b65\u4ee3\u7801\uff0c\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u7f16\u5199\u51fa\u63cf\u8ff0\u6027\u7684\u8def\u7531\u5904\u7406\u5668\u3002\u7531\u4e8enode.js\u7684\u5f02\u6b65\u6027\uff0c\u5728\u5904\u7406\u51e0\u4e2a\u4e0d\u540c\u7684\u5206\u652f\u65f6\uff0cExpress\u7684\u8def\u7531\u53ef\u80fd\u4f1a\u53d8\u5f97\u50cf\u4e00\u56e2\u4e71\u9ebb\u4e00\u6837\u3002</p><a name="queues"></a><h2>\u961f\u5217</h2><a name="queue-init"></a><h3>Init</h3><p>\u6ce8\u518c\u9996\u5148\u8fd0\u884c\u7684\u56de\u8c03\u51fd\u6570\u3002</p><a name="queue-action"></a><h3>Action</h3><p>`view.on(\'{REST verb}\', callback)`</p><p>\u8fd9\u4e2a\u65b9\u6cd5\u8ddfexpress\u4e2d\u95f4\u4ef6\u6709\u5f02\u66f2\u540c\u5de5\u4e4b\u5999\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u4e2d\u95f4\u53c2\u6570\u8ddfon\u5339\u914d\u3002</p><div class="code-header"><h4>/views/form.js</h4></div><pre><code class="language-javascript">view.on(\'post\', { action: \'contact\' }, function() {\n     //\u5904\u7406contact\u8868\u5355\u7684\u63d0\u4ea4\n});\nview.on(\'post\', { action: \'comment\' }, function() {\n    // \u8ba9\u7528\u6237\u53d1\u8bc4\u8bba\n});</code></pre><p>\u5bf9\u4e8e\u6bd4\u8f83\u590d\u6742\u7684\u60c5\u51b5\uff0c\u6bd4\u5982\u540c\u4e00\u9875\u9762\u4e2d\u6709\u591a\u4e2a\u8868\u5355\u65f6\uff0c\u8fd9\u4e2a\u6bd4\u8f83\u5b9e\u7528\u3002\u6bcf\u4e2a\u8868\u5355\u90fd\u4f1aPOST\u5230\u540c\u4e00\u4e2aurl\u4e0a\uff0c\u4f46\u5176\u4e2d\u90fd\u4f1a\u6709\u4e00\u4e2a\u540d\u4e3aaction\u7684\u9690\u85cf\u57df\u3002</p><a name="queue-render"></a><h3>Render</h3><p>\u6700\u540e\u6267\u884c\u7684\u961f\u5217\u3002</p></div></div></div></div>')}.call(this,"docsnav"in f?f.docsnav:"undefined"!=typeof docsnav?docsnav:void 0,"docssection"in f?f.docssection:"undefined"!=typeof docssection?docssection:void 0),d.join("")},"zh/pages/examples":function(a){var b=[];return b.push('<div class="page-header"><div class="container"><h1>\u793a\u4f8b</h1><p class="lead">\u4e0b\u9762\u8fd9\u4e9b\u4f8b\u5b50\u5f88\u597d\u5730\u5c55\u793a\u4e86Keystone\u7684\u80fd\u529b\uff0c\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u5b83\u7684\u5404\u79cd\u529f\u80fd\u3002</p></div></div><div style="margin-bottom: 3em;" class="container-sm"><a name="app"></a><h2>\u5e94\u7528\u7a0b\u5e8f</h2><a name="app-demo"></a><h3>\u6f14\u793aApp</h3><p>\u6f14\u793aapp\u662f\u4e2a\u7b80\u5355\u5b9e\u73b0\uff0c\u6f14\u793a\u4e86\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u535a\u5ba2\u3001\u7167\u7247\u5e93\u548c\u8054\u7cfb\u8868\u5355\uff0c\u4ee5\u53ca\u5982\u4f55\u8bbe\u7f6e\u4f1a\u8bdd\u7ba1\u7406\u3001\u9519\u8bef\u5904\u7406\u548ccsv\u4e0b\u8f7d\u3002</p><p>\u4f60\u8fd8\u53ef\u4ee5\u7528demo\u8d26\u53f7\u767b\u5f55\u5230Keystone\u7ba1\u7406\u754c\u9762\u4e2d\u770b\u770b\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002</p><ul class="list-inline"><li><a href="http://demo.keystonejs.com" target="_blank" title="Demo website" class="btn btn-primary">\u6253\u5f00\u7f51\u7ad9</a></li><li><a href="http://github.com/JedWatson/keystone-demo" target="_blank" title="View on GitHub" class="btn btn-default">\u67e5\u770bGitHub\u9879\u76ee</a></li></ul><a name="app-sydjs"></a><h3>SydJS\u7f51\u7ad9</h3><p><a href=\'http://www.thinkmill.com.au/\' target=\'_blank\'>Thinkmill</a>\u7684\u56e2\u961f\u7528Keystone\u4e3aSydJS\uff08\u6089\u5c3cJavascript\u805a\u4f1a\uff09\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7f51\u7ad9\u3002</p><p>\u5b83\u662f\u4e00\u4e2a\u805a\u4f1a\u3001\u4f1a\u5458\u3001\u94fe\u63a5\u3001\u535a\u5ba2\u3001\u7ec4\u7ec7\u548c\u6559\u7ec3\u7684\u6570\u636e\u5e93\uff0c\u8fd8\u652f\u6301\u521b\u5efa\u8d26\u53f7\uff0c\u4ee5\u53ca\u7528Facebook\u3001Twitter\u548cGitHub\u8d26\u53f7\u767b\u5f55\u3002</p><p>\u5b83\u8fd8\u5305\u542b\u65b0\u7684\u5ba2\u6237\u7aef\u5185\u5bb9\u7ba1\u7406\u529f\u80fd\uff0c\u6709\u4f9b\u4f1a\u5458\u7ba1\u7406\u81ea\u5df1\u6863\u6848\u3001\u54cd\u5e94\u805a\u4f1a\u548c\u63d0\u4ea4\u6587\u7ae0\u548c\u94fe\u63a5\u7684\u9875\u9762\u3002</p><ul class="list-inline"><li><a href="http://www.sydjs.com" target="_blank" title="Demo website" class="btn btn-primary">\u6253\u5f00\u7f51\u7ad9</a></li><li><a href="http://github.com/JedWatson/sydjs-site" target="_blank" title="View on GitHub" class="btn btn-default">\u67e5\u770bGitHub\u9879\u76ee</a></li></ul><a name="production"></a><h2>\u7528\u4e8e\u751f\u4ea7\u4e2d\u7684KeystoneJS</h2><p>\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u7531KeystoneJS\u652f\u6491\u7684\u7f51\u7ad9\u548c\u5e94\u7528\u7a0b\u5e8f\u8d8a\u6765\u8d8a\u591a - \u8fd9\u91cc\u6709\u51e0\u4e2a\u6211\u4eec\u6bd4\u8f83\u559c\u6b22\u7684\u3002</p><p>\u4f60\u542f\u7528\u4e86\u4f7f\u7528KeystoneJS\u7684\u7f51\u7ad9\u5417\uff1f\u544a\u8bc9\u6211\u4eec\u5427\uff01 Tweet <a href="https://twitter.com/KeystoneJS" target="_blank">@KeystoneJS</a></p><h3>\u5236\u4f5c &amp; \u6784\u5efa</h3><p>Make &amp; Build is a team of digital craftsmen in Atlanta, GA, and you can read their slidedeck about moving from Wordpress to KeystoneJS <a href="https://s3.amazonaws.com/mnb_keystone/slidedecks/keystonejs.pdf" target="_blank" title="Make &amp; Build Transition to KeystoneJS Slidedeck">here</a>.</p><ul class="list-inline"><li><a href="http://makeandbuild.com" target="_blank" title="Make &amp; Build" class="btn btn-primary">Launch the site</a></li></ul><h3>Gold Class Butler</h3><p>KeystoneJS powers the API and payment integration behind Event Cinemas\' mobile app for ordering food and drink while you\'re watching a movie.</p><ul class="list-inline"><li><a href="http://www.goldclassbutler.com.au" target="_blank" title="Gold Class Butler" class="btn btn-primary">Launch the site</a></li></ul><h3>Macmillan Connect</h3><p>Macmillan Education\'s next generation of learning applications is powered by KeystoneJS, which provides their licensing system, back-end API, progress synchronisation and mark book generation for teachers.</p><ul class="list-inline"><li><a href="http://www.macmillanconnect.com.au" target="_blank" title="Macmillan Connect" class="btn btn-primary">Launch the site</a></li></ul><h3>Yoga Australia</h3><p>The Yoga Teachers Association of Australia\'s website and back-end management system is built with KeystoneJS.</p><ul class="list-inline"><li><a href="http://www.yogaaustralia.org.au" target="_blank" title="Yoga Australia" class="btn btn-primary">Launch the site</a></li></ul><h3>Suit Shop</h3><p>KeystoneJS is behind the beautiful design, dynamic content and appointment setting features and customer area of Suit Shop\'s website.</p><ul class="list-inline"><li><a href="http://www.suitshop.com.au" target="_blank" title="Suit Shop" class="btn btn-primary">Launch the site</a></li></ul><h3>Tim Pietrusky</h3><p>Tim has created a unique format for his personal blog, to go with the great content. You can read about his experience transitioning to KeystoneJS in <a href="http://timpietrusky.com/restart">this post</a>.</p><ul class="list-inline"><li><a href="http://timpietrusky.com" target="_blank" title="Tim Pietrusky" class="btn btn-primary">Launch the site</a></li></ul><h3>BodyMindLife</h3><p>BodyMindLife\'s KeystoneJS-powered website has dynamic content, events, timetables, and pass purchasing integrated with the MindBodyOnline studio management system.</p><ul class="list-inline"><li><a href="http://www.bodymindlife.com.au" target="_blank" title="BodyMindLife Yoga Studio" class="btn btn-primary">Launch the site</a></li></ul><h3>ExhibitionsRUs</h3><p>The ExhibitionsRUs website is a UK e-commerce site with a product catalogue and shopping cart, built by <a href="http://prowebsoftware.net" target="_blank">ProWebSoftware</a> with KeystoneJS.</p><ul class="list-inline"><li><a href="https://www.exhibitionsrus.co.uk" target="_blank" title="ExhibitionsRUs" class="btn btn-primary">Launch the site</a></li></ul><h3>Hood (Social Network)</h3><p>The idea behind this site is to connect positive people of cheerful spirit and a good heart in every possible way.</p><ul class="list-inline"><li><a href="http://www.hood.rs/" target="_blank" title="Hood.rs" class="btn btn-primary">Launch the site</a></li></ul><h3>CorkDev.io (Tech Meetup)</h3><p>corkdev.io is an open forum of professionals, hackers, architects and software engineers in Cork, Ireland.</p><ul class="list-inline"><li><a href="http://corkdev.io/" target="_blank" title="CorkDev.io" class="btn btn-primary">Launch the site</a></li></ul><h3>HS Hackers Philly</h3><p>The High School Hackers meetup crew in Philly have done a great job of taking our SydJS site and making it their own.</p><ul class="list-inline"><li><a href="http://hshackers.org" target="_blank" title="HS Hackers Philly" class="btn btn-primary">Launch the site</a></li></ul></div>'),
b.join("")},"zh/pages/home":function(a){var c,d=[],e=a||{};return function(a){d.push('<div class="home-header"><div class="container"><img src="/images/logo-inverted.svg" alt="KeystoneJS" width="80" height="81"/><h1>\u4ee5Express\u548cMongoDB\u4e3a\u57fa\u7840\u642d\u5efa\u7684Node.js CMS\u548cweb\u5e94\u7528\u7a0b\u5e8f\u5e73\u53f0\u3002</h1><div class="home-header-buttons"><a href="/zh/getting-started" title="KeystoneJS getting started guide" class="btn btn-lg btn-primary"><span class="hidden-xs">\u5165\u95e8</span><span class="visible-xs">\u5f00\u59cb</span></a><a href="http://demo.keystonejs.com" target="_blank" title="Demo Website (new window)" class="btn btn-lg btn-link hidden-xs">\u8bd5\u7528Demo</a></div><ul class="home-header-list-links"><li><a href="/zh/docs" title="KeystoneJS Documentation">\u6587\u6863</a></li><li class="hidden-xs"><a href="/zh/examples" title="Sample Applications">\u4f8b\u5b50</a></li><li>Current version '+b.escape(null==(c=a)?"":c)+'</li><li><a href="https://github.com/keystonejs/keystone/blob/master/HISTORY.md" target="_blank" title="View Changelog on GitHub">\u65b0\u53d8\u5316</a></li><li>Keystone\u662f\u514d\u8d39\u7684\u5f00\u6e90\u8f6f\u4ef6\u3002(MIT \u6388\u6743)</li></ul><ul class="home-header-list-social"><li><a href="https://twitter.com/keystonejs" target="_blank"><i class="entypo-social entypo-twitter"></i><span class="home-header-social-item">Follow on Twitter</span></a></li><li><a href="http://github.com/keystonejs/keystone" target="_blank"><i class="entypo-social entypo-github"></i><span class="home-header-social-item">GitHub \u9879\u76ee</span></a></li></ul></div></div><section class="intro-section building-section"><div class="container"><div class="section-header"><h2>\u5728\u4f60\u9700\u8981\u7684\u529f\u80fd\u4e0a\u9886\u5148\u4e00\u6b65</h2><p class="lead">\u5728Node.js\u4e2d\uff0c\u7528Keystone\u642d\u5efa\u6570\u636e\u9a71\u52a8\u7684\u7f51\u7ad9\u3001\u5e94\u7528\u7a0b\u5e8f\u548cAPI\u662f\u6700\u5bb9\u6613\u7684\u3002</p></div><div class="row"><div class="col-sm-6 col-md-4 col-lg-3"><div class="feature-panel"><span class="feature-icon entypo entypo-leaf"></span><div class="feature-content"><h4>Express.js\u548cMongoDB</h4><p>Keystone\u4f1a\u4e3a\u4f60\u914d\u7f6eexpress\uff08node.js\u4e8b\u5b9e\u4e0a\u7684Web\u670d\u52a1\u5668\uff09\uff0c\u7528Mongoose\uff08\u9886\u5148\u7684ODM\u5305\uff09\u8fde\u63a5\u4f60\u7684MongoDB\u6570\u636e\u5e93\u3002 </p></div></div></div><div class="col-sm-6 col-md-4 col-lg-3"><div class="feature-panel"><span class="feature-icon entypo entypo-shuffle"></span><div class="feature-content"><h4>\u52a8\u6001\u8def\u7531</h4><p>Keystone\u4ece\u8bbe\u7f6eMV*\u7a0b\u5e8f\u7684\u6700\u4f73\u5b9e\u8df5\u5165\u624b\uff0c\u8ba9\u4f60\u7ba1\u7406\u6a21\u677f\u3001\u89c6\u56fe\u548c\u8def\u7531\u53d8\u5f97\u66f4\u5bb9\u6613\u3002</p></div></div></div><div class="col-sm-6 col-md-4 col-lg-3"><div class="feature-panel"><span class="feature-icon entypo entypo-picture"></span><div class="feature-content"><h4>\u6570\u636e\u5e93\u57df</h4><p>ID\u3001String\u3001Boolean\u3001Date\u548cNumber\u662f\u6570\u636e\u5e93\u7684\u6784\u4ef6\u3002Keystone\u4ee5\u5b83\u4eec\u4e3a\u57fa\u7840\u5b9e\u73b0\u4e86\u5728\u73b0\u5b9e\u5de5\u4f5c\u4e2d\u66f4\u5b9e\u7528\u7684\u57df\u7c7b\u578b\uff0c\u6bd4\u5982name\u3001email\u3001password\u3001address\u3001image\u548crelationship (\u53ca\u5176\u5b83)</p></div></div></div><div class="col-sm-6 col-md-4 col-lg-3"><div class="feature-panel"><span class="feature-icon entypo entypo-light-bulb"></span><div class="feature-content"><h4>\u81ea\u52a8\u751f\u6210\u7ba1\u7406\u5458\u754c\u9762</h4><p>\u4e0d\u7ba1\u4f60\u5728\u642d\u5efa\u5e94\u7528\u7a0b\u5e8f\uff0c\u6216\u8005\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f5c\u4e3a\u6570\u636e\u5e93\u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf\u65f6\u662f\u5426\u7528\u5b83\uff0cKeystone\u7684\u7ba1\u7406\u5458\u754c\u9762\u90fd\u80fd\u8282\u7701\u4f60\u7684\u65f6\u95f4\uff0c\u8ba9\u4f60\u7ba1\u7406\u6570\u636e\u66f4\u5bb9\u6613\u3002</p></div></div></div><div class="col-sm-6 col-md-4 col-lg-3"><div class="feature-panel"><span class="feature-icon entypo entypo-pencil"></span><div class="feature-content"><h4>\u7f16\u7801\u66f4\u7b80\u5355</h4><p>\u6709\u65f6\u5373\u4fbf\u505a\u7684\u4e8b\u60c5\u7b80\u5355\uff0c\u5f02\u6b65\u4ee3\u7801\u4e5f\u4f1a\u53d8\u5f97\u590d\u6742\u3002Keystone\u8ba9\u7b80\u5355\u7684\u4e8b\u60c5\uff08\u6bd4\u5982\u5728\u89c6\u56fe\u4e2d\u663e\u793a\u4e4b\u524d\u52a0\u8f7d\u6570\u636e\uff09\u4fdd\u6301\u7b80\u5355\u3002</p></div></div></div><div class="col-sm-6 col-md-4 col-lg-3"><div class="feature-panel"><span class="feature-icon entypo entypo-docs"></span><div class="feature-content"><h4>\u8868\u5355\u5904\u7406</h4><p>\u8981\u9a8c\u8bc1\u8868\u5355\u3001\u4e0a\u6b21\u56fe\u7247\u6216\u7528\u4e00\u884c\u4ee3\u7801\u66f4\u65b0\u6570\u636e\u5e93\uff1f\u57fa\u4e8e\u4f60\u5df2\u7ecf\u5b9a\u4e49\u7684\u6570\u636e\u6a21\u578b\uff0cKeystone\u53ef\u4ee5\u505a\u5230\u3002</p></div></div></div><div class="col-sm-6 col-md-4 col-lg-3"><div class="feature-panel"><span class="feature-icon entypo entypo-users"></span><div class="feature-content"><h4>\u4f1a\u8bdd\u7ba1\u7406</h4><p>Keystone\u81ea\u5e26\u4e86\u4f1a\u8bdd\u7ba1\u7406\u548c\u8ba4\u8bc1\u529f\u80fd\uff0c\u5305\u62ec\u5bc6\u7801\u57df\u7684\u81ea\u52a8\u52a0\u5bc6\u3002</p></div></div></div><div class="col-sm-6 col-md-4 col-lg-3"><div class="feature-panel"><span class="feature-icon entypo entypo-paper-plane"></span><div class="feature-content"><h4>\u53d1\u9001Email</h4><p>\u501f\u52a9Keystone\uff0c\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u8f7b\u677e\u5730\u8bbe\u7f6e\u3001\u9884\u89c8\u548c\u53d1\u9001\u57fa\u4e8e\u6a21\u677f\u7684email\u3002\u5b83\u8fd8\u96c6\u6210\u4e86Mandrill (Mailchimp\u5353\u8d8a\u7684\u4e8b\u52a1\u6027email\u53d1\u9001\u670d\u52a1)</p></div></div></div><div class="col-sm-6 col-md-4 col-lg-3 hidden-sm hidden-lg"><div class="feature-panel"><span class="feature-icon entypo entypo-publish"></span><div class="feature-content"><h4>\u7ba1\u7406\u5f0f\u5347\u7ea7</h4><p>Keystone\u5305\u542b\u4e00\u4e2a\u53ef\u9009\u7684\u5347\u7ea7\u6846\u67b6\uff0c\u53ef\u4ee5\u66ff\u4f60\u8fd0\u884c\u5347\u7ea7\u5347\u7ea7\u811a\u672c\uff0c\u65b9\u4fbf\u4ece\u5f00\u53d1\u73af\u5883\u5411\u751f\u4ea7\u73af\u5883\u5207\u6362\u3002</p></div></div></div></div></div></section><section class="intro-section admin-section"><div class="container"><div class="section-header"><h2>\u7ba1\u7406\u754c\u9762</h2><p class="lead">Keystone\u57fa\u4e8e\u6a21\u578b\u7ed9\u4f60\u751f\u6210\u4e00\u4e2a\u6f02\u4eae\u7684\u3001\u53ef\u5b9a\u5236\u7684\u7ba1\u7406\u754c\u9762</p></div></div><div class="container-sm"><div class="row"><div class="col-sm-6"><h3>\u4f60\u9700\u8981\u7684\u4e00\u5207</h3><p>\u521b\u5efa\u3001\u7ba1\u7406\u3001\u7f16\u8f91\u3001\u5220\u9664\u3002Keystone\u7684\u7ba1\u7406\u754c\u9762\u4f1a\u63d0\u4f9b\u57fa\u672c\u529f\u80fd\uff0c\u6240\u4ee5\u4f60\u5c31\u4e0d\u7528\u81ea\u5df1\u505a\u4e86\u3002</p><p>\u914d\u7f6e\u54ea\u4e9b\u57df\u53ef\u4ee5\u7f16\u8f91\uff0c\u54ea\u4e9b\u6a21\u578b\u53ef\u4ee5\u521b\u5efa\uff0c\u5e76\u6309\u4f60\u7684\u5fc3\u610f\u5b9a\u5236\u4e00\u5207\u3002</p></div><div class="col-sm-6"><div class="admin-image"><img src="/images/home/inline-item-creation.png" class="img-responsive img-circle"/></div></div></div><div class="row"><div class="col-sm-6 col-sm-push-6"><h3>\u54cd\u5e94\u5f0f &amp; \u4e3b\u9898\u5316</h3><p>\u60f3\u5728\u8def\u4e0a\u7528\u4f60\u7684CMS\uff1fKeystone\u53ef\u4ee5\u8ba9\u4f60\u5f97\u507f\u6240\u613f\u3002</p><p>Keystone\u7684\u7ba1\u7406\u5458\u754c\u9762\u662f\u5728Bootstrap 3\u57fa\u7840\u4e0a\u505a\u7684\uff0c\u53ef\u4ee5\u9002\u5e94\u6240\u6709\u5c4f\u5e55\u5c3a\u5bf8\u548c\u8bbe\u5907\u3002</p><p>\u4f60\u4e5f\u53ef\u4ee5\u7528\u4e92\u8054\u7f51\u4e0a\u6700\u6d41\u884c\u7684css\u6846\u67b6\u4fee\u6539\u4e3b\u9898 (\u6216\u8005\u53bb\u6389\u6211\u4eec\u7684)\u3002</p></div><div class="col-sm-6 col-sm-pull-6"><div class="admin-image"><img src="/images/home/responsive-design.png" class="img-responsive img-circle"/></div></div></div><div class="row"><div class="col-sm-6"><h3>\u7cbe\u5de7\u7684\u8fc7\u6ee4</h3><p>Keystone\u7684\u7ba1\u7406\u754c\u9762\u4e0d\u4ec5\u4ec5\u662f\u641c\u7d22\u548c\u8ba9\u4f60\u57fa\u4e8e\u6570\u636e\u5e93\u4e2d\u7684\u4efb\u4f55\u57df\u53ef\u89c6\u5316\u5730\u521b\u5efa\u81ea\u5df1\u7684\u67e5\u8be2\u3002</p><p>\u6bcf\u79cd\u57df\u7c7b\u578b\u90fd\u6709\u81ea\u5df1\u7684\u89c4\u5219\u548cUI - \u6240\u4ee5\u4f60\u53ef\u4ee5\u6839\u636e\u65e5\u671f\u3001\u4f4d\u7f6e\u7b49\u8fdb\u884c\u8fc7\u6ee4\u3002</p></div><div class="col-sm-6"><div class="admin-image"><img src="/images/home/sophisticated-filtering.png" class="img-responsive img-circle"/></div></div></div><div class="row"><div class="col-sm-6 col-sm-push-6"><h3>\u6f02\u4eae\u7684\u8868\u5355</h3><p>Keystone\u4e0d\u4ec5\u4e86\u89e3\u6570\u636e\u7684\u7ed3\u6784 - \u5b83\u8fd8\u77e5\u9053\u6570\u636e\u7684\u610f\u56fe\u3002</p><p>\u6240\u4ee5\u65e5\u671f\u57df\u6210\u4e86\u65e5\u671f\u9009\u62e9\u5668\uff0cHTML\u57df\u6210\u4e86WYSIWYG\u7f16\u8f91\u5668\uff0c\u5173\u7cfb\u53d8\u6210\u4e86\u641c\u7d22\u6846\u3002</p><p>\u8f93\u5165\u57df\u8fd8\u53ef\u4ee5\u4f9d\u636e\u6761\u4ef6\uff0c\u6240\u4ee5\u590d\u6742\u8868\u5355\u53d8\u7b80\u5355\u4e86\u3002</p></div><div class="col-sm-6 col-sm-pull-6"><div class="admin-image"><img src="/images/home/sophisticated-fields.png" class="img-responsive img-circle"/></div></div></div></div></section><section class="intro-section tools-section"><span class="tool-icon tool-icon__cloud entypo entypo-cloud"></span><span class="tool-icon tool-icon__rocket entypo entypo-rocket"></span><div class="container"><div class="section-header"><h2 class="text-center">\u505a\u4ec0\u4e48\u53d6\u51b3\u4e8e\u4f60\u3002</h2><p class="lead">\u6709\u5f88\u591a\u6846\u67b6\u4f1a\u4e3a\u4f60\u505a\u51b3\u5b9a\uff0c\u8fd8\u6709\u5f88\u591a\u628a\u51b3\u5b9a\u6743\u62ff\u8d70\u4e86\u3002Keystone\u4e0d\u4f1a\u90a3\u6837\u3002\u4f7f\u7528\u9002\u5408\u4f60\u7684\u529f\u80fd\uff0c\u6362\u6389\u4e0d\u5408\u9002\u7684\u3002</p></div><div class="big-icon"><span class="entypo entypo-tools"></span></div><div class="row"><div class="col-sm-6 col-md-3"><h4>\u4ee5Express\u4e3a\u57fa\u7840\u642d\u5efa</h4><p>Keystone\u53ef\u4ee5\u4e3a\u4f60\u914d\u7f6eExpress\uff0c\u6216\u8005\u4f60\u53ef\u4ee5\u63a5\u7ba1\uff0c\u5c06Keystone\u5f53\u4f5cExpress\u4e2d\u95f4\u4ef6\u5bf9\u5f85\u3002</p><p>\u4f60\u4e5f\u53ef\u4ee5\u8f7b\u677e\u5730\u5c06\u5176\u96c6\u6210\u5230\u5df2\u6709\u7684Express\u7a0b\u5e8f\u4e2d\u3002</p></div><div class="col-sm-6 col-md-3"><h4>\u7531MongoDB\u63d0\u4f9b\u52a8\u529b</h4><p>Keystone\u4f7f\u7528Mongoose\uff0c\u7528\u4e8enode.js\u548cMongoDB\u7684\u9886\u5148ODM\uff0c\u8ba9\u4f60\u5728\u4e00\u4e2a\u5730\u65b9\u5b9a\u4e49\u6a21\u5f0f\u3001\n\u9a8c\u8bc1\u89c4\u5219\u548c\u903b\u8f91\u3002</p><p>\u6240\u4ee5\u4efb\u4f55\u53ef\u4ee5\u7528MongoDB\u505a\u7684\u4e1c\u897f\u90fd\u53ef\u4ee5\u7528Keystone\u505a\u3002</p></div><div class="col-sm-6 col-md-3"><h4>\u8f7b\u4fbf\u53c8\u7075\u6d3b</h4><p>Keystone\u8bbe\u8ba1\u7684\u5c3d\u53ef\u80fd\u8f7b\u4fbf - \u4f60\u53ef\u4ee5\u9009\u62e9\u81ea\u5df1\u60f3\u8981\u5f15\u5165\u7684\u529f\u80fd\u3002</p><p>\u521b\u5efa\u4f60\u81ea\u5df1\u7684\u8def\u7531\uff0c\u4f60\u81ea\u5df1\u7684\u6570\u636e\u5e93\u6a21\u5f0f\uff0c\u4f7f\u7528\u4efb\u4f55\u4f60\u559c\u6b22\u7684\u6a21\u677f\u3002</p></div><div class="col-sm-6 col-md-3"><h4>\u53ef\u6269\u5c55</h4><p>node.js\u6700\u597d\u7684\u5730\u65b9\u4e4b\u4e00\u662f\u6709\u5927\u91cf\u4f18\u8d28\u7684\u5305\u3002</p><p>Keystone\u88ab\u8bbe\u8ba1\u6210\u8ba9\u4f60\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u5305\uff0c\u4e0d\u4f1a\u5931\u53bb\u5b83\u4eec\u5e26\u6765\u7684\u597d\u5904\u3002</p></div></div></div></section><section class="intro-section cta-section"><div class="container"><div class="row"><div class="col-sm-6"><div class="left-col"><h3><a href="/zh/getting-started" title="KeystoneJS Getting Started">\u5f00\u59cb &rarr;</a></h3><p class="lead">\u770b\u8d77\u6765\u662f\u4f60\u8981\u627e\u7684\u5417\uff1f\u68c0\u51fa\u5165\u95e8\u6307\u5357\uff0c\u5b66\u4e60\u5982\u4f55\u5728\u4e00\u5206\u949f\u5185\u628a\u5b83\u8dd1\u8d77\u6765\u5427\u3002</p></div></div><div class="col-sm-6"><div class="right-col"><h3><a href="mailto:contact@keystonejs.com">\u8054\u7cfb\u6211\u4eec &rarr;</a></h3><p class="lead">\u5982\u679c\u4f60\u5e0c\u671b\u7528Keystone\u505a\u9879\u76ee\uff0c\u5e0c\u671b\u8d21\u732e\u529b\u91cf\uff0c\u6216\u8005\u5bfb\u6c42\u5546\u4e1a\u652f\u6301\uff0c\u6211\u4eec\u4e50\u4e8e\u542c\u5230\u4f60\u7684\u58f0\u97f3\u3002\u8bf7\u4e0e\u6211\u4eec\u8054\u7cfb\u3002</p></div></div></div></div></section><script async="" src="//platform.twitter.com/widgets.js" charset="utf-8"></script>')}.call(this,"version"in e?e.version:"undefined"!=typeof version?version:void 0),d.join("")},"zh/pages/starting":function(a){var b=[];return b.push('<div class="page-header"><div class="container"><h1>\u5165\u95e8</h1><p class="lead">\u521b\u5efaNode.js\u7f51\u7ad9\u6700\u5feb\u7684\u65b9\u5f0f\u3002\u8981\u6df1\u5165\u5176\u4e2d\uff0c<a href="/zh/docs/getting-started">\u8bf7\u67e5\u9605\u6587\u6863\u3002</a></p></div></div><div class="gs-guide"><div class="gs-guide-section"><div class="container-sm"><div class="gs-guide__header"><h2 class="gs-guide__title"><span class="gs-guide__title-count">1</span><div class="gs-guide__title-label">\u524d\u63d0\u6761\u4ef6</div></h2><div class="gs-guide__subtitle"><p>\u5f00\u59cb\u4e4b\u524d\u5148\u786e\u4fdd\u4f60\u5df2\u7ecf\u5b89\u88c5\u4e86<a href="http://nodejs.org/download" target="_blank">Node.js</a> 0.10+ \u548c<a href="http://www.mongodb.org/downloads" target="_blank">MongoDB</a> v2.4+\u3002</p><p>\u8981\u4f7f\u7528KeystoneJS\uff0c\u4f60\u9700\u8981\u638c\u63e1\u5408\u7406\u7684Javascript\u77e5\u8bc6\uff0c\u5e76\u719f\u6089\u6570\u636e\u5e93\u6982\u5ff5\u4e4b\u7c7b\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u4f1a\u7528 node / npm \u7b49\u3002</p></div></div></div></div><div class="gs-guide-figure gs-guide-figure--prerequisites hidden-xs"><div class="column nodejs"><a href="http://nodejs.org/download/" target="_blank"><div class="logo"><img src="/images/getting-started/nodejs-logo.png" alt="Node.js logo" width="245" height="66"/></div><span class="prerequisite">\u4eceNode.js\u4e0b\u8f7d\u9875\u9762\u4e0b\u8f7d\u5e76\u5b89\u88c5\u7528\u4e8e\u4f60\u7684\u5e73\u53f0\u7684Node.js\u3002</span></a></div><div class="column mongodb"><a href="http://docs.mongodb.org/manual/installation/" target="_blank"><div class="logo"><img src="/images/getting-started/mongodb-logo.png" alt="MongoDB logo" width="294" height="84"/></div><span class="prerequisite">\u67e5\u9605MongoDB\u5b89\u88c5\u6307\u5357\u4e86\u89e3\u5982\u4f55\u5728\u4f60\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u5b89\u88c5MongoDB\u3002</span></a></div></div><div class="gs-guide-section"><div class="container-sm"><div class="gs-guide__header"><h2 class="gs-guide__title"><span class="gs-guide__title-count">2</span><div class="gs-guide__title-label">\u547d\u4ee4</div></h2></div><h3>\u5b89\u88c5\u751f\u6210\u5668</h3><p>\u4f60\u5c06\u8981\u4f7f\u7528\u7531<a href=\'http://yeoman.io/\', target=\'_blank\'>Yeoman</a>\u5236\u4f5c\u7684<a href=\'https://github.com/keystonejs/generator-keystone\', target=\'_blank\'>KeystoneJS \u751f\u6210\u5668</a>\u3002\u5728\u6839\u76ee\u5f55\u8fd0\u884c\uff1a</p><pre class="command-line">npm install -g generator-keystone</pre><h3>\u7ed9\u9879\u76ee\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939</h3><p>\u4f60\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u521b\u5efa\u9879\u76ee\uff1a</p><pre class="command-line">mkdir my-test-project</pre><p>\u7136\u540e\u8fdb\u5165\u65b0\u9879\u76ee\u76ee\u5f55\uff1a</p><pre class="command-line">cd my-test-project</pre><h3>\u8fd0\u884c\u751f\u6210\u5668</h3><pre class="command-line">yo keystone</pre><p>\u751f\u6210\u5668\u4f1a\u95ee\u4f60\u51e0\u4e2a\u95ee\u9898\uff0c\u4e3b\u8981\u662f\u4f60\u60f3\u8981\u4ec0\u4e48\u529f\u80fd\uff0c\u7136\u540e\u8fdb\u884c\u914d\u7f6e\uff0c\u5e76\u628a\u4f60\u9700\u8981\u7684\u6240\u6709\u6587\u4ef6\u590d\u5236\u5230\u4f60\u7684\u9879\u76ee\u76ee\u5f55\u4e2d\u3002</p><p>\u5b83\u8fd8\u4f1a\u4ecenpm\u4e2d\u5b89\u88c5\u4f9d\u8d56\u9879\uff0c\u5e2e\u4f60\u505a\u597d\u51c6\u5907\u3002</p></div></div><div class="gs-guide-figure gs-guide-figure--commands hidden-xs"><div class="window safari"><img src="/images/getting-started/commands-safari.png" alt="Safari window" width="942" height="616"/></div><div class="window terminal"><div class="terminal-cursor"></div><img src="/images/getting-started/commands-terminal.png" alt="Terminal window" width="650" height="437"/></div><div class="figure-shadow"></div></div><div class="gs-guide-section"><div class="container-sm"><div class="gs-guide__header"><h2 class="gs-guide__title"><span class="gs-guide__title-count">3</span><div class="gs-guide__title-label">\u641e\u5b9a\u4e86\uff01</div></h2><p class="gs-guide__subtitle">\u4f60\u521a\u521a\u521b\u5efa\u4e86\u81ea\u5df1\u7684\u7b2c\u4e00\u4e2aKeystoneJS\u9879\u76ee\uff0c\u606d\u559c\u4f60\uff01</p><p class="gs-guide__subtitle">\u50cf\u8fd9\u6837\u5728\u547d\u4ee4\u884c\u4e2d\u8fd0\u884c\u5b83\uff1a</p><pre class="command-line">node keystone</pre><p class="gs-guide__subtitle">\u7136\u540e\u6253\u5f00<a href="http://localhost:3000" target="_blank">http://localhost:3000</a> \u5728\u6d4f\u89c8\u5668\u4e2d\u770b\u770b\u3002</p><p class="gs-guide__subtitle">\u5982\u679c\u4f60\u60f3\u77e5\u9053\u751f\u6210\u5668\u7a76\u7adf\u505a\u4e86\u4ec0\u4e48\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u6211\u4eec\u7684\u5165\u95e8\u6307\u5357\uff0c\u5b83\u4ecb\u7ecd\u4e86\u624b\u52a8\u642d\u5efa\u8fc7\u7a0b\u3002\u5982\u679c\u4f60\u521a\u63a5\u89e6Node.js\uff0c\u770b\u4e00\u4e0b\u5bf9\u4f60\u975e\u5e38\u6709\u5e2e\u52a9\u3002</p><p class="gs-guide__subtitle"><a href="/zh/docs/getting-started">\u67e5\u9605\u5165\u95e8\u6307\u5357 &rarr;</a></p></div></div></div><div class="gs-guide-figure gs-guide-figure--finished wow-much-find hidden-xs"><img src="/images/getting-started/commands-safari.png" alt="Safari window" width="1680" height="600" class="sr-only"/></div><div class="gs-guide-section"><div class="container-sm"><div class="gs-guide__header"><h2 class="gs-guide__title"><span class="gs-guide__title-count">?</span><div class="gs-guide__title-label">\u95ee\u9898</div></h2><p class="gs-guide__subtitle">\u51fa\u9519\u4e86\uff1f\u5e0c\u671b\u4e0b\u9762\u8fd9\u4e9b\u63d0\u793a\u4f1a\u6709\u5e2e\u52a9\u3002</p><h3>\u9519\u8bef\uff01\u8bf7\u8bd5\u7740\u4ee5root/\u7ba1\u7406\u5458\u8eab\u4efd\u91cd\u65b0\u8fd0\u884c\u8be5\u547d\u4ee4\u3002</h3><p>\u5728\u8fd0\u884cnpm install -g generator-keystone\u65f6\uff0c\u4f60\u53ef\u80fd\u4f1a\u9047\u5230EACCES\u9519\u8bef\uff0c\u8ba9\u4f60\u4ee5root/\u7ba1\u7406\u5458\u8eab\u4efd\u91cd\u65b0\u8fd0\u884c\u8fd9\u4e2a\u547d\u4ee4\u3002\u8fd9\u8868\u660e\u6709\u8bb8\u53ef\u6743\u9650\u95ee\u9898\u3002</p><p>\u4f60\u53ef\u4ee5\u5728\u5f00\u53d1\u7cfb\u7edf\u4e2d\u5c06\u76ee\u5f55\u7684\u6240\u6709\u6743\u6539\u6210\u5f53\u524d$USER\uff0c\u8fd9\u6837\u5728\u5b89\u88c5\u975e\u53d7\u4fe1\u4ee3\u7801\u65f6\u5c31\u4e0d\u5fc5\u8fd0\u884csudo\u4e86\uff1a</p><pre>sudo chown -R $USER /usr/local\n \n# \u67d0\u4e9bO/S\u53ef\u80fd\u8fd8\u8981\u6539\u5176\u5b83\u76ee\u5f55\nsudo chown -R $USER /usr/lib/node_modules/</pre><p>\u5728\u751f\u4ea7/\u5171\u4eab\u73af\u5883\u4e2d\uff0c\u4f60\u53ef\u80fd\u5e0c\u671b\u5e26\u7740sudo\u524d\u7f00\u91cd\u65b0\u8fd0\u884cnpm\u547d\u4ee4\uff1a</p><pre>sudo npm install -g generator-keystone</pre><p>\u8981\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605Isaac Schulueter\u5199\u7684Intro to npm\u4e2d\u7684<a href=\'http://foohack.com/2010/08/intro-to-npm/#what_no_sudo\', target=\'_blank\'>"\u4ec0\u4e48, \u6ca1sudo?"</a>\u7ae0\u8282\u3002</p><h3>\u4f60\u8bf4\u627e\u4e0d\u5230\u6211\u7684\u6570\u636e\u5e93\u662f\u4ec0\u4e48\u610f\u601d\uff1f</h3><p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cKeystoneJS\u4f1a\u5728localhost\u7684\u9ed8\u8ba4\u7aef\u53e3\u4e0b\u8fde\u63a5\u8fd0\u884c\u4e2d\u7684MongoDB\u670d\u52a1\u5668\u3002\u5982\u679c\u4f60\u9047\u5230\u8ddfMongoDB\u8fde\u63a5\u76f8\u5173\u7684\u9519\u8bef\uff0c\u8bf7\u786e\u4fddMongoDB\u670d\u52a1\u5668\u8fd0\u884c\u7740\u3002</p><p>\u5982\u679c\u4f60\u8fd8\u6ca1\u88c5MongoDB\uff0c\u8bf7\u6309\u7167\u4e0b\u9762\u7684\u6307\u793a\u64cd\u4f5c\u3002</p><p>\u8981\u8fde\u63a5\u9664localhost\u4e4b\u5916\u7684\u5176\u5b83\u670d\u52a1\u5668\uff0c\u627e\u5230Keystone\u9879\u76ee\u76ee\u5f55\u4e0b\u7684.env\u6587\u4ef6\uff0c\u6dfb\u52a0MONGO_URI\u914d\u7f6e\uff1a</p><pre>MONGO_URI=mongodb://your-server/database-name</pre><h3>\u5176\u5b83\u95ee\u9898\uff1f</h3><p class="gs-guide__subtitle">\u5982\u679c\u4f60\u7684\u95ee\u9898\u8fd8\u6ca1\u89e3\u51b3\uff0c\u53ef\u4ee5\u5230<a href="https://groups.google.com/d/forum/keystonejs" target="_blank">KeystoneJS\u8c37\u6b4c\u7fa4\u7ec4</a>\u4e0a\u627e\u6211\u4eec\u3002</p></div></div></div></div>'),b.join("")},"zh/templates/mixins/docsnav":function(a){var b=[];return b.join("")}},a("default",c)}}});
//# sourceMappingURL=html.js.map